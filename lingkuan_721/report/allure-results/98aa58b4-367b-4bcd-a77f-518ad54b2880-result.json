{"name": "VPS管理-VPS列表列表-清空VPS数据", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/vps/deleteVps?vpsId=540\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success", "trace": "self = <lingkuan_721.test_vps.test_delete.TestDeleteUser object at 0x000001DF6E368700>\napi_session = <lingkuan_721.commons.session.EnvironmentSession object at 0x000001DF6E49C100>\nvar_manager = <lingkuan_721.commons.variable_manager.VariableManager object at 0x000001DF6E2F1F40>\nlogged_session = <lingkuan_721.commons.session.EnvironmentSession object at 0x000001DF6E49C100>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DF6E27CF40>\n\n    @allure.title(\"VPS管理-VPS列表列表-清空VPS数据\")\n    def test_closeVps(self, api_session, var_manager, logged_session, db_transaction):\n        vps_list_id = var_manager.get_variable(\"vps_list_id\")\n        # 定义白名单（不可清空数据的ID列表）\n        WHITE_LIST_IDS = [\"6\", \"91\", \"22\", \"49\"]\n        if vps_list_id in WHITE_LIST_IDS:\n            logging.warning(f\"VPS ID {vps_list_id} 在白名单中，跳过清空数据操作。\")\n            assert False, f\"VPS ID {vps_list_id} 在白名单中，不能清空数据。\"\n    \n        # 1. 发送清空VPS数据请求\n        params = {\"vpsId\": f\"{vps_list_id}\"}\n        response = self.send_get_request(\n            api_session,\n            '/mascontrol/vps/deleteVps',\n            params=params\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"清空VPS数据失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_delete.py:98: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_721.test_vps.test_delete.TestDeleteUser object at 0x000001DF6E368700>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/vps/deleteVps?vpsId=540\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:245: AssertionError"}, "steps": [{"name": "发送GET请求到 /mascontrol/vps/deleteVps", "status": "passed", "attachments": [{"name": "请求参数", "source": "b702cc80-07e1-449e-9a0c-faf4eeff7c47-attachment.json", "type": "application/json"}, {"name": "响应结果", "source": "d4b33c38-fe4f-45ad-b8d9-54c1530f7266-attachment.txt", "type": "text/plain"}], "start": 1753237585265, "stop": 1753237591477}], "attachments": [{"name": "log", "source": "46ecc40e-f34d-4ff1-a57f-325324ef20ef-attachment.txt", "type": "text/plain"}], "start": 1753237585265, "stop": 1753237591481, "uuid": "e5fa2193-2784-4bd8-841b-fee95968a6eb", "historyId": "885b3cd8906307d9c2bb8d8a43c2260c", "testCaseId": "885b3cd8906307d9c2bb8d8a43c2260c", "fullName": "test_vps.test_delete.TestDeleteUser#test_closeVps", "labels": [{"name": "feature", "value": "删除基本账号"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_delete"}, {"name": "subSuite", "value": "TestDeleteUser"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "34084-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_delete"}]}