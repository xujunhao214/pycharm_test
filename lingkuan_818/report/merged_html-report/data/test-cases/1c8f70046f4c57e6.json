{
  "uid" : "1c8f70046f4c57e6",
  "name" : "跟单软件看板-VPS数据-删除策略账号",
  "fullName" : "test_vps.test_delete_scene.TestDeleteTrader#test_delete_vpstrader",
  "historyId" : "4ffe2afeb1e2174a38a66bebe61266f1",
  "time" : {
    "start" : 1755565010092,
    "stop" : 1755565011334,
    "duration" : 1242
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader\nJSON路径: $.msg\n实际值: 请先删除跟单用户\n期望值: success",
  "statusTrace" : "self = <lingkuan_818.test_vps.test_delete_scene.TestDeleteTrader object at 0x000001DFD47346D0>\nvar_manager = <lingkuan_818.commons.variable_manager.VariableManager object at 0x000001DFD49C5190>\nlogged_session = <lingkuan_818.commons.session.EnvironmentSession object at 0x000001DFD4B2CAF0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-删除策略账号\")\n    def test_delete_vpstrader(self, var_manager, logged_session):\n        # 1. 发送删除策略账号请求\n        vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n        response = self.send_delete_request(\n            logged_session,\n            '/subcontrol/trader',\n            json_data=[vps_trader_id]\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"删除策略账号失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_delete_scene.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_818.test_vps.test_delete_scene.TestDeleteTrader object at 0x000001DFD47346D0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader\nE           JSON路径: $.msg\nE           实际值: 请先删除跟单用户\nE           期望值: success\n\ncommons\\api_base.py:366: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1755564989349,
      "stop" : 1755564989349,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1755565008807,
      "stop" : 1755565008807,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755565008807,
      "stop" : 1755565010092,
      "duration" : 1285
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader\nJSON路径: $.msg\n实际值: 请先删除跟单用户\n期望值: success",
    "statusTrace" : "self = <lingkuan_818.test_vps.test_delete_scene.TestDeleteTrader object at 0x000001DFD47346D0>\nvar_manager = <lingkuan_818.commons.variable_manager.VariableManager object at 0x000001DFD49C5190>\nlogged_session = <lingkuan_818.commons.session.EnvironmentSession object at 0x000001DFD4B2CAF0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-删除策略账号\")\n    def test_delete_vpstrader(self, var_manager, logged_session):\n        # 1. 发送删除策略账号请求\n        vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n        response = self.send_delete_request(\n            logged_session,\n            '/subcontrol/trader',\n            json_data=[vps_trader_id]\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"删除策略账号失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_delete_scene.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_818.test_vps.test_delete_scene.TestDeleteTrader object at 0x000001DFD47346D0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader\nE           JSON路径: $.msg\nE           实际值: 请先删除跟单用户\nE           期望值: success\n\ncommons\\api_base.py:366: AssertionError",
    "steps" : [ {
      "name" : "发送 DELETE 请求到 /subcontrol/trader",
      "time" : {
        "start" : 1755565010092,
        "stop" : 1755565011330,
        "duration" : 1238
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "请求详情",
        "time" : {
          "start" : 1755565010092,
          "stop" : 1755565010093,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "2da019443ac1e10e",
          "name" : "请求URL",
          "source" : "2da019443ac1e10e.txt",
          "type" : "text/plain",
          "size" : 18
        }, {
          "uid" : "a62b64e6fa5cf153",
          "name" : "请求头",
          "source" : "a62b64e6fa5cf153.json",
          "type" : "application/json",
          "size" : 234
        }, {
          "uid" : "28760c76aa12504f",
          "name" : "请求体（JSON）",
          "source" : "28760c76aa12504f.json",
          "type" : "application/json",
          "size" : 10
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      }, {
        "name" : "响应详情",
        "time" : {
          "start" : 1755565010326,
          "stop" : 1755565010328,
          "duration" : 2
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "f70eefa183584dba",
          "name" : "响应状态码",
          "source" : "f70eefa183584dba.txt",
          "type" : "text/plain",
          "size" : 3
        }, {
          "uid" : "1cc29bcfc869ebe5",
          "name" : "响应头",
          "source" : "1cc29bcfc869ebe5.json",
          "type" : "application/json",
          "size" : 526
        }, {
          "uid" : "41c514271f30fad",
          "name" : "响应体（JSON）",
          "source" : "41c514271f30fad.json",
          "type" : "application/json",
          "size" : 70
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 6
    } ],
    "attachments" : [ {
      "uid" : "42d02ab66512bc45",
      "name" : "log",
      "source" : "42d02ab66512bc45.txt",
      "type" : "text/plain",
      "size" : 1083
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 7
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755565029951,
      "stop" : 1755565029952,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755565011347,
      "stop" : 1755565011347,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755565011346,
      "stop" : 1755565011346,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "删除跟单账号和策略账号"
  }, {
    "name" : "tag",
    "value" : "url('vps')"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_delete_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestDeleteTrader"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "6824-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_delete_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "url('vps')" ]
  },
  "source" : "1c8f70046f4c57e6.json",
  "parameterValues" : [ ]
}