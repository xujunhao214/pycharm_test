{
  "uid" : "4f6385d24cb377af",
  "name" : "数据库校验-跟单备注生效",
  "fullName" : "test_cloudTrader.test_cloudfixed_annotations.TestCloudStrategyOrderRemark#test_scenario2_verify_remark",
  "historyId" : "290592848132d78b903e151dadb9291b",
  "time" : {
    "start" : 1755512975385,
    "stop" : 1755564916773,
    "duration" : 51941388
  },
  "description" : "\n### 测试说明\n包含三种云策略订单备注场景的完整测试流程：\n1. 场景一：策略有固定注释，跟单无固定注释 → 预期取策略备注\n2. 场景二：策略有固定注释，跟单有固定注释 → 预期取跟单备注\n3. 场景三：策略开启订单备注，跟单无固定注释 → 预期取开仓备注\n",
  "descriptionHtml" : "<h3>测试说明</h3>\n<p>包含三种云策略订单备注场景的完整测试流程：</p>\n<ol>\n<li>场景一：策略有固定注释，跟单无固定注释 → 预期取策略备注</li>\n<li>场景二：策略有固定注释，跟单有固定注释 → 预期取跟单备注</li>\n<li>场景三：策略开启订单备注，跟单无固定注释 → 预期取开仓备注</li>\n</ol>\n",
  "status" : "broken",
  "statusMessage" : "pymysql.err.InterfaceError: (0, '')",
  "statusTrace" : "self = <lingkuan_818.test_cloudTrader.test_cloudfixed_annotations.TestCloudStrategyOrderRemark object at 0x000001FC6D2AD520>\nvar_manager = <lingkuan_818.commons.variable_manager.VariableManager object at 0x000001FC6D833280>\ndb_transaction = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\n\n    @allure.story(\"场景二：策略有固定注释，跟单有固定注释\")\n    @allure.title(\"数据库校验-跟单备注生效\")\n    def test_scenario2_verify_remark(self, var_manager, db_transaction):\n        with allure.step(\"查询订单备注信息\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT fod.comment\n                FROM follow_order_detail fod\n                INNER JOIN follow_order_instruct foi\n                    ON foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n>           db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n\ntest_cloudTrader\\test_cloudfixed_annotations.py:319: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:708: in _execute_query\n    return self.query_database_with_time(\ncommons\\api_base.py:480: in query_database_with_time\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:562: in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\ncommand = 3\nsql = b\"\\n                SELECT fod.comment \\n                FROM follow_order_detail fod\\n                INNER JOIN foll...       AND  foi.create_time BETWEEN NOW() - INTERVAL 1 MINUTE AND NOW() + INTERVAL 1 MINUTE  ORDER BY create_time DESC\"\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1755512925692,
      "stop" : 1755512925693,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755512050295,
      "stop" : 1755512050295,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1755512053639,
      "stop" : 1755512053639,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755512053639,
      "stop" : 1755512054053,
      "duration" : 414
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755512050295,
      "stop" : 1755512050295,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755512975337,
      "stop" : 1755512975384,
      "duration" : 47
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n### 测试说明\n包含三种云策略订单备注场景的完整测试流程：\n1. 场景一：策略有固定注释，跟单无固定注释 → 预期取策略备注\n2. 场景二：策略有固定注释，跟单有固定注释 → 预期取跟单备注\n3. 场景三：策略开启订单备注，跟单无固定注释 → 预期取开仓备注\n",
    "status" : "broken",
    "statusMessage" : "pymysql.err.InterfaceError: (0, '')",
    "statusTrace" : "self = <lingkuan_818.test_cloudTrader.test_cloudfixed_annotations.TestCloudStrategyOrderRemark object at 0x000001FC6D2AD520>\nvar_manager = <lingkuan_818.commons.variable_manager.VariableManager object at 0x000001FC6D833280>\ndb_transaction = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\n\n    @allure.story(\"场景二：策略有固定注释，跟单有固定注释\")\n    @allure.title(\"数据库校验-跟单备注生效\")\n    def test_scenario2_verify_remark(self, var_manager, db_transaction):\n        with allure.step(\"查询订单备注信息\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT fod.comment\n                FROM follow_order_detail fod\n                INNER JOIN follow_order_instruct foi\n                    ON foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n>           db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n\ntest_cloudTrader\\test_cloudfixed_annotations.py:319: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:708: in _execute_query\n    return self.query_database_with_time(\ncommons\\api_base.py:480: in query_database_with_time\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:562: in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\ncommand = 3\nsql = b\"\\n                SELECT fod.comment \\n                FROM follow_order_detail fod\\n                INNER JOIN foll...       AND  foi.create_time BETWEEN NOW() - INTERVAL 1 MINUTE AND NOW() + INTERVAL 1 MINUTE  ORDER BY create_time DESC\"\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError",
    "steps" : [ {
      "name" : "查询订单备注信息",
      "time" : {
        "start" : 1755512975385,
        "stop" : 1755564916772,
        "duration" : 51941387
      },
      "status" : "broken",
      "statusMessage" : "pymysql.err.InterfaceError: (0, '')\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_818\\test_cloudTrader\\test_cloudfixed_annotations.py\", line 319, in test_scenario2_verify_remark\n    db_data = self.wait_for_database_record(\n  File \"D:\\pycharm_test\\lingkuan_818\\commons\\api_base.py\", line 662, in wait_for_database_record\n    final_result = self._execute_query(\n  File \"D:\\pycharm_test\\lingkuan_818\\commons\\api_base.py\", line 708, in _execute_query\n    return self.query_database_with_time(\n  File \"D:\\pycharm_test\\lingkuan_818\\commons\\api_base.py\", line 480, in query_database_with_time\n    return self.query_database(\n  File \"D:\\pycharm_test\\lingkuan_818\\commons\\api_base.py\", line 398, in query_database\n    cursor.execute(final_sql, params)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 562, in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 843, in _execute_command\n    raise err.InterfaceError(0, \"\")\n",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512975385,
          "stop" : 1755512975385,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "c53ededad241fa80",
        "name" : "数据库异常",
        "source" : "c53ededad241fa80.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "b2c82f7ff08c4f83",
        "name" : "数据库异常",
        "source" : "b2c82f7ff08c4f83.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "2dfb368e6b8e676",
        "name" : "数据库异常",
        "source" : "2dfb368e6b8e676.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "14dbdeb61f6177ce",
        "name" : "数据库异常",
        "source" : "14dbdeb61f6177ce.txt",
        "type" : "text/plain",
        "size" : 301
      } ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 4
    } ],
    "attachments" : [ {
      "uid" : "8a6b9e5d4973fffe",
      "name" : "log",
      "source" : "8a6b9e5d4973fffe.txt",
      "type" : "text/plain",
      "size" : 9439
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 5
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755565008467,
      "stop" : 1755565008468,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755565008475,
      "stop" : 1755565008475,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755564916821,
      "stop" : 1755564916824,
      "duration" : 3
    },
    "status" : "broken",
    "statusMessage" : "pymysql.err.InterfaceError: (0, '')\n",
    "statusTrace" : "  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\pycharm_test\\lingkuan_818\\conftest.py\", line 203, in db_transaction\n    db.commit()  # 替代 rollback()，确保看到其他会话的新数据\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 482, in commit\n    self._execute_command(COMMAND.COM_QUERY, \"COMMIT\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 843, in _execute_command\n    raise err.InterfaceError(0, \"\")\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略交易下单-跟随策略账号订单备注（三种情况汇总）"
  }, {
    "name" : "story",
    "value" : "场景二：策略有固定注释，跟单有固定注释"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudfixed_annotations"
  }, {
    "name" : "subSuite",
    "value" : "TestCloudStrategyOrderRemark"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "20452-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudfixed_annotations"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "4f6385d24cb377af.json",
  "parameterValues" : [ ]
}