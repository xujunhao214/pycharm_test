{"name": "数据库校验-复制下单数据", "status": "failed", "statusDetails": {"message": "AssertionError: 总手数与订单详情不匹配，预期: 0.01, 实际: 1.01\nassert False\n +  where False = <built-in function isclose>(0.01, 1.01, rel_tol=1e-09, abs_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   0.01 = float(0.01)\n +    and   1.01 = float(1.01)", "trace": "self = <lingkuan_818.test_cloudTrader.test_cloudOrderSend.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x00000203D3F3B040>\nvar_manager = <lingkuan_818.commons.variable_manager.VariableManager object at 0x00000203D3EC5F10>\ndb_transaction = <pymysql.connections.Connection object at 0x00000203D3E989D0>\n\n    @allure.title(\"数据库校验-复制下单数据\")\n    @pytest.mark.retry(n=3, delay=5)\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.wait_for_database_record_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            # 订单状态校验\n            status = db_data[0][\"status\"]\n            assert status in (0, 1), \\\n                f\"订单状态应为0(处理中)或1(全部成功)，实际为: {status}\"\n            logger.info(f\"订单状态应为0(处理中)或1(全部成功)，实际为: {status}\")\n    \n            # 结束手数校验\n            min_lot_size = db_data[0][\"min_lot_size\"]\n            assert math.isclose(float(0.01), float(min_lot_size), rel_tol=1e-9, abs_tol=1e-9), \\\n                f'结束手数不匹配，预期: 0.01, 实际: {min_lot_size}'\n            logger.info(f'结束手数预期: 0.01, 实际: {min_lot_size}')\n    \n            # 开始手数校验\n            max_lot_size = db_data[0][\"max_lot_size\"]\n            assert math.isclose(float(0.01), float(max_lot_size), rel_tol=1e-9, abs_tol=1e-9), \\\n                f'开始手数不匹配，预期: 0.01, 实际: {max_lot_size}'\n            logger.info(f'开始手数预期: 0.01, 实际: {max_lot_size}')\n    \n            # 总手数与指令表校验\n            total_lots = db_data[0][\"total_lots\"]\n            assert math.isclose(float(0.01), float(total_lots), rel_tol=1e-9, abs_tol=1e-9), \\\n                f'总手数不匹配，预期: 0.01, 实际: {total_lots}'\n            logger.info(f'总手数预期: 0.01, 实际: {total_lots}')\n    \n            # 总手数与订单详情校验\n            size_sum = sum(record[\"size\"] for record in db_data)\n>           assert math.isclose(float(0.01), float(size_sum), rel_tol=1e-9, abs_tol=1e-9), \\\n                f'总手数与订单详情不匹配，预期: {0.01}, 实际: {size_sum}'\nE           AssertionError: 总手数与订单详情不匹配，预期: 0.01, 实际: 1.01\nE           assert False\nE            +  where False = <built-in function isclose>(0.01, 1.01, rel_tol=1e-09, abs_tol=1e-09)\nE            +    where <built-in function isclose> = math.isclose\nE            +    and   0.01 = float(0.01)\nE            +    and   1.01 = float(1.01)\n\ntest_cloudTrader\\test_cloudOrderSend.py:364: AssertionError"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.01-0.01，总手数0.01\n      2. 校验账号的数据是否正确\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：账号的数据正确\n    ", "steps": [{"name": "查询复制订单详情数据", "status": "passed", "steps": [{"name": "等待数据库记录稳定（时区: +05:00，超时: 30秒）", "status": "passed", "start": 1755681763222, "stop": 1755681763222}, {"name": "数据库查询结果（最终稳定结果）", "status": "passed", "attachments": [{"name": "执行SQL", "source": "3815ffa3-7427-4a83-b87b-25f3578ae5d9-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "23837846-1078-4b00-b1a5-432762d0cb39-attachment.txt", "type": "text/plain"}, {"name": "查询结果（共3条，显示前50条）", "source": "aff5f28b-2f4d-4fdb-a47e-f70c2fc59b26-attachment.json", "type": "application/json"}], "start": 1755681772750, "stop": 1755681772751}], "attachments": [{"name": "等待结果", "source": "0b786fbd-d66c-4fae-af42-d0a12f8cebe6-attachment.txt", "type": "text/plain"}], "start": 1755681763222, "stop": 1755681772751}, {"name": "执行复制下单数据校验", "status": "failed", "statusDetails": {"message": "AssertionError: 总手数与订单详情不匹配，预期: 0.01, 实际: 1.01\nassert False\n +  where False = <built-in function isclose>(0.01, 1.01, rel_tol=1e-09, abs_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   0.01 = float(0.01)\n +    and   1.01 = float(1.01)\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_818\\test_cloudTrader\\test_cloudOrderSend.py\", line 364, in test_copy_verify_db\n    assert math.isclose(float(0.01), float(size_sum), rel_tol=1e-9, abs_tol=1e-9), \\\n"}, "start": 1755681772751, "stop": 1755681772751}], "attachments": [{"name": "log", "source": "efffbd74-121b-4ee2-bebb-eb9ed4427531-attachment.txt", "type": "text/plain"}], "start": 1755681763222, "stop": 1755681772752, "uuid": "55626573-57d0-40cf-8643-5521b4b77ef3", "historyId": "210ad1fa5fa2000d698285cdef8ee6d4", "testCaseId": "210ad1fa5fa2000d698285cdef8ee6d4", "fullName": "test_cloudTrader.test_cloudOrderSend.TestMasOrderSend2#test_copy_verify_db", "labels": [{"name": "story", "value": "场景2：手数0.01-0.01，总手数0.01"}, {"name": "feature", "value": "云策略复制下单-正常开仓平仓（多场景汇总）"}, {"name": "tag", "value": "retry(n=3, delay=5)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderSend"}, {"name": "subSuite", "value": "TestCloudStrategyOrder"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "46924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderSend"}]}