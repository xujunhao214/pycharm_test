{"name": "跟单软件看板-VPS数据-策略平仓-跟单账号平仓（shell）", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300152暂无可平仓订单\n期望值: success", "trace": "self = <lingkuan_818.test_vps.test_vps_orderclose.TestVPSOrderSend3 object at 0x000001DFD46748B0>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DFD471C880>\nlogged_session = <lingkuan_818.commons.session.EnvironmentSession object at 0x000001DFD4B55250>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-策略平仓-跟单账号平仓（shell）\")\n    def test_trader_orderclose2(self, var_manager, logged_session):\n        with allure.step(\"1. 发送跟单账号平仓请求（订单方向是shell）\"):\n            # 1. 发送跟单账号平仓请求（订单方向是bug）\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            data = {\n                \"flag\": 0,\n                \"intervalTime\": 0,\n                \"num\": \"\",\n                \"closeType\": 2,\n                \"remark\": \"\",\n                \"symbol\": new_user[\"symbol\"],\n                \"type\": 1,\n                \"traderId\": vps_addslave_id,\n                \"account\": vps_user_accounts_1\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/subcontrol/trader/orderClose',\n                json_data=data,\n            )\n        with allure.step(\"2. 验证响应\"):\n            # 2. 验证响应\n            self.assert_response_status(\n                response,\n                200,\n                \"平仓失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_vps\\test_vps_orderclose.py:569: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_818.test_vps.test_vps_orderclose.TestVPSOrderSend3 object at 0x000001DFD46748B0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            # 处理列表结果（如果只有一个元素则取单个值）\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nE           JSON路径: $.msg\nE           实际值: 300152暂无可平仓订单\nE           期望值: success\n\n..\\lingkuan_817\\commons\\api_base.py:342: AssertionError"}, "description": "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 操作步骤：\n  1. 修改跟单账号的跟单方向为反向，进行开仓\n  2. 跟单账号buy方向进行平仓，平仓失败，给出提示\n  3. 跟单账号shell方向进行平仓，平仓成功\n  4. 策略账号buy方向进行平仓\n- 预期结果：平仓的订单方向功能正确\n", "steps": [{"name": "1. 发送跟单账号平仓请求（订单方向是shell）", "status": "passed", "steps": [{"name": "发送 POST 请求到 /subcontrol/trader/orderClose", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "bfff0bb8-6e31-4424-97c4-ba5fe55f9d75-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "55250076-4002-4520-9482-dda8b8899a8e-attachment.json", "type": "application/json"}, {"name": "请求体（JSON）", "source": "aff96ff9-d91e-48f4-b731-a0760ab5cee6-attachment.json", "type": "application/json"}], "start": 1755512489396, "stop": 1755512489397}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "73e64252-6d45-40bc-b6bb-3cad6c7ef450-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "0fd90a73-5847-46d7-a81a-1751a8ed3fe2-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "6a0099ab-83cb-41cc-aa18-1826ca5d9914-attachment.json", "type": "application/json"}], "start": 1755512489737, "stop": 1755512489739}], "start": 1755512489396, "stop": 1755512490740}], "start": 1755512489396, "stop": 1755512490740}, {"name": "2. 验证响应", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300152暂无可平仓订单\n期望值: success\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_818\\test_vps\\test_vps_orderclose.py\", line 569, in test_trader_orderclose2\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_817\\commons\\api_base.py\", line 342, in assert_json_value\n    assert actual_value == expected_value, (\n"}, "start": 1755512490740, "stop": 1755512490744}], "attachments": [{"name": "log", "source": "1dfc69b2-4650-4c21-9827-c8b5747feab1-attachment.txt", "type": "text/plain"}], "start": 1755512489396, "stop": 1755512490744, "uuid": "3c2a8fa1-676d-4576-85b3-e50ff1897ddb", "historyId": "0767af7aff6e58e7e2a73462ee5890cd", "testCaseId": "0767af7aff6e58e7e2a73462ee5890cd", "fullName": "test_vps.test_vps_orderclose.TestVPSOrderSend3#test_trader_orderclose2", "labels": [{"name": "tag", "value": "url('vps')"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_vps_orderclose"}, {"name": "subSuite", "value": "TestVPSOrderSend3"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "6824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_vps_orderclose"}]}