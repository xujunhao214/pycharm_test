{"name": "数据库校验-交易平仓-指令及订单详情数据检查", "status": "failed", "statusDetails": {"message": "AssertionError: 下单总手数是：1.00，订单详情总手数是：1.9999999999999998\nassert False\n +  where False = <built-in function isclose>(1.0, 1.9999999999999998, rel_tol=1e-09, abs_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   1.0 = float('1.00')\n +    and   1.9999999999999998 = float(1.9999999999999998)", "trace": "self = <lingkuan_816.test_vps.test_masOrderSend.TestMasordersend_allocation object at 0x00000228F0B97D60>\nvar_manager = <lingkuan_816.commons.variable_manager.VariableManager object at 0x00000228F0EAED00>\ndb_transaction = <pymysql.connections.Connection object at 0x00000228F0C547F0>\n\n    @allure.title(\"数据库校验-交易平仓-指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n                    \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            status = db_data[0][\"status\"]\n            assert status in (0, 1), f\"订单状态status应为0(处理中)或1(全部成功)，实际状态为: {status}\"\n            logging.info(f\"订单状态status应为0(处理中)或1(全部成功)，实际状态为: {status}\")\n    \n            # 平仓总手数校验\n            totalSzie = trader_ordersend[\"totalSzie\"]\n            size = [record[\"size\"] for record in db_data]\n            total = sum(size)\n>           assert math.isclose(float(totalSzie), float(total), rel_tol=1e-9, abs_tol=1e-9), \\\n                f'下单总手数是：{totalSzie}，订单详情总手数是：{total}'\nE           AssertionError: 下单总手数是：1.00，订单详情总手数是：1.9999999999999998\nE           assert False\nE            +  where False = <built-in function isclose>(1.0, 1.9999999999999998, rel_tol=1e-09, abs_tol=1e-09)\nE            +    where <built-in function isclose> = math.isclose\nE            +    and   1.0 = float('1.00')\nE            +    and   1.9999999999999998 = float(1.9999999999999998)\n\ntest_vps\\test_masOrderSend.py:208: AssertionError"}, "steps": [{"name": "1. 获取订单详情界面跟单账号数据", "status": "passed", "start": 1755246956737, "stop": 1755246963162}, {"name": "2. 数据校验", "status": "failed", "statusDetails": {"message": "AssertionError: 下单总手数是：1.00，订单详情总手数是：1.9999999999999998\nassert False\n +  where False = <built-in function isclose>(1.0, 1.9999999999999998, rel_tol=1e-09, abs_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   1.0 = float('1.00')\n +    and   1.9999999999999998 = float(1.9999999999999998)\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_816\\test_vps\\test_masOrderSend.py\", line 208, in test_dbquery_addsalve_orderSendclose\n    assert math.isclose(float(totalSzie), float(total), rel_tol=1e-9, abs_tol=1e-9), \\\n"}, "start": 1755246963163, "stop": 1755246963163}], "attachments": [{"name": "log", "source": "68635779-7560-43ec-a477-93123c01d5df-attachment.txt", "type": "text/plain"}], "start": 1755246956737, "stop": 1755246963163, "uuid": "3b4c75e0-42de-4025-af97-59bd0ef1a94c", "historyId": "c068f567e2bbea31bbdc3d0380ac69ca", "testCaseId": "c068f567e2bbea31bbdc3d0380ac69ca", "fullName": "test_vps.test_masOrderSend.TestMasordersend_allocation#test_dbquery_addsalve_orderSendclose", "labels": [{"name": "feature", "value": "VPS交易下单-分配下单"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_masOrderSend"}, {"name": "subSuite", "value": "TestMasordersend_allocation"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21672-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_masOrderSend"}]}