{"name": "数据库校验-云策略列表-批量新增云跟单账号", "status": "failed", "statusDetails": {"message": "Failed: 数据库查询结果为空，新增云跟单账号失败", "trace": "self = <lingkuan_816.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB947670>\nvar_manager = <lingkuan_816.commons.variable_manager.VariableManager object at 0x000001DCDBC27280>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DCDB8DDE20>\n\n    @allure.title(\"数据库校验-云策略列表-批量新增云跟单账号\")\n    def test_dbquery_cloudBatchAdd(self, var_manager, db_transaction):\n        # 1. 获取账号总数和所有账号信息\n        cloudTrader_user_count = var_manager.get_variable(\"cloudTrader_user_count\", 0)\n        if cloudTrader_user_count < 0:\n            pytest.fail(\"未找到需要验证的账号数量，请检查前置步骤\")\n        # 2. 初始化ID列表和计数器\n        cloudTrader_all_count_ids = []\n        cloudTrader_add_count = 0\n        # 3. 提取后6个账号（对应cloudTrader_user_accounts_5到cloudTrader_user_accounts_10）\n        for i in range(5, cloudTrader_user_count + 1):\n            with allure.step(f\"1. 获取第{i}个跟单账号的account是否新增成功\"):\n                usr_account = var_manager.get_variable(f\"cloudTrader_user_accounts_{i}\")\n                if not usr_account:\n                    pytest.fail(f\"第{i}个跟单账号的account为空\")\n    \n                db_data = self.query_database(\n                    db_transaction,\n                    f\"SELECT * FROM follow_cloud_trader WHERE account = %s\",\n                    (usr_account,),\n                    order_by=\"account ASC\"\n                )\n                print(f\"获取第{i}个跟单账号的account:cloudTrader_user_accounts_{i}\")\n    \n                if not db_data:\n>                   pytest.fail(\"数据库查询结果为空，新增云跟单账号失败\")\nE                   Failed: 数据库查询结果为空，新增云跟单账号失败\n\ntest_cloudTrader\\test_create_scene.py:109: Failed"}, "steps": [{"name": "1. 获取第5个跟单账号的account是否新增成功", "status": "failed", "statusDetails": {"message": "Failed: 数据库查询结果为空，新增云跟单账号失败\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_816\\test_cloudTrader\\test_create_scene.py\", line 109, in test_dbquery_cloudBatchAdd\n    pytest.fail(\"数据库查询结果为空，新增云跟单账号失败\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1755247763582, "stop": 1755247763635}], "attachments": [{"name": "log", "source": "c3bbe588-a33a-442e-b1c3-fd6cbf1cf245-attachment.txt", "type": "text/plain"}], "start": 1755247763582, "stop": 1755247763635, "uuid": "9916e297-2b9e-47e4-9524-6f8b9dcc9ee6", "historyId": "08561cdffd354361ff860906130d7580", "testCaseId": "08561cdffd354361ff860906130d7580", "fullName": "test_cloudTrader.test_create_scene.TestCreate_importcloudTrader#test_dbquery_cloudBatchAdd", "labels": [{"name": "feature", "value": "云策略-云策略列表-批量新增云跟单账号"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_create_scene"}, {"name": "subSuite", "value": "TestCreate_importcloudTrader"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "34324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_create_scene"}]}