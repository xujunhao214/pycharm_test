{"name": "云策略-云策略列表-批量新增云跟单账号", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success", "trace": "self = <lingkuan_816.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB9471C0>\nvar_manager = <lingkuan_816.commons.variable_manager.VariableManager object at 0x000001DCDBC27280>\nlogged_session = <lingkuan_816.commons.session.EnvironmentSession object at 0x000001DCDBD451F0>\n\n    @allure.title(\"云策略-云策略列表-批量新增云跟单账号\")\n    def test_create_importcloudBatchAdd(self, var_manager, logged_session):\n        # 1. 获取账号总数和所有ID\n        cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n        cloudTrader_account = var_manager.get_variable(\"cloudTrader_account\", 0)\n        cloudTrader_traderList_2 = var_manager.get_variable(\"cloudTrader_traderList_2\")\n        cloudTrader_user_accounts_2 = var_manager.get_variable(\"cloudTrader_user_accounts_2\")\n        if cloudTrader_account < 0:\n            pytest.fail(\"未找到需要新增的账号数量，请检查前置步骤\")\n        # 2. 循环获取每个账号的ID\n        for i in range(4, cloudTrader_account + 1):\n            with (allure.step(f\"1. 获取第{i}个跟单账号的ID\")):\n                slave_id = var_manager.get_variable(f\"cloudTrader_vps_ids_{i}\")\n                if not slave_id:\n                    pytest.fail(f\"第{i}个跟单账号的ID为空\")\n                print(f\"获取第{i}个跟单账号的ID:cloudTrader_vps_ids_{i}\")\n                # 3. 发送新增跟单云策略请求（接口支持单个ID删除，参数为列表形式）\n                data = [\n                    {\n                        \"traderList\": [\n                            slave_id\n                        ],\n                        \"cloudId\": cloudMaster_id,\n                        \"masterId\": cloudTrader_traderList_2,\n                        \"masterAccount\": cloudTrader_user_accounts_2,\n                        \"followDirection\": 0,\n                        \"followMode\": 1,\n                        \"followParam\": 1,\n                        \"remainder\": 0,\n                        \"placedType\": 0,\n                        \"templateId\": 1,\n                        \"followStatus\": 1,\n                        \"followOpen\": 1,\n                        \"followClose\": 1,\n                        \"fixedComment\": \"ceshi\",\n                        \"remark\": \"\",\n                        \"commentType\": \"\",\n                        \"digits\": 0,\n                        \"followTraderIds\": [],\n                        \"sort\": \"100\"\n                    }\n                ]\n                response = self.send_post_request(\n                    logged_session,\n                    '/mascontrol/cloudTrader/cloudBatchAdd',\n                    json_data=data\n                )\n    \n                # 2. 验证响应状态码\n                self.assert_response_status(\n                    response,\n                    200,\n                    \"新增云跟单账号失败\"\n                )\n    \n                # 3. 验证JSON返回内容\n>               self.assert_json_value(\n                    response,\n                    \"$.msg\",\n                    \"success\",\n                    \"响应msg字段应为success\"\n                )\n\ntest_cloudTrader\\test_create_scene.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_816.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB9471C0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError"}, "steps": [{"name": "1. 获取第4个跟单账号的ID", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_816\\test_cloudTrader\\test_create_scene.py\", line 76, in test_create_importcloudBatchAdd\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_816\\commons\\api_base.py\", line 261, in assert_json_value\n    assert actual_value == expected_value, (\n"}, "steps": [{"name": "发送POST请求到 /mascontrol/cloudTrader/cloudBatchAdd", "status": "passed", "attachments": [{"name": "请求JSON数据", "source": "c1ec220b-aa4f-4561-8f7e-35799fa592bb-attachment.json", "type": "application/json"}, {"name": "请求URL", "source": "b1fc3383-44e7-4d0c-a0b2-1b9a1c17435d-attachment.txt", "type": "text/plain"}, {"name": "响应结果", "source": "659361e5-73ed-40f1-9574-9c35dd4b7c84-attachment.txt", "type": "text/plain"}], "start": 1755247761896, "stop": 1755247763513}], "start": 1755247761896, "stop": 1755247763517}], "attachments": [{"name": "log", "source": "50a79f18-b628-4123-b59d-5d7e301e562d-attachment.txt", "type": "text/plain"}], "start": 1755247761896, "stop": 1755247763518, "uuid": "28012060-97d4-4b8b-96f9-b46c97ca8adb", "historyId": "6050c400f21c48178be233e9b8eb2101", "testCaseId": "6050c400f21c48178be233e9b8eb2101", "fullName": "test_cloudTrader.test_create_scene.TestCreate_importcloudTrader#test_create_importcloudBatchAdd", "labels": [{"name": "feature", "value": "云策略-云策略列表-批量新增云跟单账号"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_create_scene"}, {"name": "subSuite", "value": "TestCreate_importcloudTrader"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "34324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_create_scene"}]}