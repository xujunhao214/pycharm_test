{
  "uid" : "dcb9b176b6695263",
  "name" : "云策略-云策略列表-修改策略账号信息",
  "fullName" : "test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status#test_mascontrol_cloudMaster",
  "historyId" : "15185eaee34b7f9632a8d6878cb1429f",
  "time" : {
    "start" : 1755247485548,
    "stop" : 1755247487117,
    "duration" : 1569
  },
  "description" : "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 修改云策略 策略状态为关闭\n  2. 进行开仓\n  3. 跟单账号跟单失败，有漏单数据，把redis数据和MySQL数据进行校验\n  4. 修改云策略 策略状态为开启\n  5. 进行补单操作，然后平仓\n- 预期结果：云策略 策略状态为关闭，有漏单数据\n",
  "descriptionHtml" : "<h3>用例说明</h3>\n<ul>\n<li>前置条件：有云策略和云跟单</li>\n<li>操作步骤：\n<ol>\n<li>修改云策略 策略状态为关闭</li>\n<li>进行开仓</li>\n<li>跟单账号跟单失败，有漏单数据，把redis数据和MySQL数据进行校验</li>\n<li>修改云策略 策略状态为开启</li>\n<li>进行补单操作，然后平仓</li>\n</ol>\n</li>\n<li>预期结果：云策略 策略状态为关闭，有漏单数据</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success",
  "statusTrace" : "self = <lingkuan_816.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9F2670>\nvar_manager = <lingkuan_816.commons.variable_manager.VariableManager object at 0x000001DCDBAFE5B0>\nlogged_session = <lingkuan_816.commons.session.EnvironmentSession object at 0x000001DCDBAFE400>\nencrypted_password = 'fa1af751c83d311f091c9393a364068c'\n\n    @allure.title(\"云策略-云策略列表-修改策略账号信息\")\n    def test_mascontrol_cloudMaster(self, var_manager, logged_session, encrypted_password):\n        # 1. 修改云策略状态status为1，关闭策略状态\n        with allure.step(\"发送修改云策略的请求\"):\n            cloudTrader_group_id = var_manager.get_variable(\"cloudTrader_group_id\")\n            cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n            json_data = {\n                \"id\": cloudMaster_id,\n                \"name\": \"自动化测试\",\n                \"type\": 0,\n                \"remark\": None,\n                \"status\": 1,\n                \"groupId\": cloudTrader_group_id,\n                \"sort\": None,\n                \"isMonitorRepair\": 1,\n                \"isAutoRepair\": 1\n            }\n            response = self.send_put_request(\n                logged_session,\n                '/mascontrol/cloudMaster',\n                json_data=json_data,\n            )\n    \n        with allure.step(\"2. 验证响应状态码和内容\"):\n            # 2. 验证响应状态码和内容\n            self.assert_response_status(\n                response,\n                200,\n                \"发送修改云策略的请求失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_cloudTrader\\test_cloudstartegy_status.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_816.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9F2670>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/cloudMaster\nE           JSON路径: $.msg\nE           实际值: 云策略名称已存在，请勿重复添加\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "test_group",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755247484078,
      "stop" : 1755247485547,
      "duration" : 1469
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1755247484077,
      "stop" : 1755247484078,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "encrypted_password",
    "time" : {
      "start" : 1755247485548,
      "stop" : 1755247485548,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755247484077,
      "stop" : 1755247484077,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 修改云策略 策略状态为关闭\n  2. 进行开仓\n  3. 跟单账号跟单失败，有漏单数据，把redis数据和MySQL数据进行校验\n  4. 修改云策略 策略状态为开启\n  5. 进行补单操作，然后平仓\n- 预期结果：云策略 策略状态为关闭，有漏单数据\n",
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success",
    "statusTrace" : "self = <lingkuan_816.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9F2670>\nvar_manager = <lingkuan_816.commons.variable_manager.VariableManager object at 0x000001DCDBAFE5B0>\nlogged_session = <lingkuan_816.commons.session.EnvironmentSession object at 0x000001DCDBAFE400>\nencrypted_password = 'fa1af751c83d311f091c9393a364068c'\n\n    @allure.title(\"云策略-云策略列表-修改策略账号信息\")\n    def test_mascontrol_cloudMaster(self, var_manager, logged_session, encrypted_password):\n        # 1. 修改云策略状态status为1，关闭策略状态\n        with allure.step(\"发送修改云策略的请求\"):\n            cloudTrader_group_id = var_manager.get_variable(\"cloudTrader_group_id\")\n            cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n            json_data = {\n                \"id\": cloudMaster_id,\n                \"name\": \"自动化测试\",\n                \"type\": 0,\n                \"remark\": None,\n                \"status\": 1,\n                \"groupId\": cloudTrader_group_id,\n                \"sort\": None,\n                \"isMonitorRepair\": 1,\n                \"isAutoRepair\": 1\n            }\n            response = self.send_put_request(\n                logged_session,\n                '/mascontrol/cloudMaster',\n                json_data=json_data,\n            )\n    \n        with allure.step(\"2. 验证响应状态码和内容\"):\n            # 2. 验证响应状态码和内容\n            self.assert_response_status(\n                response,\n                200,\n                \"发送修改云策略的请求失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_cloudTrader\\test_cloudstartegy_status.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_816.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9F2670>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/cloudMaster\nE           JSON路径: $.msg\nE           实际值: 云策略名称已存在，请勿重复添加\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
    "steps" : [ {
      "name" : "发送修改云策略的请求",
      "time" : {
        "start" : 1755247485548,
        "stop" : 1755247487112,
        "duration" : 1564
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "发送PUT请求到 /mascontrol/cloudMaster",
        "time" : {
          "start" : 1755247485548,
          "stop" : 1755247487112,
          "duration" : 1564
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "12dfefb34dd38336",
          "name" : "请求参数",
          "source" : "12dfefb34dd38336.json",
          "type" : "application/json",
          "size" : 148
        }, {
          "uid" : "e34b7ffe7a8f7c7e",
          "name" : "响应结果",
          "source" : "e34b7ffe7a8f7c7e.txt",
          "type" : "text/plain",
          "size" : 101
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 1,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 验证响应状态码和内容",
      "time" : {
        "start" : 1755247487112,
        "stop" : 1755247487117,
        "duration" : 5
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_816\\test_cloudTrader\\test_cloudstartegy_status.py\", line 59, in test_mascontrol_cloudMaster\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_816\\commons\\api_base.py\", line 261, in assert_json_value\n    assert actual_value == expected_value, (\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "5877084dc13bfcd2",
      "name" : "log",
      "source" : "5877084dc13bfcd2.txt",
      "type" : "text/plain",
      "size" : 2726
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 3,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755247487129,
      "stop" : 1755247487129,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755247487129,
      "stop" : 1755247487130,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755248271252,
      "stop" : 1755248271252,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "交易下单-云策略复制下单"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudstartegy_status"
  }, {
    "name" : "subSuite",
    "value" : "Testcloudstargy_status"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "34324-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudstartegy_status"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "dcb9b176b6695263.json",
  "parameterValues" : [ ]
}