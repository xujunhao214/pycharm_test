[pytest]
addopts = -vs ./tests/test_api.py --alluredir=./.allure_results --clean-alluredir

log_file = pytest.log
log_file_level = info
log_file_format = %(levelname)-8s %(asctime)s [%(name)s;%(lineno)s]  : %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S
result_log_level_verbose = info

#让框架执行yaml,yaml当作一个测试用例
#run_yaml_case = true

#1.在注册文件里面做标记
#2.在用例里面通过装饰器添加标记
#3.使用标记  在命令行参数中加 -m 来使用标记
#addopts = -vs -m "db or login"
markers =
    login: 登录相关的用例
    db:数据库相关
    upload:上传相关

#内置标记，无需注册，直接使用
#skip       无条件跳过用例
#skipif     有条件跳过
#xfaile     预期失败
#parametrize:参数化测试   +  数据文件  =   数据驱动测试
#参数化测试：通过添加、编辑数据，实现添加、编辑测试用例的效果


#夹具  fixture
#fixture：在测试用例执行之前、执行之后，自动的运行代码