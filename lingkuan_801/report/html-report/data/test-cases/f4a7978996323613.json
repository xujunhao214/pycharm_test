{
  "uid" : "f4a7978996323613",
  "name" : "修改跟单账号（仅使用后6个数据与模板匹配）",
  "fullName" : "test_cloudTrader.test_create_scene.TestCreate_importcloudTrader#test_update_addSlave",
  "historyId" : "c8be5d3653baacab767e7f484097b488",
  "time" : {
    "start" : 1754033374993,
    "stop" : 1754033379443,
    "duration" : 4450
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 账号3697响应异常\nURL: http://39.99.136.49:9000/mascontrol/cloudTrader/cloudBatchUpdate\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success",
  "statusTrace" : "self = <lingkuan_801.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000002260CAD0580>\nvar_manager = <lingkuan_801.commons.variable_manager.VariableManager object at 0x000002260CC21E50>\nlogged_session = <lingkuan_801.commons.session.EnvironmentSession object at 0x000002260CC3E2E0>\ndb_transaction = <pymysql.connections.Connection object at 0x000002260CA4ACD0>\n\n    @allure.title(\"修改跟单账号（仅使用后6个数据与模板匹配）\")\n    def test_update_addSlave(self, var_manager, logged_session, db_transaction):\n        # 1. 获取总用户数（需确保至少有7个，才能取后6个）\n        user_count_cloudTrader = var_manager.get_variable(\"user_count_cloudTrader\", 0)\n        if user_count_cloudTrader < 7:\n            pytest.fail(f\"用户总数需至少为7，当前为{user_count_cloudTrader}，无法提取后6个数据\")\n    \n        all_ids = []\n        for i in range(5, user_count_cloudTrader + 1):\n            addslave_id = var_manager.get_variable(f\"traderList_cloudTrader_{i}\")\n            if not addslave_id:\n                pytest.fail(f\"未找到第{i}个账号（变量：traderList_cloudTrader_{i}）\")\n            all_ids.append(addslave_id)\n        print(f\"已提取后6个账号id：{all_ids}\")\n    \n        template_id = var_manager.get_variable(\"template_id\")\n    \n        # 3. 定义6个模板（与账号一一对应）\n        templates: List[Dict[str, Any]] = [\n            {\n                \"followMode\": 0,\n                \"followParam\": \"5.00\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"\",\n                \"mode_desc\": \"固定手数（5倍）\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": template_id,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"\",\n                \"mode_desc\": \"修改品种（3倍）\"\n            },\n            {\n                \"followMode\": 2,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"\",\n                \"mode_desc\": \"净值比例\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"@\",\n                \"mode_desc\": \"修改币种，合约是100\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \".p\",\n                \"mode_desc\": \"修改币种，合约是100000\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \".min\",\n                \"mode_desc\": \"修改币种，合约是10\"\n            },\n        ]\n    \n        # 4. 生成参数化数据（后6个账号与6个模板一一对应）\n        parametrize_data = []\n        for i in range(len(all_ids)):\n            traderList = all_ids[i]\n            template = templates[i]  # 直接一一对应（账号1→模板1，账号2→模板2，...）\n            parametrize_data.append({\n                \"followMode\": template[\"followMode\"],\n                \"followParam\": template[\"followParam\"],\n                \"templateId\": template[\"templateId\"],\n                \"fixedComment\": template[\"fixedComment\"],  # 修改备注\n                \"Cfd\": template[\"Cfd\"],  # 修改Cfd参数\n                \"traderList\": traderList,\n            })\n        print(f\"生成{len(parametrize_data)}条参数化测试数据（后6个账号）\")\n    \n        # 5. 循环执行后6个账号的修改操作\n        for param in parametrize_data:\n            with (allure.step(f\"1. 对数据进行参数化修改\")):\n                # 获取基础配置\n                cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n                traderList_cloudTrader_3 = var_manager.get_variable(\"traderList_cloudTrader_3\")\n                user_accounts_cloudTrader_3 = var_manager.get_variable(\"user_accounts_cloudTrader_3\")\n                # 构造请求数据\n                data = [\n                    {\n                        \"traderList\": [\n                            param[\"traderList\"]\n                        ],\n                        \"cloudId\": cloudMaster_id,\n                        \"masterId\": traderList_cloudTrader_3,\n                        \"masterAccount\": user_accounts_cloudTrader_3,\n                        \"followDirection\": 0,\n                        \"followMode\": param[\"followMode\"],\n                        \"followParam\": param[\"followParam\"],\n                        \"remainder\": 0,\n                        \"placedType\": 0,\n                        \"templateId\": param[\"templateId\"],\n                        \"followStatus\": 1,\n                        \"followOpen\": 1,\n                        \"followClose\": 1,\n                        \"fixedComment\": param[\"fixedComment\"],\n                        \"commentType\": \"\",\n                        \"digits\": 0,\n                        \"followTraderIds\": [],\n                        \"sort\": \"100\",\n                        \"cfd\": param[\"Cfd\"],\n                        \"forex\": \"\"\n                    }\n                ]\n    \n                # 发送请求并验证\n                response = self.send_post_request(\n                    logged_session, '/mascontrol/cloudTrader/cloudBatchUpdate', json_data=data\n                )\n    \n                self.assert_response_status(\n                    response, 200,\n                    f\"账号{param['traderList']}修改失败\"\n                )\n>               self.assert_json_value(\n                    response, \"$.msg\", \"success\",\n                    f\"账号{param['traderList']}响应异常\"\n                )\n\ntest_cloudTrader\\test_create_scene.py:254: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_801.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000002260CAD0580>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '账号3697响应异常'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 账号3697响应异常\nE           URL: http://39.99.136.49:9000/mascontrol/cloudTrader/cloudBatchUpdate\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_config",
    "time" : {
      "start" : 1754033170267,
      "stop" : 1754033170267,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1754033157902,
      "stop" : 1754033157902,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1754033374809,
      "stop" : 1754033374944,
      "duration" : 135
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1754033374944,
      "stop" : 1754033374993,
      "duration" : 49
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1754033341874,
      "stop" : 1754033341875,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1754033374809,
      "stop" : 1754033374809,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1754033170267,
      "stop" : 1754033170504,
      "duration" : 237
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 账号3697响应异常\nURL: http://39.99.136.49:9000/mascontrol/cloudTrader/cloudBatchUpdate\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success",
    "statusTrace" : "self = <lingkuan_801.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000002260CAD0580>\nvar_manager = <lingkuan_801.commons.variable_manager.VariableManager object at 0x000002260CC21E50>\nlogged_session = <lingkuan_801.commons.session.EnvironmentSession object at 0x000002260CC3E2E0>\ndb_transaction = <pymysql.connections.Connection object at 0x000002260CA4ACD0>\n\n    @allure.title(\"修改跟单账号（仅使用后6个数据与模板匹配）\")\n    def test_update_addSlave(self, var_manager, logged_session, db_transaction):\n        # 1. 获取总用户数（需确保至少有7个，才能取后6个）\n        user_count_cloudTrader = var_manager.get_variable(\"user_count_cloudTrader\", 0)\n        if user_count_cloudTrader < 7:\n            pytest.fail(f\"用户总数需至少为7，当前为{user_count_cloudTrader}，无法提取后6个数据\")\n    \n        all_ids = []\n        for i in range(5, user_count_cloudTrader + 1):\n            addslave_id = var_manager.get_variable(f\"traderList_cloudTrader_{i}\")\n            if not addslave_id:\n                pytest.fail(f\"未找到第{i}个账号（变量：traderList_cloudTrader_{i}）\")\n            all_ids.append(addslave_id)\n        print(f\"已提取后6个账号id：{all_ids}\")\n    \n        template_id = var_manager.get_variable(\"template_id\")\n    \n        # 3. 定义6个模板（与账号一一对应）\n        templates: List[Dict[str, Any]] = [\n            {\n                \"followMode\": 0,\n                \"followParam\": \"5.00\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"\",\n                \"mode_desc\": \"固定手数（5倍）\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": template_id,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"\",\n                \"mode_desc\": \"修改品种（3倍）\"\n            },\n            {\n                \"followMode\": 2,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"\",\n                \"mode_desc\": \"净值比例\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \"@\",\n                \"mode_desc\": \"修改币种，合约是100\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \".p\",\n                \"mode_desc\": \"修改币种，合约是100000\"\n            },\n            {\n                \"followMode\": 1,\n                \"followParam\": \"1\",\n                \"templateId\": 1,\n                \"fixedComment\": \"yunceluegendanzhanghaoceshishuju\",\n                \"Cfd\": \".min\",\n                \"mode_desc\": \"修改币种，合约是10\"\n            },\n        ]\n    \n        # 4. 生成参数化数据（后6个账号与6个模板一一对应）\n        parametrize_data = []\n        for i in range(len(all_ids)):\n            traderList = all_ids[i]\n            template = templates[i]  # 直接一一对应（账号1→模板1，账号2→模板2，...）\n            parametrize_data.append({\n                \"followMode\": template[\"followMode\"],\n                \"followParam\": template[\"followParam\"],\n                \"templateId\": template[\"templateId\"],\n                \"fixedComment\": template[\"fixedComment\"],  # 修改备注\n                \"Cfd\": template[\"Cfd\"],  # 修改Cfd参数\n                \"traderList\": traderList,\n            })\n        print(f\"生成{len(parametrize_data)}条参数化测试数据（后6个账号）\")\n    \n        # 5. 循环执行后6个账号的修改操作\n        for param in parametrize_data:\n            with (allure.step(f\"1. 对数据进行参数化修改\")):\n                # 获取基础配置\n                cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n                traderList_cloudTrader_3 = var_manager.get_variable(\"traderList_cloudTrader_3\")\n                user_accounts_cloudTrader_3 = var_manager.get_variable(\"user_accounts_cloudTrader_3\")\n                # 构造请求数据\n                data = [\n                    {\n                        \"traderList\": [\n                            param[\"traderList\"]\n                        ],\n                        \"cloudId\": cloudMaster_id,\n                        \"masterId\": traderList_cloudTrader_3,\n                        \"masterAccount\": user_accounts_cloudTrader_3,\n                        \"followDirection\": 0,\n                        \"followMode\": param[\"followMode\"],\n                        \"followParam\": param[\"followParam\"],\n                        \"remainder\": 0,\n                        \"placedType\": 0,\n                        \"templateId\": param[\"templateId\"],\n                        \"followStatus\": 1,\n                        \"followOpen\": 1,\n                        \"followClose\": 1,\n                        \"fixedComment\": param[\"fixedComment\"],\n                        \"commentType\": \"\",\n                        \"digits\": 0,\n                        \"followTraderIds\": [],\n                        \"sort\": \"100\",\n                        \"cfd\": param[\"Cfd\"],\n                        \"forex\": \"\"\n                    }\n                ]\n    \n                # 发送请求并验证\n                response = self.send_post_request(\n                    logged_session, '/mascontrol/cloudTrader/cloudBatchUpdate', json_data=data\n                )\n    \n                self.assert_response_status(\n                    response, 200,\n                    f\"账号{param['traderList']}修改失败\"\n                )\n>               self.assert_json_value(\n                    response, \"$.msg\", \"success\",\n                    f\"账号{param['traderList']}响应异常\"\n                )\n\ntest_cloudTrader\\test_create_scene.py:254: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_801.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000002260CAD0580>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '账号3697响应异常'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 账号3697响应异常\nE           URL: http://39.99.136.49:9000/mascontrol/cloudTrader/cloudBatchUpdate\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
    "steps" : [ {
      "name" : "1. 对数据进行参数化修改",
      "time" : {
        "start" : 1754033374993,
        "stop" : 1754033377144,
        "duration" : 2151
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "发送POST请求到 /mascontrol/cloudTrader/cloudBatchUpdate",
        "time" : {
          "start" : 1754033374993,
          "stop" : 1754033377136,
          "duration" : 2143
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "9839c369e540c5ea",
          "name" : "请求JSON数据",
          "source" : "9839c369e540c5ea.json",
          "type" : "application/json",
          "size" : 397
        }, {
          "uid" : "cc4c71fc797b819d",
          "name" : "请求URL",
          "source" : "cc4c71fc797b819d.txt",
          "type" : "text/plain",
          "size" : 40
        }, {
          "uid" : "2be6c09d1d65a0a6",
          "name" : "响应结果",
          "source" : "2be6c09d1d65a0a6.txt",
          "type" : "text/plain",
          "size" : 61
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3
    }, {
      "name" : "1. 对数据进行参数化修改",
      "time" : {
        "start" : 1754033377144,
        "stop" : 1754033379442,
        "duration" : 2298
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 账号3697响应异常\nURL: http://39.99.136.49:9000/mascontrol/cloudTrader/cloudBatchUpdate\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_801\\test_cloudTrader\\test_create_scene.py\", line 254, in test_update_addSlave\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_801\\commons\\api_base.py\", line 261, in assert_json_value\n    assert actual_value == expected_value, (\n",
      "steps" : [ {
        "name" : "发送POST请求到 /mascontrol/cloudTrader/cloudBatchUpdate",
        "time" : {
          "start" : 1754033377144,
          "stop" : 1754033379432,
          "duration" : 2288
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "751b5e8aa92a7f70",
          "name" : "请求JSON数据",
          "source" : "751b5e8aa92a7f70.json",
          "type" : "application/json",
          "size" : 397
        }, {
          "uid" : "512055880beb553d",
          "name" : "请求URL",
          "source" : "512055880beb553d.txt",
          "type" : "text/plain",
          "size" : 40
        }, {
          "uid" : "d540ad7c4ef746cd",
          "name" : "响应结果",
          "source" : "d540ad7c4ef746cd.txt",
          "type" : "text/plain",
          "size" : 89
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 3
    } ],
    "attachments" : [ {
      "uid" : "4bbec4f498c9b293",
      "name" : "log",
      "source" : "4bbec4f498c9b293.txt",
      "type" : "text/plain",
      "size" : 3450
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 7
  },
  "afterStages" : [ {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1754033379778,
      "stop" : 1754033379778,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1754033379732,
      "stop" : 1754033379777,
      "duration" : 45
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1754033447498,
      "stop" : 1754033447499,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1754033379779,
      "stop" : 1754033379779,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1754033447500,
      "stop" : 1754033447500,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略-云策略列表-批量新增云策略跟单账号"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_create_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate_importcloudTrader"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "30608-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_create_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f4a7978996323613.json",
  "parameterValues" : [ ]
}