{"name": "登录测试", "status": "failed", "statusDetails": {"message": "AssertionError: 登录请求失败，状态码应为 400\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code", "trace": "session = <kuangjia4.commons.session.JunhaoSession object at 0x000001FE47679610>\ndata = {'password': '错误密码', 'username': 'admin'}, expected_code = 400\ndescription = '错误的密码'\n\n    @allure.feature(\"用户认证\")\n    @allure.title(\"登录测试\")\n    @pytest.mark.parametrize(\n        \"data, expected_code, description\",\n        [\n            (\n                    {\n                        \"username\": \"admin\",\n                        \"password\": \"04739db02172e04f63f5278211184deec745bad9d797882b343e7201898d8da1d9fced282f6b271d3815a5057482e62c6f6b88dacb642ba05632bd2ee348101c76cb1f86b70f91695fd1cff11fce76246f044ace477cdbfa1e3e1521b19b023b14c7165e82c5\"\n                    },\n                    200,\n                    \"正确的用户名和密码\"\n            ),\n            (\n                    {\n                        \"username\": \"admin\",\n                        \"password\": \"错误密码\"\n                    },\n                    400,\n                    \"错误的密码\"\n            ),\n        ]\n    )\n    def test_login(session, data, expected_code, description):\n        \"\"\"测试用户登录功能\"\"\"\n        with allure.step(f\"测试场景: {description}\"):\n            # 设置请求头\n            headers = {\n                \"x-sign\": \"417B110F1E71BD2CFE96366E67849B0B\",\n            }\n    \n            # 发送登录请求\n            with allure.step(\"发送登录请求\"):\n                resp = session.post('/sys/auth/login', json=data, headers=headers)\n    \n            # 验证响应状态码\n            with allure.step(f\"验证状态码是否为 {expected_code}\"):\n>               assert resp.status_code == expected_code, f\"登录请求失败，状态码应为 {expected_code}\"\nE               AssertionError: 登录请求失败，状态码应为 400\nE               assert 200 == 400\nE                +  where 200 = <Response [200]>.status_code\n\ntests\\test_api.py:63: AssertionError"}, "description": "测试用户登录功能", "steps": [{"name": "测试场景: 错误的密码", "status": "failed", "statusDetails": {"message": "AssertionError: 登录请求失败，状态码应为 400\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"D:\\pycharm_test\\kuangjia4\\tests\\test_api.py\", line 63, in test_login\n    assert resp.status_code == expected_code, f\"登录请求失败，状态码应为 {expected_code}\"\n"}, "steps": [{"name": "发送登录请求", "status": "passed", "start": 1749437020537, "stop": 1749437020594}, {"name": "验证状态码是否为 400", "status": "failed", "statusDetails": {"message": "AssertionError: 登录请求失败，状态码应为 400\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"D:\\pycharm_test\\kuangjia4\\tests\\test_api.py\", line 63, in test_login\n    assert resp.status_code == expected_code, f\"登录请求失败，状态码应为 {expected_code}\"\n"}, "start": 1749437020594, "stop": 1749437020594}], "start": 1749437020537, "stop": 1749437020594}], "attachments": [{"name": "log", "source": "bf2338b5-8672-4f4b-95cc-697566a2ce28-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "data", "value": "{'username': 'admin', 'password': '错误密码'}"}, {"name": "expected_code", "value": "400"}, {"name": "description", "value": "'错误的密码'"}], "start": 1749437020537, "stop": 1749437020594, "uuid": "ff4cd807-27d8-4b4b-9631-cf86ff233c35", "historyId": "c1efefd148fcb1da15769ba66949eb89", "testCaseId": "54cf5345e2a06b13ffb689279339a520", "fullName": "tests.test_api#test_login", "labels": [{"name": "feature", "value": "用户认证"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "28524-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}