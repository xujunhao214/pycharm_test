{"uid":"4bf0ca42f689e298","name":"跟单软件看板-VPS数据-删除策略账号","fullName":"test_foundation.test_delete_scene.TestDeleteTrader#test_delete_vpstrader","historyId":"a2f4c968759e1455b3500a2175c4520e","time":{"start":1751769206905,"stop":1751769212033,"duration":5128},"status":"failed","statusMessage":"AssertionError: 响应msg字段应为success\n实际值: 请先删除跟单用户\n期望值: success","statusTrace":"self = <lingkuan_706.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABB5370>\nvar_manager = <lingkuan_706.commons.variable_manager.VariableManager object at 0x00000289FACA4190>\nlogged_session = <lingkuan_706.commons.session.EnvironmentSession object at 0x00000289FAE58340>\ndb_transaction = <pymysql.connections.Connection object at 0x00000289FABE18B0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-删除策略账号\")\n    def test_delete_vpstrader(self, var_manager, logged_session, db_transaction):\n        # 1. 发送删除策略账号请求\n        vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n        response = self.send_delete_request(\n            logged_session,\n            '/subcontrol/trader',\n            json_data=[vps_trader_id]\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"删除策略账号失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_foundation\\test_delete_scene.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_706.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABB5370>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值\"\"\"\n        # 假设response对象有extract_jsonpath方法\n        actual_value = response.extract_jsonpath(json_path)\n>       assert actual_value == expected_value, (\n            f\"{error_msg}\\n\"\n            f\"实际值: {actual_value}\\n\"\n            f\"期望值: {expected_value}\"\n        )\nE       AssertionError: 响应msg字段应为success\nE       实际值: 请先删除跟单用户\nE       期望值: success\n\ncommons\\api_base.py:116: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"db","time":{"start":1751769074613,"stop":1751769074863,"duration":250},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db_config","time":{"start":1751769074613,"stop":1751769074613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"environment","time":{"start":1751769074613,"stop":1751769074613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"var_manager","time":{"start":1751769108571,"stop":1751769108572,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"api_session","time":{"start":1751769206710,"stop":1751769206711,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"logged_session","time":{"start":1751769206711,"stop":1751769206853,"duration":142},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db_transaction","time":{"start":1751769206853,"stop":1751769206903,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 响应msg字段应为success\n实际值: 请先删除跟单用户\n期望值: success","statusTrace":"self = <lingkuan_706.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABB5370>\nvar_manager = <lingkuan_706.commons.variable_manager.VariableManager object at 0x00000289FACA4190>\nlogged_session = <lingkuan_706.commons.session.EnvironmentSession object at 0x00000289FAE58340>\ndb_transaction = <pymysql.connections.Connection object at 0x00000289FABE18B0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-删除策略账号\")\n    def test_delete_vpstrader(self, var_manager, logged_session, db_transaction):\n        # 1. 发送删除策略账号请求\n        vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n        response = self.send_delete_request(\n            logged_session,\n            '/subcontrol/trader',\n            json_data=[vps_trader_id]\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"删除策略账号失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_foundation\\test_delete_scene.py:190: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_706.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABB5370>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值\"\"\"\n        # 假设response对象有extract_jsonpath方法\n        actual_value = response.extract_jsonpath(json_path)\n>       assert actual_value == expected_value, (\n            f\"{error_msg}\\n\"\n            f\"实际值: {actual_value}\\n\"\n            f\"期望值: {expected_value}\"\n        )\nE       AssertionError: 响应msg字段应为success\nE       实际值: 请先删除跟单用户\nE       期望值: success\n\ncommons\\api_base.py:116: AssertionError","steps":[{"name":"发送DELETE请求到 /subcontrol/trader","time":{"start":1751769206905,"stop":1751769212024,"duration":5119},"status":"passed","steps":[],"attachments":[{"uid":"6c92f53a87128057","name":"请求参数","source":"6c92f53a87128057.json","type":"application/json","size":6},{"uid":"99a49b7476ef6133","name":"响应结果","source":"99a49b7476ef6133.txt","type":"text/plain","size":80}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"11cb42c26d49c3e1","name":"log","source":"11cb42c26d49c3e1.txt","type":"text/plain","size":3818}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":1,"attachmentStep":false},"afterStages":[{"name":"db_transaction::0","time":{"start":1751769212041,"stop":1751769212090,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"logged_session::0","time":{"start":1751769212092,"stop":1751769212092,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"api_session::0","time":{"start":1751769212093,"stop":1751769212093,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db::0","time":{"start":1751769443049,"stop":1751769443049,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"var_manager::0","time":{"start":1751769443052,"stop":1751769443052,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"删除跟单账号和策略账号"},{"name":"tag","value":"url('vps')"},{"name":"parentSuite","value":"test_foundation"},{"name":"suite","value":"test_delete_scene"},{"name":"subSuite","value":"TestDeleteTrader"},{"name":"host","value":"xujunhao"},{"name":"thread","value":"22792-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_foundation.test_delete_scene"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["url('vps')"]},"source":"4bf0ca42f689e298.json","parameterValues":[]}