{
  "uid" : "770c64dc6837034d",
  "name" : "数据库校验-复制下单数据",
  "fullName" : "test_cloudTrader.test_cloudOrderSend2.TestMasOrderSend2#test_copy_verify_db",
  "historyId" : "85ee8c6ca462c1ca254107d8a5937de8",
  "time" : {
    "start" : 1756278055035,
    "stop" : 1756278062209,
    "duration" : 7174
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n      2. 校验权重，优先满足手数范围，然后是总手数\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：权重正确，优先满足手数范围，然后是总手数\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有云策略和云跟单\n  1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n  2. 校验权重，优先满足手数范围，然后是总手数\n  3. 进行平仓\n  4. 校验账号的数据是否正确\n- 预期结果：权重正确，优先满足手数范围，然后是总手数\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5",
  "statusTrace" : "self = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000001D163AF0880>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000001D163B9C6D0>\ndb_transaction = <pymysql.connections.Connection object at 0x000001D163BD70A0>\n\n    @pytest.mark.retry(n=3, delay=5)\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情手数\"):\n                size = [record[\"size\"] for record in db_data]\n                for i in size:\n                    self.verify_data(\n                        actual_value=float(i),\n                        expected_value=0.3,\n                        op=CompareOp.GT,\n                        message=\"实际手数符合预期\",\n                        attachment_name=\"实际手数\"\n                    )\n                logging.info(f\"实际手数: {size}\")\n    \n            with allure.step(\"验证订单数量\"):\n                total_orders = db_data[0][\"total_orders\"]\n                self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=total_orders,\n                    op=CompareOp.NE,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n                logging.info(f\"实际订单数量: {len(db_data)}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend2.py:417: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000001D163AF0880>\nactual_value = 5.77, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 5.77\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1756278054593,
      "stop" : 1756278055035,
      "duration" : 442
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756278055035,
      "stop" : 1756278055035,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n      2. 校验权重，优先满足手数范围，然后是总手数\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：权重正确，优先满足手数范围，然后是总手数\n    ",
    "status" : "failed",
    "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5",
    "statusTrace" : "self = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000001D163AF0880>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000001D163B9C6D0>\ndb_transaction = <pymysql.connections.Connection object at 0x000001D163BD70A0>\n\n    @pytest.mark.retry(n=3, delay=5)\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情手数\"):\n                size = [record[\"size\"] for record in db_data]\n                for i in size:\n                    self.verify_data(\n                        actual_value=float(i),\n                        expected_value=0.3,\n                        op=CompareOp.GT,\n                        message=\"实际手数符合预期\",\n                        attachment_name=\"实际手数\"\n                    )\n                logging.info(f\"实际手数: {size}\")\n    \n            with allure.step(\"验证订单数量\"):\n                total_orders = db_data[0][\"total_orders\"]\n                self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=total_orders,\n                    op=CompareOp.NE,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n                logging.info(f\"实际订单数量: {len(db_data)}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend2.py:417: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000001D163AF0880>\nactual_value = 5.77, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 5.77\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed",
    "steps" : [ {
      "name" : "查询复制订单详情数据",
      "time" : {
        "start" : 1756278055035,
        "stop" : 1756278062203,
        "duration" : 7168
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（时区+05:00，超时30秒）",
        "time" : {
          "start" : 1756278055035,
          "stop" : 1756278062203,
          "duration" : 7168
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756278055082,
            "stop" : 1756278056079,
            "duration" : 997
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756278055082,
              "stop" : 1756278056079,
              "duration" : 997
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "622c05b3ff527c56",
              "name" : "执行SQL",
              "source" : "622c05b3ff527c56.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "c147847b6d14e109",
              "name" : "SQL参数",
              "source" : "c147847b6d14e109.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "9b08295051bda2a9",
            "name" : "时区处理",
            "source" : "9b08295051bda2a9.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待1.0秒）",
          "time" : {
            "start" : 1756278056079,
            "stop" : 1756278056079,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "4682081926d2748d",
            "name" : "当前状态",
            "source" : "4682081926d2748d.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "3f64a1ab17cb5b07",
            "name" : "超时倒计时",
            "source" : "3f64a1ab17cb5b07.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756278056079,
            "stop" : 1756278056080,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "2bcf0c8064fa7850",
            "name" : "判断结果",
            "source" : "2bcf0c8064fa7850.txt",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据发生变化",
          "time" : {
            "start" : 1756278056080,
            "stop" : 1756278056080,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "54e80d6641f3aee7",
            "name" : "状态说明",
            "source" : "54e80d6641f3aee7.txt",
            "type" : "text/plain",
            "size" : 24
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756278058136,
            "stop" : 1756278059129,
            "duration" : 993
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756278058137,
              "stop" : 1756278059129,
              "duration" : 992
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "687a2aeaf6767eaf",
              "name" : "执行SQL",
              "source" : "687a2aeaf6767eaf.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "63da55e19da7c276",
              "name" : "SQL参数",
              "source" : "63da55e19da7c276.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "c1f8dfa143dfef34",
            "name" : "时区处理",
            "source" : "c1f8dfa143dfef34.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待4.1秒）",
          "time" : {
            "start" : 1756278059129,
            "stop" : 1756278059130,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "126f85571ca1e77f",
            "name" : "当前状态",
            "source" : "126f85571ca1e77f.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "b85f107ae2128d87",
            "name" : "超时倒计时",
            "source" : "b85f107ae2128d87.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756278059130,
            "stop" : 1756278059130,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "c6267aa683027a1",
            "name" : "判断结果",
            "source" : "c6267aa683027a1.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据首次稳定",
          "time" : {
            "start" : 1756278059130,
            "stop" : 1756278059130,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "e95847046cc376b0",
            "name" : "状态说明",
            "source" : "e95847046cc376b0.txt",
            "type" : "text/plain",
            "size" : 40
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756278061187,
            "stop" : 1756278062201,
            "duration" : 1014
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756278061188,
              "stop" : 1756278062201,
              "duration" : 1013
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "5cf410e42a54b88f",
              "name" : "执行SQL",
              "source" : "5cf410e42a54b88f.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "1412f48254acb1e3",
              "name" : "SQL参数",
              "source" : "1412f48254acb1e3.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "d5e94e990303b942",
            "name" : "时区处理",
            "source" : "d5e94e990303b942.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待7.2秒）",
          "time" : {
            "start" : 1756278062201,
            "stop" : 1756278062202,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "5768eff4e74d977e",
            "name" : "当前状态",
            "source" : "5768eff4e74d977e.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "f175276fcbdaa62",
            "name" : "超时倒计时",
            "source" : "f175276fcbdaa62.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756278062202,
            "stop" : 1756278062203,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "e061aee9056b0141",
            "name" : "判断结果",
            "source" : "e061aee9056b0141.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据稳定达标",
          "time" : {
            "start" : 1756278062203,
            "stop" : 1756278062203,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "ab4f777b0496df14",
            "name" : "结果说明",
            "source" : "ab4f777b0496df14.txt",
            "type" : "text/plain",
            "size" : 34
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区查询最终结果",
          "time" : {
            "start" : 1756278062203,
            "stop" : 1756278062203,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "c12f1d6e87978ffe",
            "name" : "结果预览",
            "source" : "c12f1d6e87978ffe.json",
            "type" : "application/json",
            "size" : 3602
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ {
          "uid" : "eb6062b30e44c710",
          "name" : "执行SQL",
          "source" : "eb6062b30e44c710.txt",
          "type" : "text/plain",
          "size" : 990
        }, {
          "uid" : "1a2a080bf266d5a4",
          "name" : "SQL参数",
          "source" : "1a2a080bf266d5a4.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "f42f8666c2f7113f",
          "name" : "时区偏移量（小时）",
          "source" : "f42f8666c2f7113f.txt",
          "type" : "text/plain",
          "size" : 1
        } ],
        "parameters" : [ ],
        "stepsCount" : 16,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 25
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 25
    }, {
      "name" : "执行复制下单数据校验",
      "time" : {
        "start" : 1756278062203,
        "stop" : 1756278062209,
        "duration" : 6
      },
      "status" : "failed",
      "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\test_cloudTrader\\test_cloudOrderSend2.py\", line 417, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ {
        "name" : "验证订单状态",
        "time" : {
          "start" : 1756278062203,
          "stop" : 1756278062203,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单状态应为0或1",
          "time" : {
            "start" : 1756278062203,
            "stop" : 1756278062203,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "3ca696b7b9045dff",
            "name" : "订单状态详情",
            "source" : "3ca696b7b9045dff.attach",
            "type" : "text/plain",
            "size" : 37
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "验证详情手数",
        "time" : {
          "start" : 1756278062203,
          "stop" : 1756278062208,
          "duration" : 5
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062203,
            "stop" : 1756278062205,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "1a47b1e70c33c799",
            "name" : "实际手数",
            "source" : "1a47b1e70c33c799.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062205,
            "stop" : 1756278062205,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b27b39c3a5bfc0fe",
            "name" : "实际手数",
            "source" : "b27b39c3a5bfc0fe.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062205,
            "stop" : 1756278062205,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "bade4759c9e0b392",
            "name" : "实际手数",
            "source" : "bade4759c9e0b392.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062206,
            "stop" : 1756278062206,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "1f57a64da04fe657",
            "name" : "实际手数",
            "source" : "1f57a64da04fe657.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062206,
            "stop" : 1756278062206,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "cdd494dd8b000975",
            "name" : "实际手数",
            "source" : "cdd494dd8b000975.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062206,
            "stop" : 1756278062207,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "d220f19b71ed0b6e",
            "name" : "实际手数",
            "source" : "d220f19b71ed0b6e.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062207,
            "stop" : 1756278062207,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "6633ec0b1c81953b",
            "name" : "实际手数",
            "source" : "6633ec0b1c81953b.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062207,
            "stop" : 1756278062207,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "d7f28489e44e3a61",
            "name" : "实际手数",
            "source" : "d7f28489e44e3a61.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756278062207,
            "stop" : 1756278062208,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "4b01b0296e14320d",
            "name" : "实际手数",
            "source" : "4b01b0296e14320d.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 9,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 9
      }, {
        "name" : "验证订单数量",
        "time" : {
          "start" : 1756278062208,
          "stop" : 1756278062208,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单数量符合预期",
          "time" : {
            "start" : 1756278062208,
            "stop" : 1756278062208,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "d2e796d913533a76",
            "name" : "订单数量",
            "source" : "d2e796d913533a76.attach",
            "type" : "text/plain",
            "size" : 32
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "验证详情总手数",
        "time" : {
          "start" : 1756278062208,
          "stop" : 1756278062209,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n",
        "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\test_cloudTrader\\test_cloudOrderSend2.py\", line 417, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
        "steps" : [ {
          "name" : "校验: 详情总手数符合预期",
          "time" : {
            "start" : 1756278062208,
            "stop" : 1756278062208,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n",
          "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "47037076e1061dc5",
            "name" : "详情总手数",
            "source" : "47037076e1061dc5.attach",
            "type" : "text/plain",
            "size" : 35
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : true,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 16,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 12
    } ],
    "attachments" : [ {
      "uid" : "3cb875d8591bb50b",
      "name" : "log",
      "source" : "3cb875d8591bb50b.txt",
      "type" : "text/plain",
      "size" : 30051
    } ],
    "parameters" : [ ],
    "stepsCount" : 35,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 38
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1756278062226,
      "stop" : 1756278062226,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756278062225,
      "stop" : 1756278062225,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略复制下单-开仓的场景校验2"
  }, {
    "name" : "story",
    "value" : "场景2：复制下单-手数范围0.3-1，总订单数量1，总手数5"
  }, {
    "name" : "tag",
    "value" : "retry(n=3, delay=5)"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudOrderSend2"
  }, {
    "name" : "subSuite",
    "value" : "TestCloudStrategyOrder"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "34508-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudOrderSend2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "retry(n=3, delay=5)" ]
  },
  "source" : "770c64dc6837034d.json",
  "parameterValues" : [ ]
}