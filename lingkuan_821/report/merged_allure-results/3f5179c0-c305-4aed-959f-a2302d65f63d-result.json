{"name": "跟单软件看板-VPS数据-策略开仓", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderSend\nJSON路径: $.msg\n实际值: 300151下单失败,该账号正在下单中\n期望值: success", "trace": "self = <lingkuan_821.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609130>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DFD471C880>\nlogged_session = <lingkuan_821.commons.session.EnvironmentSession object at 0x000001DFD46BB4C0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-策略开仓\")\n    def test_trader_orderSend(self, var_manager, logged_session):\n        # 1. 发送策略开仓请求\n        trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n        vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n        data = {\n            \"symbol\": trader_ordersend[\"symbol\"],\n            \"placedType\": 0,\n            \"remark\": trader_ordersend[\"remark\"],\n            \"intervalTime\": 100,\n            \"type\": 0,\n            \"totalNum\": \"2\",\n            \"totalSzie\": \"\",\n            \"startSize\": \"0.01\",\n            \"endSize\": \"1\",\n            \"traderId\": vps_trader_id\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/subcontrol/trader/orderSend',\n            json_data=data,\n        )\n    \n        # 2. 验证响应状态码和内容\n        self.assert_response_status(\n            response,\n            200,\n            \"策略开仓失败\"\n        )\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_vps_orderclose.py:287: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609130>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            # 处理列表结果（如果只有一个元素则取单个值）\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader/orderSend\nE           JSON路径: $.msg\nE           实际值: 300151下单失败,该账号正在下单中\nE           期望值: success\n\n..\\lingkuan_817\\commons\\api_base.py:342: AssertionError"}, "description": "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 操作步骤：\n  1. 进行开仓，开仓订单数量控制为两个\n  2. 进行平仓，平仓一个\n  3. 进行平仓，平仓一个\n  4. 进行平仓，平仓一个，平仓失败，没有可平订单\n- 预期结果：平仓的订单数量功能正确\n", "steps": [{"name": "发送 POST 请求到 /subcontrol/trader/orderSend", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "448f75ec-5f91-43c4-9f45-2c2ff82fb465-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "cb241b77-9290-4998-9857-eef6e2bf6379-attachment.json", "type": "application/json"}, {"name": "请求体（JSON）", "source": "0dce9acd-49e1-4854-ac02-47962e915fc9-attachment.json", "type": "application/json"}], "start": 1755512468653, "stop": 1755512468654}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "1af400e1-08eb-47ac-a20f-9836d55d328c-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "51374fab-e2f4-4cc8-8c06-9e08cf8d9b18-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "58a68c82-14bd-4351-9f8d-cad0170de007-attachment.json", "type": "application/json"}], "start": 1755512468962, "stop": 1755512468963}], "start": 1755512468653, "stop": 1755512469971}], "attachments": [{"name": "log", "source": "e1106902-7085-444b-8b7d-ec9a4168b500-attachment.txt", "type": "text/plain"}], "start": 1755512468653, "stop": 1755512469975, "uuid": "8ccfa218-5297-4bd7-b42a-23f9f89061b3", "historyId": "00919200ff9c6df50ff7ff27efcc00bb", "testCaseId": "00919200ff9c6df50ff7ff27efcc00bb", "fullName": "test_vps.test_vps_orderclose.TestVPSOrderSend2#test_trader_orderSend", "labels": [{"name": "tag", "value": "url('vps')"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_vps_orderclose"}, {"name": "subSuite", "value": "TestVPSOrderSend2"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "6824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_vps_orderclose"}]}