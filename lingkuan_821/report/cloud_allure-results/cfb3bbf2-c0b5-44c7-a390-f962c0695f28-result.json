{"name": "数据库校验-复制下单数据", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5", "trace": "self = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000001D163AF0880>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000001D163B9C6D0>\ndb_transaction = <pymysql.connections.Connection object at 0x000001D163BD70A0>\n\n    @pytest.mark.retry(n=3, delay=5)\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情手数\"):\n                size = [record[\"size\"] for record in db_data]\n                for i in size:\n                    self.verify_data(\n                        actual_value=float(i),\n                        expected_value=0.3,\n                        op=CompareOp.GT,\n                        message=\"实际手数符合预期\",\n                        attachment_name=\"实际手数\"\n                    )\n                logging.info(f\"实际手数: {size}\")\n    \n            with allure.step(\"验证订单数量\"):\n                total_orders = db_data[0][\"total_orders\"]\n                self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=total_orders,\n                    op=CompareOp.NE,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n                logging.info(f\"实际订单数量: {len(db_data)}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend2.py:417: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000001D163AF0880>\nactual_value = 5.77, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 5.77\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n      2. 校验权重，优先满足手数范围，然后是总手数\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：权重正确，优先满足手数范围，然后是总手数\n    ", "steps": [{"name": "查询复制订单详情数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "f509bfe8-8aa3-421d-9063-0bc5bb190617-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "7911c0f0-0b68-4194-bd71-98c4bf4022c4-attachment.txt", "type": "text/plain"}], "start": 1756278055082, "stop": 1756278056079}], "attachments": [{"name": "时区处理", "source": "617d2e14-de40-42d5-aeb9-6191fe296be0-attachment.txt", "type": "text/plain"}], "start": 1756278055082, "stop": 1756278056079}, {"name": "轮询中（已等待1.0秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "f9d5ed69-682c-4264-a35e-fc2543300c80-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "f08acb3d-1c57-41db-9f08-638baffda0e1-attachment.txt", "type": "text/plain"}], "start": 1756278056079, "stop": 1756278056079}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "bf17f63a-da25-49ad-9967-24d034f9131d-attachment.txt", "type": "text/plain"}], "start": 1756278056079, "stop": 1756278056080}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "8888df25-fa44-46ef-8e7a-a97dc8fde472-attachment.txt", "type": "text/plain"}], "start": 1756278056080, "stop": 1756278056080}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "37321ac2-9c0e-449b-9c8a-ba34c2db6d4a-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "f75fcdbe-5a13-4b8f-9179-117aa15dc2e0-attachment.txt", "type": "text/plain"}], "start": 1756278058137, "stop": 1756278059129}], "attachments": [{"name": "时区处理", "source": "b56d1954-c6f4-4dba-90c0-f4c7d7f29120-attachment.txt", "type": "text/plain"}], "start": 1756278058136, "stop": 1756278059129}, {"name": "轮询中（已等待4.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "67c01007-ddd8-4792-83bf-174d9ee4284c-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "00b2e07a-2fd0-4aa4-8deb-ff75e1091b02-attachment.txt", "type": "text/plain"}], "start": 1756278059129, "stop": 1756278059130}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "8fce8ed0-9f54-4742-964f-2f71160905ef-attachment.txt", "type": "text/plain"}], "start": 1756278059130, "stop": 1756278059130}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "fc4fafcd-62c3-44df-a06a-31ef748d2d05-attachment.txt", "type": "text/plain"}], "start": 1756278059130, "stop": 1756278059130}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "fc5b030c-d762-43e9-bc98-24512fe020c0-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "4cd6f203-fdd9-4d3b-aa1c-9fee82fddfa3-attachment.txt", "type": "text/plain"}], "start": 1756278061188, "stop": 1756278062201}], "attachments": [{"name": "时区处理", "source": "22f85e66-6e07-4d5d-9967-6228cb4b8c78-attachment.txt", "type": "text/plain"}], "start": 1756278061187, "stop": 1756278062201}, {"name": "轮询中（已等待7.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "5d9c0b64-121e-4b16-a510-2390aeb964f2-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "55622728-24de-413e-b1d2-72645e663af1-attachment.txt", "type": "text/plain"}], "start": 1756278062201, "stop": 1756278062202}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "9698e824-b1c0-44c3-96c1-88433c9ee7eb-attachment.txt", "type": "text/plain"}], "start": 1756278062202, "stop": 1756278062203}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "ad7199c0-6762-4c8b-a24e-b726e3ad4c11-attachment.txt", "type": "text/plain"}], "start": 1756278062203, "stop": 1756278062203}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "33fdeae7-b467-4736-a104-7ae4d8c86cc3-attachment.json", "type": "application/json"}], "start": 1756278062203, "stop": 1756278062203}], "attachments": [{"name": "执行SQL", "source": "b02604d4-b2a6-4a16-ae9f-21f6c8a5bd27-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "3b744e86-85fd-49f9-9a5b-d7768befcac7-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "f1bd0da8-2912-46a3-bf07-cc5bafea70db-attachment.txt", "type": "text/plain"}], "start": 1756278055035, "stop": 1756278062203}], "start": 1756278055035, "stop": 1756278062203}, {"name": "执行复制下单数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_821\\test_cloudTrader\\test_cloudOrderSend2.py\", line 417, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单状态", "status": "passed", "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "50c33c70-5553-47a8-b434-442beaf66f08-attachment.attach", "type": "text/plain"}], "start": 1756278062203, "stop": 1756278062203}], "start": 1756278062203, "stop": 1756278062203}, {"name": "验证详情手数", "status": "passed", "steps": [{"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "bcb14700-44e5-4da8-8567-569741a70988-attachment.attach", "type": "text/plain"}], "start": 1756278062203, "stop": 1756278062205}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "32895c87-a5dd-4647-8795-0494d9e69aba-attachment.attach", "type": "text/plain"}], "start": 1756278062205, "stop": 1756278062205}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "6849bd41-bbd3-4875-bfb8-410f66832956-attachment.attach", "type": "text/plain"}], "start": 1756278062205, "stop": 1756278062205}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "c47a14e2-ec56-4dc9-a8b1-a5cbf44d42a8-attachment.attach", "type": "text/plain"}], "start": 1756278062206, "stop": 1756278062206}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "2c8115a8-10db-47a0-8d2b-c18f7c429393-attachment.attach", "type": "text/plain"}], "start": 1756278062206, "stop": 1756278062206}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "0f9b7e1c-1ed7-4fa4-b619-add4b4828232-attachment.attach", "type": "text/plain"}], "start": 1756278062206, "stop": 1756278062207}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "5efc8cfb-feca-4439-ac29-d61a4d665aeb-attachment.attach", "type": "text/plain"}], "start": 1756278062207, "stop": 1756278062207}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "aa468856-a739-4d4a-81bd-e6e8a6dcf74b-attachment.attach", "type": "text/plain"}], "start": 1756278062207, "stop": 1756278062207}, {"name": "校验: 实际手数符合预期", "status": "passed", "attachments": [{"name": "实际手数", "source": "2179d30a-00f9-4cc8-aab6-ce482bdd3f3b-attachment.attach", "type": "text/plain"}], "start": 1756278062207, "stop": 1756278062208}], "start": 1756278062203, "stop": 1756278062208}, {"name": "验证订单数量", "status": "passed", "steps": [{"name": "校验: 订单数量符合预期", "status": "passed", "attachments": [{"name": "订单数量", "source": "af7b3b9c-5925-471b-b6fb-bc1034a4e383-attachment.attach", "type": "text/plain"}], "start": 1756278062208, "stop": 1756278062208}], "start": 1756278062208, "stop": 1756278062208}, {"name": "验证详情总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_821\\test_cloudTrader\\test_cloudOrderSend2.py\", line 417, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 详情总手数符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "详情总手数", "source": "2106f8ed-6cad-47ee-bf55-0ea5de6b6f17-attachment.attach", "type": "text/plain"}], "start": 1756278062208, "stop": 1756278062208}], "start": 1756278062208, "stop": 1756278062209}], "start": 1756278062203, "stop": 1756278062209}], "attachments": [{"name": "log", "source": "e2b43837-0346-41bf-a4fb-66cc081c14c3-attachment.txt", "type": "text/plain"}], "start": 1756278055035, "stop": 1756278062209, "uuid": "ab0ac165-3a4f-414a-8d51-41d42c768828", "historyId": "85ee8c6ca462c1ca254107d8a5937de8", "testCaseId": "85ee8c6ca462c1ca254107d8a5937de8", "fullName": "test_cloudTrader.test_cloudOrderSend2.TestMasOrderSend2#test_copy_verify_db", "labels": [{"name": "feature", "value": "云策略复制下单-开仓的场景校验2"}, {"name": "story", "value": "场景2：复制下单-手数范围0.3-1，总订单数量1，总手数5"}, {"name": "tag", "value": "retry(n=3, delay=5)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderSend2"}, {"name": "subSuite", "value": "TestCloudStrategyOrder"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "34508-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderSend2"}]}