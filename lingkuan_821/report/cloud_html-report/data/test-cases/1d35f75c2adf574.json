{
  "uid" : "1d35f75c2adf574",
  "name" : "数据库校验-复制下单数据",
  "fullName" : "test_cloudTrader.test_cloudOrderSend2.TestMasOrderSend2#test_copy_verify_db",
  "historyId" : "85ee8c6ca462c1ca254107d8a5937de8",
  "time" : {
    "start" : 1756277792861,
    "stop" : 1756277800059,
    "duration" : 7198
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n      2. 校验权重，优先满足手数范围，然后是总手数\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：权重正确，优先满足手数范围，然后是总手数\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有云策略和云跟单\n  1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n  2. 校验权重，优先满足手数范围，然后是总手数\n  3. 进行平仓\n  4. 校验账号的数据是否正确\n- 预期结果：权重正确，优先满足手数范围，然后是总手数\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5",
  "statusTrace" : "self = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000002CDAB306730>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000002CDAB30E910>\ndb_transaction = <pymysql.connections.Connection object at 0x000002CDAB33E610>\n\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情手数\"):\n                size = [record[\"size\"] for record in db_data]\n                for i in size:\n                    self.verify_data(\n                        actual_value=float(i),\n                        expected_value=0.3,\n                        op=CompareOp.GT,\n                        message=\"实际手数符合预期\",\n                        attachment_name=\"实际手数\"\n                    )\n                logging.info(f\"实际手数: {size}\")\n    \n            with allure.step(\"验证订单数量\"):\n                total_orders = db_data[0][\"total_orders\"]\n                self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=total_orders,\n                    op=CompareOp.NE,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n                logging.info(f\"实际订单数量: {len(db_data)}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend2.py:416: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000002CDAB306730>\nactual_value = 5.77, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 5.77\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756277792861,
      "stop" : 1756277792861,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1756277773959,
      "stop" : 1756277773959,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1756277770952,
      "stop" : 1756277770953,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1756277770952,
      "stop" : 1756277770952,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1756277770952,
      "stop" : 1756277770952,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1756277792424,
      "stop" : 1756277792861,
      "duration" : 437
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n      2. 校验权重，优先满足手数范围，然后是总手数\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：权重正确，优先满足手数范围，然后是总手数\n    ",
    "status" : "failed",
    "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5",
    "statusTrace" : "self = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000002CDAB306730>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000002CDAB30E910>\ndb_transaction = <pymysql.connections.Connection object at 0x000002CDAB33E610>\n\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情手数\"):\n                size = [record[\"size\"] for record in db_data]\n                for i in size:\n                    self.verify_data(\n                        actual_value=float(i),\n                        expected_value=0.3,\n                        op=CompareOp.GT,\n                        message=\"实际手数符合预期\",\n                        attachment_name=\"实际手数\"\n                    )\n                logging.info(f\"实际手数: {size}\")\n    \n            with allure.step(\"验证订单数量\"):\n                total_orders = db_data[0][\"total_orders\"]\n                self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=total_orders,\n                    op=CompareOp.NE,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n                logging.info(f\"实际订单数量: {len(db_data)}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend2.py:416: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x000002CDAB306730>\nactual_value = 5.77, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 5.77\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed",
    "steps" : [ {
      "name" : "查询复制订单详情数据",
      "time" : {
        "start" : 1756277792861,
        "stop" : 1756277800052,
        "duration" : 7191
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（时区+05:00，超时30秒）",
        "time" : {
          "start" : 1756277792861,
          "stop" : 1756277800052,
          "duration" : 7191
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756277792912,
            "stop" : 1756277793887,
            "duration" : 975
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756277792912,
              "stop" : 1756277793887,
              "duration" : 975
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "6e77293119585c34",
              "name" : "执行SQL",
              "source" : "6e77293119585c34.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "505ce434fb117d40",
              "name" : "SQL参数",
              "source" : "505ce434fb117d40.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "a202dcdfb58e18e2",
            "name" : "时区处理",
            "source" : "a202dcdfb58e18e2.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待1.0秒）",
          "time" : {
            "start" : 1756277793887,
            "stop" : 1756277793888,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "686728868dbb41d5",
            "name" : "当前状态",
            "source" : "686728868dbb41d5.txt",
            "type" : "text/plain",
            "size" : 16
          }, {
            "uid" : "e00efe81abb18cda",
            "name" : "超时倒计时",
            "source" : "e00efe81abb18cda.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756277793888,
            "stop" : 1756277793888,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "f728b99fd19ecded",
            "name" : "判断结果",
            "source" : "f728b99fd19ecded.txt",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据发生变化",
          "time" : {
            "start" : 1756277793888,
            "stop" : 1756277793889,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "6abc6967db7e8b2a",
            "name" : "状态说明",
            "source" : "6abc6967db7e8b2a.txt",
            "type" : "text/plain",
            "size" : 24
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756277795938,
            "stop" : 1756277796952,
            "duration" : 1014
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756277795938,
              "stop" : 1756277796952,
              "duration" : 1014
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "cc5918f1a7aaa222",
              "name" : "执行SQL",
              "source" : "cc5918f1a7aaa222.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "9abc036a02a3ed98",
              "name" : "SQL参数",
              "source" : "9abc036a02a3ed98.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "d82c7e191e70877d",
            "name" : "时区处理",
            "source" : "d82c7e191e70877d.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待4.1秒）",
          "time" : {
            "start" : 1756277796952,
            "stop" : 1756277796953,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "559016a97b12bb0e",
            "name" : "当前状态",
            "source" : "559016a97b12bb0e.txt",
            "type" : "text/plain",
            "size" : 16
          }, {
            "uid" : "71772631f9414114",
            "name" : "超时倒计时",
            "source" : "71772631f9414114.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756277796953,
            "stop" : 1756277796953,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "ab41623ba2e4e54b",
            "name" : "判断结果",
            "source" : "ab41623ba2e4e54b.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据首次稳定",
          "time" : {
            "start" : 1756277796953,
            "stop" : 1756277796954,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "cab2d113bdd025a3",
            "name" : "状态说明",
            "source" : "cab2d113bdd025a3.txt",
            "type" : "text/plain",
            "size" : 40
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756277799022,
            "stop" : 1756277800050,
            "duration" : 1028
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756277799022,
              "stop" : 1756277800050,
              "duration" : 1028
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "779b8de75f17e4e3",
              "name" : "执行SQL",
              "source" : "779b8de75f17e4e3.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "94a0bcb20739e22d",
              "name" : "SQL参数",
              "source" : "94a0bcb20739e22d.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "82d1f79ee3bb8654",
            "name" : "时区处理",
            "source" : "82d1f79ee3bb8654.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待7.2秒）",
          "time" : {
            "start" : 1756277800050,
            "stop" : 1756277800051,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "e3bec7645bde57d5",
            "name" : "当前状态",
            "source" : "e3bec7645bde57d5.txt",
            "type" : "text/plain",
            "size" : 16
          }, {
            "uid" : "1c562ea7f5eb1c82",
            "name" : "超时倒计时",
            "source" : "1c562ea7f5eb1c82.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756277800051,
            "stop" : 1756277800051,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "25ce96f88bcf16d0",
            "name" : "判断结果",
            "source" : "25ce96f88bcf16d0.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据稳定达标",
          "time" : {
            "start" : 1756277800052,
            "stop" : 1756277800052,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "f22c0b32409f1772",
            "name" : "结果说明",
            "source" : "f22c0b32409f1772.txt",
            "type" : "text/plain",
            "size" : 34
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区查询最终结果",
          "time" : {
            "start" : 1756277800052,
            "stop" : 1756277800052,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "d0fca11eb31f9fbe",
            "name" : "结果预览",
            "source" : "d0fca11eb31f9fbe.json",
            "type" : "application/json",
            "size" : 3999
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ {
          "uid" : "a1cfbfbf38e4d2c2",
          "name" : "执行SQL",
          "source" : "a1cfbfbf38e4d2c2.txt",
          "type" : "text/plain",
          "size" : 990
        }, {
          "uid" : "c51d8d0a1d215ce6",
          "name" : "SQL参数",
          "source" : "c51d8d0a1d215ce6.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "dab120586ce82444",
          "name" : "时区偏移量（小时）",
          "source" : "dab120586ce82444.txt",
          "type" : "text/plain",
          "size" : 1
        } ],
        "parameters" : [ ],
        "stepsCount" : 16,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 25
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 25
    }, {
      "name" : "执行复制下单数据校验",
      "time" : {
        "start" : 1756277800052,
        "stop" : 1756277800059,
        "duration" : 7
      },
      "status" : "failed",
      "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\test_cloudTrader\\test_cloudOrderSend2.py\", line 416, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ {
        "name" : "验证订单状态",
        "time" : {
          "start" : 1756277800052,
          "stop" : 1756277800053,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单状态应为0或1",
          "time" : {
            "start" : 1756277800052,
            "stop" : 1756277800053,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "ab42a774c1e0e6ff",
            "name" : "订单状态详情",
            "source" : "ab42a774c1e0e6ff.attach",
            "type" : "text/plain",
            "size" : 37
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "验证详情手数",
        "time" : {
          "start" : 1756277800053,
          "stop" : 1756277800057,
          "duration" : 4
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800053,
            "stop" : 1756277800053,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "98960688e3fba3f4",
            "name" : "实际手数",
            "source" : "98960688e3fba3f4.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800053,
            "stop" : 1756277800053,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "2db7759077dbb6dd",
            "name" : "实际手数",
            "source" : "2db7759077dbb6dd.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800053,
            "stop" : 1756277800054,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "4f1732fedd5a6adc",
            "name" : "实际手数",
            "source" : "4f1732fedd5a6adc.attach",
            "type" : "text/plain",
            "size" : 35
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800054,
            "stop" : 1756277800054,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "d6f9ee8e846e249b",
            "name" : "实际手数",
            "source" : "d6f9ee8e846e249b.attach",
            "type" : "text/plain",
            "size" : 35
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800054,
            "stop" : 1756277800055,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "a4265dba3a91db74",
            "name" : "实际手数",
            "source" : "a4265dba3a91db74.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800055,
            "stop" : 1756277800055,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "bd27d20578ab97c8",
            "name" : "实际手数",
            "source" : "bd27d20578ab97c8.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800055,
            "stop" : 1756277800055,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "6ba12a367cddbae1",
            "name" : "实际手数",
            "source" : "6ba12a367cddbae1.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800055,
            "stop" : 1756277800056,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "5b5afdde610b3e83",
            "name" : "实际手数",
            "source" : "5b5afdde610b3e83.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800056,
            "stop" : 1756277800056,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "91f3e57fe31d01aa",
            "name" : "实际手数",
            "source" : "91f3e57fe31d01aa.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756277800056,
            "stop" : 1756277800057,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "9e264a7c835b97af",
            "name" : "实际手数",
            "source" : "9e264a7c835b97af.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 10,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 10
      }, {
        "name" : "验证订单数量",
        "time" : {
          "start" : 1756277800057,
          "stop" : 1756277800057,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单数量符合预期",
          "time" : {
            "start" : 1756277800057,
            "stop" : 1756277800057,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "a8b1f4ca908807e5",
            "name" : "订单数量",
            "source" : "a8b1f4ca908807e5.attach",
            "type" : "text/plain",
            "size" : 33
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "验证详情总手数",
        "time" : {
          "start" : 1756277800057,
          "stop" : 1756277800058,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n",
        "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\test_cloudTrader\\test_cloudOrderSend2.py\", line 416, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
        "steps" : [ {
          "name" : "校验: 详情总手数符合预期",
          "time" : {
            "start" : 1756277800057,
            "stop" : 1756277800057,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.77\n操作: ==\n预期: 5\n\n",
          "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "858f6d1db8c3d04",
            "name" : "详情总手数",
            "source" : "858f6d1db8c3d04.attach",
            "type" : "text/plain",
            "size" : 35
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : true,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 13
    } ],
    "attachments" : [ {
      "uid" : "6081c71bccce3b6c",
      "name" : "log",
      "source" : "6081c71bccce3b6c.txt",
      "type" : "text/plain",
      "size" : 16132
    } ],
    "parameters" : [ ],
    "stepsCount" : 36,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 39
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756277800175,
      "stop" : 1756277800175,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1756277839091,
      "stop" : 1756277839091,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1756277800176,
      "stop" : 1756277800176,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略复制下单-开仓的场景校验2"
  }, {
    "name" : "story",
    "value" : "场景2：复制下单-手数范围0.3-1，总订单数量1，总手数5"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudOrderSend2"
  }, {
    "name" : "subSuite",
    "value" : "TestCloudStrategyOrder"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "34172-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudOrderSend2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "1d35f75c2adf574.json",
  "parameterValues" : [ ]
}