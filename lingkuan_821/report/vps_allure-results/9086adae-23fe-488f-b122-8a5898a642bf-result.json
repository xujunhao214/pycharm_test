{"name": "数据库校验-策略平仓-跟单指令及订单详情数据检查", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 开始手数应符合预期\n预期: 0.1\n操作: ==\n实际: 0.0", "trace": "self = <lingkuan_821.test_vps.test_vps_ordersend2.TestVPSOrderSend object at 0x000001DEDFB863D0>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000001DEDF8D6970>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DEDF919040>\n\n    @allure.title(\"数据库校验-策略平仓-跟单指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n                    \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 验证主指令开仓数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            # 验证订单状态\n            status = db_data[0][\"status\"]\n            self.verify_data(\n                actual_value=status,\n                expected_value=(0, 1),  # 预期值是元组\n                op=CompareOp.IN,  # 使用包含关系判断\n                message=\"订单状态应为0或1\",\n                attachment_name=\"订单状态详情\"\n            )\n            logging.info(f\"订单状态验证通过: {status}\")\n    \n            # 验证手数范围（开始手数）\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if trader_ordersend[\"startSize\"]:\n                max_lot_size = db_data[0][\"max_lot_size\"]\n>               self.verify_data(\n                    actual_value=float(max_lot_size),\n                    expected_value=float(trader_ordersend[\"startSize\"]),\n                    op=CompareOp.EQ,\n                    message=\"开始手数应符合预期\",\n                    attachment_name=\"开始手数详情\"\n                )\n\ntest_vps\\test_vps_ordersend2.py:365: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_vps.test_vps_ordersend2.TestVPSOrderSend object at 0x000001DEDFB863D0>\nactual_value = 0.0, expected_value = 0.1, op = <CompareOp.EQ: '=='>\nmessage = '开始手数应符合预期', attachment_name = '开始手数详情'\nattachment_type = <AttachmentType.TEXT: ('text/plain', 'txt')>\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=allure.attachment_type.TEXT\n    ):\n        \"\"\"\n        通用数据校验函数，支持灵活比较并生成 Allure 报告分层步骤\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            # 执行比较操作\n            result = False\n            try:\n                if op == CompareOp.EQ:\n                    result = actual_value == expected_value\n                elif op == CompareOp.NE:\n                    result = actual_value != expected_value\n                elif op == CompareOp.GT:\n                    result = actual_value > expected_value\n                elif op == CompareOp.LT:\n                    result = actual_value < expected_value\n                elif op == CompareOp.GE:\n                    result = actual_value >= expected_value\n                elif op == CompareOp.LE:\n                    result = actual_value <= expected_value\n                elif op == CompareOp.IN:\n                    # 处理包含关系（实际值在预期值列表/元组中）\n                    result = actual_value in expected_value\n                elif op == CompareOp.NOT_IN:\n                    # 处理不包含关系\n                    result = actual_value not in expected_value\n            except TypeError as e:\n                # 捕获类型不匹配导致的比较错误（如数字与字符串比较）\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息\n            detail_msg = (\n                f\"预期: {expected_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"实际: {actual_value}\\n\"\n            )\n            allure.attach(detail_msg, attachment_name, attachment_type)\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 开始手数应符合预期\nE               预期: 0.1\nE               操作: ==\nE               实际: 0.0\n\ncommons\\api_base.py:1276: Failed"}, "description": "\n### 测试说明\n- 场景校验：手数范围>总手数>订单数量\n- 前置条件：有vps策略和vps跟单\n  1. 进行开仓，手数范围0.6-1，总手数1\n  2. 校验手数范围限制是否生效，只有一个订单，订单手数大于0.6\n  3. 进行平仓\n  4. 校验账号的数据是否正确\n- 预期结果：账号的数据正确\n", "steps": [{"name": "1. 获取订单详情界面跟单账号数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "128d47ab-cebb-4fd6-80a1-de31af22b225-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "e4081b66-9c5f-445e-988a-5e00e3674560-attachment.txt", "type": "text/plain"}], "start": 1756203302686, "stop": 1756203302747}], "attachments": [{"name": "时区处理", "source": "1e82d5bf-5ba5-4393-8a6f-2b80591be7cc-attachment.txt", "type": "text/plain"}], "start": 1756203302686, "stop": 1756203302747}, {"name": "轮询中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "6da61655-b276-4306-9ee2-7e9130fd68d8-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "301e5443-5823-4394-96c1-d4a520e4c9f9-attachment.txt", "type": "text/plain"}], "start": 1756203302747, "stop": 1756203302749}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "dc91df53-0c41-4025-a774-27e0115fdf0a-attachment.txt", "type": "text/plain"}], "start": 1756203302749, "stop": 1756203302749}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "4ffea910-057d-4e4e-8fc3-81de096a9d44-attachment.txt", "type": "text/plain"}], "start": 1756203302749, "stop": 1756203302750}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "8927b7d0-8601-4036-b7d6-69c1c8fb25b5-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "6bdb7448-65b5-4254-916b-0c52a24f02f9-attachment.txt", "type": "text/plain"}], "start": 1756203304800, "stop": 1756203304861}], "attachments": [{"name": "时区处理", "source": "937b0257-0aee-48aa-9046-248e93fe0787-attachment.txt", "type": "text/plain"}], "start": 1756203304800, "stop": 1756203304861}, {"name": "轮询中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "563cd16f-a8bc-4367-8d2d-725b85d4cbbd-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "375c6700-6cbb-4c53-9532-5d3a50bf97fa-attachment.txt", "type": "text/plain"}], "start": 1756203304861, "stop": 1756203304862}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "1994b85c-c28e-402a-a27b-12a74d3fc93c-attachment.txt", "type": "text/plain"}], "start": 1756203304862, "stop": 1756203304862}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "95d6f94c-b290-4e74-9b29-4bab4446fa98-attachment.txt", "type": "text/plain"}], "start": 1756203304862, "stop": 1756203304863}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "71b9f435-a752-45b2-b27d-04d3c224b3f4-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "d244d04e-aa88-46cd-b625-22a0b7dd128b-attachment.txt", "type": "text/plain"}], "start": 1756203306914, "stop": 1756203307182}], "attachments": [{"name": "时区处理", "source": "260de023-694d-427c-8b43-2e049971eec1-attachment.txt", "type": "text/plain"}], "start": 1756203306913, "stop": 1756203307182}, {"name": "轮询中（已等待4.5秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "03475d49-d797-48cd-8c92-cdcbf1e8b2e3-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "c2fbc303-e10e-4a42-aa50-c86f8828fece-attachment.txt", "type": "text/plain"}], "start": 1756203307182, "stop": 1756203307183}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "53fc0e33-6c37-4b70-aa43-07763bbe17eb-attachment.txt", "type": "text/plain"}], "start": 1756203307183, "stop": 1756203307184}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "9c2d2d69-a126-40eb-a78d-568959917fda-attachment.txt", "type": "text/plain"}], "start": 1756203307184, "stop": 1756203307184}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "e469b7de-8a93-4f55-a2f8-53da51fa4fa8-attachment.json", "type": "application/json"}], "start": 1756203307184, "stop": 1756203307185}], "attachments": [{"name": "执行SQL", "source": "efc30a7d-8f69-4e06-b562-fd937c2f43f3-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "e98c5a88-284c-4671-9014-a3dd841c4f11-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "7131e0ef-b021-43b1-bc42-8b3ccd13de44-attachment.txt", "type": "text/plain"}], "start": 1756203302633, "stop": 1756203307185}], "start": 1756203302633, "stop": 1756203307185}, {"name": "2. 验证主指令开仓数据", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 开始手数应符合预期\n预期: 0.1\n操作: ==\n实际: 0.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_821\\test_vps\\test_vps_ordersend2.py\", line 365, in test_dbquery_addsalve_orderSendclose\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1276, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "713d8075-a18c-4ca6-9a75-78a441820386-attachment.txt", "type": "text/plain"}], "start": 1756203307185, "stop": 1756203307185}, {"name": "校验: 开始手数应符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 开始手数应符合预期\n预期: 0.1\n操作: ==\n实际: 0.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1276, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "开始手数详情", "source": "df05425a-dbdf-4850-94e5-652d40a6d4d5-attachment.txt", "type": "text/plain"}], "start": 1756203307185, "stop": 1756203307185}], "start": 1756203307185, "stop": 1756203307186}], "attachments": [{"name": "log", "source": "1e9e6792-9c7b-47cd-a0e0-0f6b37d1493d-attachment.txt", "type": "text/plain"}], "start": 1756203302632, "stop": 1756203307187, "uuid": "b1cfdaeb-fc12-47bb-9152-c767edac3f2c", "historyId": "06023d90dbf735dc9ad04136c328814b", "testCaseId": "06023d90dbf735dc9ad04136c328814b", "fullName": "test_vps.test_vps_ordersend2.TestVPSOrderSend#test_dbquery_addsalve_orderSendclose", "labels": [{"name": "story", "value": "VPS策略下单-下单的场景校验"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_vps_ordersend2"}, {"name": "subSuite", "value": "TestVPSOrderSend"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "11812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_vps_ordersend2"}]}