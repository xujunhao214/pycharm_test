{
  "uid" : "bb79775944f8f12",
  "name" : "数据库校验-策略平仓-跟单指令及订单详情数据检查",
  "fullName" : "test_vps.test_vps_ordersend2.TestVPSOrderSend#test_dbquery_addsalve_orderSendclose",
  "historyId" : "06023d90dbf735dc9ad04136c328814b",
  "time" : {
    "start" : 1756203302632,
    "stop" : 1756203307187,
    "duration" : 4555
  },
  "description" : "\n### 测试说明\n- 场景校验：手数范围>总手数>订单数量\n- 前置条件：有vps策略和vps跟单\n  1. 进行开仓，手数范围0.6-1，总手数1\n  2. 校验手数范围限制是否生效，只有一个订单，订单手数大于0.6\n  3. 进行平仓\n  4. 校验账号的数据是否正确\n- 预期结果：账号的数据正确\n",
  "descriptionHtml" : "<h3>测试说明</h3>\n<ul>\n<li>场景校验：手数范围&gt;总手数&gt;订单数量</li>\n<li>前置条件：有vps策略和vps跟单\n<ol>\n<li>进行开仓，手数范围0.6-1，总手数1</li>\n<li>校验手数范围限制是否生效，只有一个订单，订单手数大于0.6</li>\n<li>进行平仓</li>\n<li>校验账号的数据是否正确</li>\n</ol>\n</li>\n<li>预期结果：账号的数据正确</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "Failed: 校验失败: 开始手数应符合预期\n预期: 0.1\n操作: ==\n实际: 0.0",
  "statusTrace" : "self = <lingkuan_821.test_vps.test_vps_ordersend2.TestVPSOrderSend object at 0x000001DEDFB863D0>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000001DEDF8D6970>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DEDF919040>\n\n    @allure.title(\"数据库校验-策略平仓-跟单指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n                    \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 验证主指令开仓数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            # 验证订单状态\n            status = db_data[0][\"status\"]\n            self.verify_data(\n                actual_value=status,\n                expected_value=(0, 1),  # 预期值是元组\n                op=CompareOp.IN,  # 使用包含关系判断\n                message=\"订单状态应为0或1\",\n                attachment_name=\"订单状态详情\"\n            )\n            logging.info(f\"订单状态验证通过: {status}\")\n    \n            # 验证手数范围（开始手数）\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if trader_ordersend[\"startSize\"]:\n                max_lot_size = db_data[0][\"max_lot_size\"]\n>               self.verify_data(\n                    actual_value=float(max_lot_size),\n                    expected_value=float(trader_ordersend[\"startSize\"]),\n                    op=CompareOp.EQ,\n                    message=\"开始手数应符合预期\",\n                    attachment_name=\"开始手数详情\"\n                )\n\ntest_vps\\test_vps_ordersend2.py:365: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_vps.test_vps_ordersend2.TestVPSOrderSend object at 0x000001DEDFB863D0>\nactual_value = 0.0, expected_value = 0.1, op = <CompareOp.EQ: '=='>\nmessage = '开始手数应符合预期', attachment_name = '开始手数详情'\nattachment_type = <AttachmentType.TEXT: ('text/plain', 'txt')>\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=allure.attachment_type.TEXT\n    ):\n        \"\"\"\n        通用数据校验函数，支持灵活比较并生成 Allure 报告分层步骤\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            # 执行比较操作\n            result = False\n            try:\n                if op == CompareOp.EQ:\n                    result = actual_value == expected_value\n                elif op == CompareOp.NE:\n                    result = actual_value != expected_value\n                elif op == CompareOp.GT:\n                    result = actual_value > expected_value\n                elif op == CompareOp.LT:\n                    result = actual_value < expected_value\n                elif op == CompareOp.GE:\n                    result = actual_value >= expected_value\n                elif op == CompareOp.LE:\n                    result = actual_value <= expected_value\n                elif op == CompareOp.IN:\n                    # 处理包含关系（实际值在预期值列表/元组中）\n                    result = actual_value in expected_value\n                elif op == CompareOp.NOT_IN:\n                    # 处理不包含关系\n                    result = actual_value not in expected_value\n            except TypeError as e:\n                # 捕获类型不匹配导致的比较错误（如数字与字符串比较）\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息\n            detail_msg = (\n                f\"预期: {expected_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"实际: {actual_value}\\n\"\n            )\n            allure.attach(detail_msg, attachment_name, attachment_type)\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 开始手数应符合预期\nE               预期: 0.1\nE               操作: ==\nE               实际: 0.0\n\ncommons\\api_base.py:1276: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1756203270668,
      "stop" : 1756203270668,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1756203302194,
      "stop" : 1756203302632,
      "duration" : 438
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1756203270668,
      "stop" : 1756203270668,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756203302632,
      "stop" : 1756203302632,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1756203270668,
      "stop" : 1756203270668,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1756203273413,
      "stop" : 1756203273413,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### 测试说明\n- 场景校验：手数范围>总手数>订单数量\n- 前置条件：有vps策略和vps跟单\n  1. 进行开仓，手数范围0.6-1，总手数1\n  2. 校验手数范围限制是否生效，只有一个订单，订单手数大于0.6\n  3. 进行平仓\n  4. 校验账号的数据是否正确\n- 预期结果：账号的数据正确\n",
    "status" : "failed",
    "statusMessage" : "Failed: 校验失败: 开始手数应符合预期\n预期: 0.1\n操作: ==\n实际: 0.0",
    "statusTrace" : "self = <lingkuan_821.test_vps.test_vps_ordersend2.TestVPSOrderSend object at 0x000001DEDFB863D0>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x000001DEDF8D6970>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DEDF919040>\n\n    @allure.title(\"数据库校验-策略平仓-跟单指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n                    \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 验证主指令开仓数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            # 验证订单状态\n            status = db_data[0][\"status\"]\n            self.verify_data(\n                actual_value=status,\n                expected_value=(0, 1),  # 预期值是元组\n                op=CompareOp.IN,  # 使用包含关系判断\n                message=\"订单状态应为0或1\",\n                attachment_name=\"订单状态详情\"\n            )\n            logging.info(f\"订单状态验证通过: {status}\")\n    \n            # 验证手数范围（开始手数）\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if trader_ordersend[\"startSize\"]:\n                max_lot_size = db_data[0][\"max_lot_size\"]\n>               self.verify_data(\n                    actual_value=float(max_lot_size),\n                    expected_value=float(trader_ordersend[\"startSize\"]),\n                    op=CompareOp.EQ,\n                    message=\"开始手数应符合预期\",\n                    attachment_name=\"开始手数详情\"\n                )\n\ntest_vps\\test_vps_ordersend2.py:365: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_vps.test_vps_ordersend2.TestVPSOrderSend object at 0x000001DEDFB863D0>\nactual_value = 0.0, expected_value = 0.1, op = <CompareOp.EQ: '=='>\nmessage = '开始手数应符合预期', attachment_name = '开始手数详情'\nattachment_type = <AttachmentType.TEXT: ('text/plain', 'txt')>\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=allure.attachment_type.TEXT\n    ):\n        \"\"\"\n        通用数据校验函数，支持灵活比较并生成 Allure 报告分层步骤\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            # 执行比较操作\n            result = False\n            try:\n                if op == CompareOp.EQ:\n                    result = actual_value == expected_value\n                elif op == CompareOp.NE:\n                    result = actual_value != expected_value\n                elif op == CompareOp.GT:\n                    result = actual_value > expected_value\n                elif op == CompareOp.LT:\n                    result = actual_value < expected_value\n                elif op == CompareOp.GE:\n                    result = actual_value >= expected_value\n                elif op == CompareOp.LE:\n                    result = actual_value <= expected_value\n                elif op == CompareOp.IN:\n                    # 处理包含关系（实际值在预期值列表/元组中）\n                    result = actual_value in expected_value\n                elif op == CompareOp.NOT_IN:\n                    # 处理不包含关系\n                    result = actual_value not in expected_value\n            except TypeError as e:\n                # 捕获类型不匹配导致的比较错误（如数字与字符串比较）\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息\n            detail_msg = (\n                f\"预期: {expected_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"实际: {actual_value}\\n\"\n            )\n            allure.attach(detail_msg, attachment_name, attachment_type)\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 开始手数应符合预期\nE               预期: 0.1\nE               操作: ==\nE               实际: 0.0\n\ncommons\\api_base.py:1276: Failed",
    "steps" : [ {
      "name" : "1. 获取订单详情界面跟单账号数据",
      "time" : {
        "start" : 1756203302633,
        "stop" : 1756203307185,
        "duration" : 4552
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（时区+05:00，超时30秒）",
        "time" : {
          "start" : 1756203302633,
          "stop" : 1756203307185,
          "duration" : 4552
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756203302686,
            "stop" : 1756203302747,
            "duration" : 61
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756203302686,
              "stop" : 1756203302747,
              "duration" : 61
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "b6e9c90867807058",
              "name" : "执行SQL",
              "source" : "b6e9c90867807058.txt",
              "type" : "text/plain",
              "size" : 1126
            }, {
              "uid" : "1aab10532dcdaec7",
              "name" : "SQL参数",
              "source" : "1aab10532dcdaec7.txt",
              "type" : "text/plain",
              "size" : 27
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false,
            "hasContent" : true
          } ],
          "attachments" : [ {
            "uid" : "e53f0728c1f2a835",
            "name" : "时区处理",
            "source" : "e53f0728c1f2a835.txt",
            "type" : "text/plain",
            "size" : 51
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "轮询中（已等待0.1秒）",
          "time" : {
            "start" : 1756203302747,
            "stop" : 1756203302749,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "f5774f5463c450e6",
            "name" : "当前状态",
            "source" : "f5774f5463c450e6.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "f9941b79c9d0de7e",
            "name" : "超时倒计时",
            "source" : "f9941b79c9d0de7e.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756203302749,
            "stop" : 1756203302749,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b3948e9fbba15f30",
            "name" : "判断结果",
            "source" : "b3948e9fbba15f30.txt",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "数据发生变化",
          "time" : {
            "start" : 1756203302749,
            "stop" : 1756203302750,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "467798bcc4405b1b",
            "name" : "状态说明",
            "source" : "467798bcc4405b1b.txt",
            "type" : "text/plain",
            "size" : 24
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756203304800,
            "stop" : 1756203304861,
            "duration" : 61
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756203304800,
              "stop" : 1756203304861,
              "duration" : 61
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "51aa8fdfa07d1a0a",
              "name" : "执行SQL",
              "source" : "51aa8fdfa07d1a0a.txt",
              "type" : "text/plain",
              "size" : 1126
            }, {
              "uid" : "b4b740846d117aba",
              "name" : "SQL参数",
              "source" : "b4b740846d117aba.txt",
              "type" : "text/plain",
              "size" : 27
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false,
            "hasContent" : true
          } ],
          "attachments" : [ {
            "uid" : "92bbdfd9cee05e5d",
            "name" : "时区处理",
            "source" : "92bbdfd9cee05e5d.txt",
            "type" : "text/plain",
            "size" : 51
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "轮询中（已等待2.2秒）",
          "time" : {
            "start" : 1756203304861,
            "stop" : 1756203304862,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "fbec0eb34f3b6261",
            "name" : "当前状态",
            "source" : "fbec0eb34f3b6261.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "3194dd4ca6c2c425",
            "name" : "超时倒计时",
            "source" : "3194dd4ca6c2c425.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756203304862,
            "stop" : 1756203304862,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b199b09c1f09b32f",
            "name" : "判断结果",
            "source" : "b199b09c1f09b32f.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "数据首次稳定",
          "time" : {
            "start" : 1756203304862,
            "stop" : 1756203304863,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "c8417db005ffd968",
            "name" : "状态说明",
            "source" : "c8417db005ffd968.txt",
            "type" : "text/plain",
            "size" : 40
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756203306913,
            "stop" : 1756203307182,
            "duration" : 269
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756203306914,
              "stop" : 1756203307182,
              "duration" : 268
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "f5255e25a84dea45",
              "name" : "执行SQL",
              "source" : "f5255e25a84dea45.txt",
              "type" : "text/plain",
              "size" : 1126
            }, {
              "uid" : "741d5fddc63ec361",
              "name" : "SQL参数",
              "source" : "741d5fddc63ec361.txt",
              "type" : "text/plain",
              "size" : 27
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false,
            "hasContent" : true
          } ],
          "attachments" : [ {
            "uid" : "43829f063d67eba9",
            "name" : "时区处理",
            "source" : "43829f063d67eba9.txt",
            "type" : "text/plain",
            "size" : 51
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "轮询中（已等待4.5秒）",
          "time" : {
            "start" : 1756203307182,
            "stop" : 1756203307183,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "12460febeed4037c",
            "name" : "当前状态",
            "source" : "12460febeed4037c.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "454eec47759aa864",
            "name" : "超时倒计时",
            "source" : "454eec47759aa864.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756203307183,
            "stop" : 1756203307184,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b6ead800c4f015a8",
            "name" : "判断结果",
            "source" : "b6ead800c4f015a8.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "数据稳定达标",
          "time" : {
            "start" : 1756203307184,
            "stop" : 1756203307184,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "44e9353026c80c58",
            "name" : "结果说明",
            "source" : "44e9353026c80c58.txt",
            "type" : "text/plain",
            "size" : 34
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        }, {
          "name" : "带时区查询最终结果",
          "time" : {
            "start" : 1756203307184,
            "stop" : 1756203307185,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "1373341e61810a6f",
            "name" : "结果预览",
            "source" : "1373341e61810a6f.json",
            "type" : "application/json",
            "size" : 434
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false,
          "hasContent" : true
        } ],
        "attachments" : [ {
          "uid" : "b61eeb9d9e3f48d8",
          "name" : "执行SQL",
          "source" : "b61eeb9d9e3f48d8.txt",
          "type" : "text/plain",
          "size" : 981
        }, {
          "uid" : "3a7178b0469d1c0b",
          "name" : "SQL参数",
          "source" : "3a7178b0469d1c0b.txt",
          "type" : "text/plain",
          "size" : 21
        }, {
          "uid" : "ae7bfe8949fddf81",
          "name" : "时区偏移量（小时）",
          "source" : "ae7bfe8949fddf81.txt",
          "type" : "text/plain",
          "size" : 1
        } ],
        "parameters" : [ ],
        "stepsCount" : 16,
        "attachmentsCount" : 25,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "attachmentsCount" : 25,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    }, {
      "name" : "2. 验证主指令开仓数据",
      "time" : {
        "start" : 1756203307185,
        "stop" : 1756203307186,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "Failed: 校验失败: 开始手数应符合预期\n预期: 0.1\n操作: ==\n实际: 0.0\n\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\test_vps\\test_vps_ordersend2.py\", line 365, in test_dbquery_addsalve_orderSendclose\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1276, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ {
        "name" : "校验: 订单状态应为0或1",
        "time" : {
          "start" : 1756203307185,
          "stop" : 1756203307185,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "f214948797948e84",
          "name" : "订单状态详情",
          "source" : "f214948797948e84.txt",
          "type" : "text/plain",
          "size" : 36
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false,
        "hasContent" : true
      }, {
        "name" : "校验: 开始手数应符合预期",
        "time" : {
          "start" : 1756203307185,
          "stop" : 1756203307185,
          "duration" : 0
        },
        "status" : "failed",
        "statusMessage" : "Failed: 校验失败: 开始手数应符合预期\n预期: 0.1\n操作: ==\n实际: 0.0\n\n",
        "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1276, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "84a9d823e647b80a",
          "name" : "开始手数详情",
          "source" : "84a9d823e647b80a.txt",
          "type" : "text/plain",
          "size" : 35
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : true,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3924667014f913eb",
      "name" : "log",
      "source" : "3924667014f913eb.txt",
      "type" : "text/plain",
      "size" : 6854
    } ],
    "parameters" : [ ],
    "stepsCount" : 21,
    "attachmentsCount" : 28,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1756203307312,
      "stop" : 1756203307313,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1756203307310,
      "stop" : 1756203307310,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756203307309,
      "stop" : 1756203307309,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "VPS策略下单-下单的场景校验"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_ordersend2"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "11812-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_ordersend2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "bb79775944f8f12.json",
  "parameterValues" : [ ]
}