{
  "uid" : "3f48784ddbdce628",
  "name" : "数据库校验-策略平仓-跟单指令及订单详情数据检查",
  "fullName" : "test_vps.test_vpsOrder_open_level.TestLeakagelevel#test_dbquery_addsalve_orderSendclose",
  "historyId" : "bfcc21ab7a7a96d468206aa7d9cac9dc",
  "time" : {
    "start" : 1756184290537,
    "stop" : 1756184294845,
    "duration" : 4308
  },
  "description" : "\n        ### 用例说明\n        - 前置条件：有vps策略和vps跟单\n        - 操作步骤：\n          1. 修改vps跟单账号平仓-关闭\n          2. 进行开仓\n          3. 进行平仓\n          4. 跟单账号平仓失败，有漏单数据，把redis数据和MySQL数据进行校验\n          5. 修改vps跟单账号平仓-开启\n        - 预期结果：vps跟单账号平仓-关闭，有漏单数据\n        ",
  "descriptionHtml" : "<pre><code>    ### 用例说明\n    - 前置条件：有vps策略和vps跟单\n    - 操作步骤：\n      1. 修改vps跟单账号平仓-关闭\n      2. 进行开仓\n      3. 进行平仓\n      4. 跟单账号平仓失败，有漏单数据，把redis数据和MySQL数据进行校验\n      5. 修改vps跟单账号平仓-开启\n    - 预期结果：vps跟单账号平仓-关闭，有漏单数据\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: Failed: 订单详情列表的手数：[1.0]和指令列表的手数：[0.0]不一致（忽略顺序）",
  "statusTrace" : "self = <lingkuan_821.test_vps.test_vpsOrder_open_level.TestLeakageopen_level.TestLeakagelevel object at 0x0000017033547C10>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x0000017033595160>\ndb_transaction = <pymysql.connections.Connection object at 0x000001703358F820>\n\n    @allure.title(\"数据库校验-策略平仓-跟单指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.close_time,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n                    \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            status = db_data[0][\"status\"]\n            assert status in (0, 1), f\"订单状态status应为0(处理中)或1(全部成功)，实际状态为: {status}\"\n            logging.info(f\"订单状态status应为0(处理中)或1(全部成功)，实际状态为: {status}\")\n    \n            totalSzie = trader_ordersend[\"totalSzie\"]\n            size = [record[\"size\"] for record in db_data]\n            total = sum(size)\n            assert math.isclose(float(totalSzie), float(total), rel_tol=1e-9), \\\n                f'下单总手数是：{totalSzie}，订单详情总手数是：{total}'\n            logging.info(f'下单总手数是：{totalSzie}，订单详情总手数是：{total}')\n            total_lots = [record[\"total_lots\"] for record in db_data]\n>           self.assert_list_equal_ignore_order(\n                size,\n                total_lots,\n                f\"订单详情列表的手数：{size}和指令列表的手数：{total_lots}不一致\"\n            )\n\ntest_vps\\test_vpsOrder_open_level.py:1309: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_vps.test_vpsOrder_open_level.TestLeakageopen_level.TestLeakagelevel object at 0x0000017033547C10>\nlist1 = [1.0], list2 = [0.0]\nerror_msg_prefix = '订单详情列表的手数：[1.0]和指令列表的手数：[0.0]不一致'\n\n    def assert_list_equal_ignore_order(self, list1, list2, error_msg_prefix=\"列表元素不匹配\"):\n        \"\"\"断言两个列表元素相同（忽略顺序，带Allure分层提示）\"\"\"\n        from collections import Counter\n        with allure.step(\"断言列表元素相同（忽略顺序）\"):\n            allure.attach(self.serialize_data(list1), \"实际列表\", allure.attachment_type.TEXT)\n            allure.attach(self.serialize_data(list2), \"预期列表\", allure.attachment_type.TEXT)\n    \n>       assert Counter(list1) == Counter(list2), f\"Failed: {error_msg_prefix}（忽略顺序）\"\nE       AssertionError: Failed: 订单详情列表的手数：[1.0]和指令列表的手数：[0.0]不一致（忽略顺序）\n\ncommons\\api_base.py:1099: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1756184290311,
      "stop" : 1756184290537,
      "duration" : 226
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1756184119581,
      "stop" : 1756184119581,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1756184119582,
      "stop" : 1756184119582,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1756184121196,
      "stop" : 1756184121196,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756184290537,
      "stop" : 1756184290537,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1756184119582,
      "stop" : 1756184119582,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n        ### 用例说明\n        - 前置条件：有vps策略和vps跟单\n        - 操作步骤：\n          1. 修改vps跟单账号平仓-关闭\n          2. 进行开仓\n          3. 进行平仓\n          4. 跟单账号平仓失败，有漏单数据，把redis数据和MySQL数据进行校验\n          5. 修改vps跟单账号平仓-开启\n        - 预期结果：vps跟单账号平仓-关闭，有漏单数据\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: Failed: 订单详情列表的手数：[1.0]和指令列表的手数：[0.0]不一致（忽略顺序）",
    "statusTrace" : "self = <lingkuan_821.test_vps.test_vpsOrder_open_level.TestLeakageopen_level.TestLeakagelevel object at 0x0000017033547C10>\nvar_manager = <lingkuan_821.commons.variable_manager.VariableManager object at 0x0000017033595160>\ndb_transaction = <pymysql.connections.Connection object at 0x000001703358F820>\n\n    @allure.title(\"数据库校验-策略平仓-跟单指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.close_time,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n                    \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            status = db_data[0][\"status\"]\n            assert status in (0, 1), f\"订单状态status应为0(处理中)或1(全部成功)，实际状态为: {status}\"\n            logging.info(f\"订单状态status应为0(处理中)或1(全部成功)，实际状态为: {status}\")\n    \n            totalSzie = trader_ordersend[\"totalSzie\"]\n            size = [record[\"size\"] for record in db_data]\n            total = sum(size)\n            assert math.isclose(float(totalSzie), float(total), rel_tol=1e-9), \\\n                f'下单总手数是：{totalSzie}，订单详情总手数是：{total}'\n            logging.info(f'下单总手数是：{totalSzie}，订单详情总手数是：{total}')\n            total_lots = [record[\"total_lots\"] for record in db_data]\n>           self.assert_list_equal_ignore_order(\n                size,\n                total_lots,\n                f\"订单详情列表的手数：{size}和指令列表的手数：{total_lots}不一致\"\n            )\n\ntest_vps\\test_vpsOrder_open_level.py:1309: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_821.test_vps.test_vpsOrder_open_level.TestLeakageopen_level.TestLeakagelevel object at 0x0000017033547C10>\nlist1 = [1.0], list2 = [0.0]\nerror_msg_prefix = '订单详情列表的手数：[1.0]和指令列表的手数：[0.0]不一致'\n\n    def assert_list_equal_ignore_order(self, list1, list2, error_msg_prefix=\"列表元素不匹配\"):\n        \"\"\"断言两个列表元素相同（忽略顺序，带Allure分层提示）\"\"\"\n        from collections import Counter\n        with allure.step(\"断言列表元素相同（忽略顺序）\"):\n            allure.attach(self.serialize_data(list1), \"实际列表\", allure.attachment_type.TEXT)\n            allure.attach(self.serialize_data(list2), \"预期列表\", allure.attachment_type.TEXT)\n    \n>       assert Counter(list1) == Counter(list2), f\"Failed: {error_msg_prefix}（忽略顺序）\"\nE       AssertionError: Failed: 订单详情列表的手数：[1.0]和指令列表的手数：[0.0]不一致（忽略顺序）\n\ncommons\\api_base.py:1099: AssertionError",
    "steps" : [ {
      "name" : "1. 获取订单详情界面跟单账号数据",
      "time" : {
        "start" : 1756184290538,
        "stop" : 1756184294844,
        "duration" : 4306
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（时区+05:00，超时30秒）",
        "time" : {
          "start" : 1756184290538,
          "stop" : 1756184294844,
          "duration" : 4306
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756184290584,
            "stop" : 1756184290635,
            "duration" : 51
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756184290585,
              "stop" : 1756184290635,
              "duration" : 50
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "267a54894833790",
              "name" : "执行SQL",
              "source" : "267a54894833790.txt",
              "type" : "text/plain",
              "size" : 1274
            }, {
              "uid" : "cd48a21ec0091811",
              "name" : "SQL参数",
              "source" : "cd48a21ec0091811.txt",
              "type" : "text/plain",
              "size" : 28
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "919d2f3e4faf00df",
            "name" : "时区处理",
            "source" : "919d2f3e4faf00df.txt",
            "type" : "text/plain",
            "size" : 51
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待0.1秒）",
          "time" : {
            "start" : 1756184290635,
            "stop" : 1756184290636,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "819943956e636a3e",
            "name" : "当前状态",
            "source" : "819943956e636a3e.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "6905384e3b7ca1d3",
            "name" : "超时倒计时",
            "source" : "6905384e3b7ca1d3.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756184290636,
            "stop" : 1756184290636,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "883d2658cbc69a93",
            "name" : "判断结果",
            "source" : "883d2658cbc69a93.txt",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据发生变化",
          "time" : {
            "start" : 1756184290636,
            "stop" : 1756184290637,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "2728f2301056a3e2",
            "name" : "状态说明",
            "source" : "2728f2301056a3e2.txt",
            "type" : "text/plain",
            "size" : 24
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756184292691,
            "stop" : 1756184292741,
            "duration" : 50
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756184292692,
              "stop" : 1756184292741,
              "duration" : 49
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "845bbfdf9e0517d6",
              "name" : "执行SQL",
              "source" : "845bbfdf9e0517d6.txt",
              "type" : "text/plain",
              "size" : 1274
            }, {
              "uid" : "4d6bddd793100f18",
              "name" : "SQL参数",
              "source" : "4d6bddd793100f18.txt",
              "type" : "text/plain",
              "size" : 28
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "3cc091f0d3baa031",
            "name" : "时区处理",
            "source" : "3cc091f0d3baa031.txt",
            "type" : "text/plain",
            "size" : 51
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待2.2秒）",
          "time" : {
            "start" : 1756184292741,
            "stop" : 1756184292742,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "a332247fb831fe3a",
            "name" : "当前状态",
            "source" : "a332247fb831fe3a.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "236bc4f8ee61b27a",
            "name" : "超时倒计时",
            "source" : "236bc4f8ee61b27a.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756184292742,
            "stop" : 1756184292742,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "7804c0168be01444",
            "name" : "判断结果",
            "source" : "7804c0168be01444.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据首次稳定",
          "time" : {
            "start" : 1756184292742,
            "stop" : 1756184292742,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "c5d6f796c0fabfea",
            "name" : "状态说明",
            "source" : "c5d6f796c0fabfea.txt",
            "type" : "text/plain",
            "size" : 40
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756184294793,
            "stop" : 1756184294842,
            "duration" : 49
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756184294794,
              "stop" : 1756184294842,
              "duration" : 48
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "5efaca2951350623",
              "name" : "执行SQL",
              "source" : "5efaca2951350623.txt",
              "type" : "text/plain",
              "size" : 1274
            }, {
              "uid" : "c97f6680c8147696",
              "name" : "SQL参数",
              "source" : "c97f6680c8147696.txt",
              "type" : "text/plain",
              "size" : 28
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "shouldDisplayMessage" : false,
            "attachmentsCount" : 2
          } ],
          "attachments" : [ {
            "uid" : "3ed492ababcae8e4",
            "name" : "时区处理",
            "source" : "3ed492ababcae8e4.txt",
            "type" : "text/plain",
            "size" : 51
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "轮询中（已等待4.3秒）",
          "time" : {
            "start" : 1756184294842,
            "stop" : 1756184294843,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "24e5722bb8cd11b2",
            "name" : "当前状态",
            "source" : "24e5722bb8cd11b2.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "17429604e7b57b9c",
            "name" : "超时倒计时",
            "source" : "17429604e7b57b9c.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 2
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756184294843,
            "stop" : 1756184294843,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "dc198a07f3832609",
            "name" : "判断结果",
            "source" : "dc198a07f3832609.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "数据稳定达标",
          "time" : {
            "start" : 1756184294843,
            "stop" : 1756184294844,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "a25ac9e76b10170b",
            "name" : "结果说明",
            "source" : "a25ac9e76b10170b.txt",
            "type" : "text/plain",
            "size" : 34
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        }, {
          "name" : "带时区查询最终结果",
          "time" : {
            "start" : 1756184294844,
            "stop" : 1756184294844,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "bbeb0afdaa2095db",
            "name" : "结果预览",
            "source" : "bbeb0afdaa2095db.json",
            "type" : "application/json",
            "size" : 470
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ {
          "uid" : "91286765f10f1fbd",
          "name" : "执行SQL",
          "source" : "91286765f10f1fbd.txt",
          "type" : "text/plain",
          "size" : 1129
        }, {
          "uid" : "f886725a5acf9aa4",
          "name" : "SQL参数",
          "source" : "f886725a5acf9aa4.txt",
          "type" : "text/plain",
          "size" : 22
        }, {
          "uid" : "43ce0e13e817ad3f",
          "name" : "时区偏移量（小时）",
          "source" : "43ce0e13e817ad3f.txt",
          "type" : "text/plain",
          "size" : 1
        } ],
        "parameters" : [ ],
        "stepsCount" : 16,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 25
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 25
    }, {
      "name" : "2. 数据校验",
      "time" : {
        "start" : 1756184294844,
        "stop" : 1756184294845,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: Failed: 订单详情列表的手数：[1.0]和指令列表的手数：[0.0]不一致（忽略顺序）\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_821\\test_vps\\test_vpsOrder_open_level.py\", line 1309, in test_dbquery_addsalve_orderSendclose\n    self.assert_list_equal_ignore_order(\n  File \"D:\\pycharm_test\\lingkuan_821\\commons\\api_base.py\", line 1099, in assert_list_equal_ignore_order\n    assert Counter(list1) == Counter(list2), f\"Failed: {error_msg_prefix}（忽略顺序）\"\n",
      "steps" : [ {
        "name" : "断言列表元素相同（忽略顺序）",
        "time" : {
          "start" : 1756184294844,
          "stop" : 1756184294845,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "7a6a4cb047fed565",
          "name" : "实际列表",
          "source" : "7a6a4cb047fed565.txt",
          "type" : "text/plain",
          "size" : 9
        }, {
          "uid" : "b9815ac66c630f12",
          "name" : "预期列表",
          "source" : "b9815ac66c630f12.txt",
          "type" : "text/plain",
          "size" : 9
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 2
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 2
    } ],
    "attachments" : [ {
      "uid" : "d6e3c9a59b467c06",
      "name" : "log",
      "source" : "d6e3c9a59b467c06.txt",
      "type" : "text/plain",
      "size" : 7276
    } ],
    "parameters" : [ ],
    "stepsCount" : 20,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 28
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1756184294876,
      "stop" : 1756184294877,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756184294876,
      "stop" : 1756184294876,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1756184330325,
      "stop" : 1756184330326,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略下单-漏单场景"
  }, {
    "name" : "story",
    "value" : "场景2：VPS策略下单-漏平"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vpsOrder_open_level"
  }, {
    "name" : "subSuite",
    "value" : "TestLeakageopen_level"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "34900-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vpsOrder_open_level"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3f48784ddbdce628.json",
  "parameterValues" : [ ]
}