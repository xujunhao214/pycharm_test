{
  "uid" : "bcd9a6c616db4385",
  "name" : "数据库校验-VPS数据-新增策略账号",
  "fullName" : "test_foundation.test_create.TestCreate#test_dbquery_trader",
  "historyId" : "fd922235470046beceac355453bd0164",
  "time" : {
    "start" : 1751853154328,
    "stop" : 1751853154378,
    "duration" : 50
  },
  "status" : "failed",
  "statusMessage" : "Failed: 账号净值euqit有钱，实际金额为: 0.0",
  "statusTrace" : "self = <lingkuan_7061.test_foundation.test_create.TestCreate object at 0x000002B3EBB827C0>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x000002B3EBBA69D0>\ndb_transaction = <pymysql.connections.Connection object at 0x000002B3EBBA6C10>\n\n    @allure.title(\"数据库校验-VPS数据-新增策略账号\")\n    def test_dbquery_trader(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否新增成功\"):\n            db_trader_query = var_manager.get_variable(\"db_trader_query\")\n    \n            db_data = self.query_database(\n                db_transaction,\n                f\"SELECT * FROM {db_trader_query['table']} WHERE account = %s\",\n                (db_trader_query[\"account\"],),\n            )\n    \n            # 提取数据库中的值\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            vps_trader_id = db_data[0][\"id\"]\n            logging.info(f\"新增策略账号ID: {vps_trader_id}\")\n            var_manager.set_runtime_variable(\"vps_trader_id\", vps_trader_id)\n    \n            # 定义验证函数\n            def verify_order_status():\n                status = db_data[0][\"status\"]\n                if status != 0:\n                    pytest.fail(f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\")\n                euqit = db_data[0][\"euqit\"]\n                if euqit == 0:\n                    pytest.fail(f\"账号净值euqit有钱，实际金额为: {euqit}\")\n    \n            # 执行验证\n            try:\n>               verify_order_status()\n\ntest_foundation\\test_create.py:586: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def verify_order_status():\n        status = db_data[0][\"status\"]\n        if status != 0:\n            pytest.fail(f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\")\n        euqit = db_data[0][\"euqit\"]\n        if euqit == 0:\n>           pytest.fail(f\"账号净值euqit有钱，实际金额为: {euqit}\")\nE           Failed: 账号净值euqit有钱，实际金额为: 0.0\n\ntest_foundation\\test_create.py:582: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1751853084800,
      "stop" : 1751853084801,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1751853154274,
      "stop" : 1751853154327,
      "duration" : 53
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1751853084801,
      "stop" : 1751853084801,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1751853084800,
      "stop" : 1751853084800,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1751853084801,
      "stop" : 1751853085042,
      "duration" : 241
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Failed: 账号净值euqit有钱，实际金额为: 0.0",
    "statusTrace" : "self = <lingkuan_7061.test_foundation.test_create.TestCreate object at 0x000002B3EBB827C0>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x000002B3EBBA69D0>\ndb_transaction = <pymysql.connections.Connection object at 0x000002B3EBBA6C10>\n\n    @allure.title(\"数据库校验-VPS数据-新增策略账号\")\n    def test_dbquery_trader(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否新增成功\"):\n            db_trader_query = var_manager.get_variable(\"db_trader_query\")\n    \n            db_data = self.query_database(\n                db_transaction,\n                f\"SELECT * FROM {db_trader_query['table']} WHERE account = %s\",\n                (db_trader_query[\"account\"],),\n            )\n    \n            # 提取数据库中的值\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            vps_trader_id = db_data[0][\"id\"]\n            logging.info(f\"新增策略账号ID: {vps_trader_id}\")\n            var_manager.set_runtime_variable(\"vps_trader_id\", vps_trader_id)\n    \n            # 定义验证函数\n            def verify_order_status():\n                status = db_data[0][\"status\"]\n                if status != 0:\n                    pytest.fail(f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\")\n                euqit = db_data[0][\"euqit\"]\n                if euqit == 0:\n                    pytest.fail(f\"账号净值euqit有钱，实际金额为: {euqit}\")\n    \n            # 执行验证\n            try:\n>               verify_order_status()\n\ntest_foundation\\test_create.py:586: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def verify_order_status():\n        status = db_data[0][\"status\"]\n        if status != 0:\n            pytest.fail(f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\")\n        euqit = db_data[0][\"euqit\"]\n        if euqit == 0:\n>           pytest.fail(f\"账号净值euqit有钱，实际金额为: {euqit}\")\nE           Failed: 账号净值euqit有钱，实际金额为: 0.0\n\ntest_foundation\\test_create.py:582: Failed",
    "steps" : [ {
      "name" : "1. 查询数据库验证是否新增成功",
      "time" : {
        "start" : 1751853154328,
        "stop" : 1751853154377,
        "duration" : 49
      },
      "status" : "failed",
      "statusMessage" : "Failed: 账号净值euqit有钱，实际金额为: 0.0\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_7061\\test_foundation\\test_create.py\", line 586, in test_dbquery_trader\n    verify_order_status()\n  File \"D:\\pycharm_test\\lingkuan_7061\\test_foundation\\test_create.py\", line 582, in verify_order_status\n    pytest.fail(f\"账号净值euqit有钱，实际金额为: {euqit}\")\n  File \"D:\\python_tools\\python\\lib\\site-packages\\_pytest\\outcomes.py\", line 198, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "c2e0d8e12f6caebc",
      "name" : "log",
      "source" : "c2e0d8e12f6caebc.txt",
      "type" : "text/plain",
      "size" : 1364
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1751853190607,
      "stop" : 1751853190608,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1751853154622,
      "stop" : 1751853154670,
      "duration" : 48
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1751853190605,
      "stop" : 1751853190606,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "账号管理-创建基本信息"
  }, {
    "name" : "parentSuite",
    "value" : "test_foundation"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "24156-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_foundation.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "bcd9a6c616db4385.json",
  "parameterValues" : [ ]
}