{"uid":"cd8604c7ffc59388","name":"账号管理-账号列表-新增单个用户","fullName":"test_foundation.test_lianxi.TestDeleteFollowSlave#test_create_user","historyId":"d8b9656263073c626668f5dba730d27c","time":{"start":1751789785263,"stop":1751789790394,"duration":5131},"status":"failed","statusMessage":"AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/user\nJSON路径: $.msg\n实际值: 重复添加,请重新输入\n期望值: success","statusTrace":"self = <lingkuan_7061.test_foundation.test_lianxi.TestDeleteFollowSlave object at 0x0000022C9B539760>\napi_session = <lingkuan_7061.commons.session.EnvironmentSession object at 0x0000022C9B5200A0>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x0000022C9B5388B0>\nlogged_session = <lingkuan_7061.commons.session.EnvironmentSession object at 0x0000022C9B5200A0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000022C9B538A60>\n\n    @allure.title(\"账号管理-账号列表-新增单个用户\")\n    def test_create_user(self, api_session, var_manager, logged_session, db_transaction):\n        # 1. 发送创建用户请求\n        new_user = var_manager.get_variable(\"new_user\")\n        data = {\n            \"account\": new_user[\"account\"],\n            \"password\": new_user[\"password\"],\n            \"platform\": new_user[\"platform\"],\n            \"accountType\": \"0\",\n            \"serverNode\": new_user[\"serverNode\"],\n            \"remark\": new_user[\"remark\"],\n            \"sort\": \"12\",\n            \"vpsDescs\": []\n        }\n        response = self.send_post_request(\n            api_session,\n            \"/mascontrol/user\",\n            json_data=data\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"新增单个用户失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_foundation\\test_lianxi.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_7061.test_foundation.test_lianxi.TestDeleteFollowSlave object at 0x0000022C9B539760>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/user\nE           JSON路径: $.msg\nE           实际值: 重复添加,请重新输入\nE           期望值: success\n\ncommons\\api_base.py:232: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"var_manager","time":{"start":1751789784814,"stop":1751789784815,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"environment","time":{"start":1751789784814,"stop":1751789784814,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db_config","time":{"start":1751789784815,"stop":1751789784815,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db","time":{"start":1751789784815,"stop":1751789785049,"duration":234},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"logged_session","time":{"start":1751789785050,"stop":1751789785214,"duration":164},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"api_session","time":{"start":1751789785050,"stop":1751789785050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db_transaction","time":{"start":1751789785214,"stop":1751789785261,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/user\nJSON路径: $.msg\n实际值: 重复添加,请重新输入\n期望值: success","statusTrace":"self = <lingkuan_7061.test_foundation.test_lianxi.TestDeleteFollowSlave object at 0x0000022C9B539760>\napi_session = <lingkuan_7061.commons.session.EnvironmentSession object at 0x0000022C9B5200A0>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x0000022C9B5388B0>\nlogged_session = <lingkuan_7061.commons.session.EnvironmentSession object at 0x0000022C9B5200A0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000022C9B538A60>\n\n    @allure.title(\"账号管理-账号列表-新增单个用户\")\n    def test_create_user(self, api_session, var_manager, logged_session, db_transaction):\n        # 1. 发送创建用户请求\n        new_user = var_manager.get_variable(\"new_user\")\n        data = {\n            \"account\": new_user[\"account\"],\n            \"password\": new_user[\"password\"],\n            \"platform\": new_user[\"platform\"],\n            \"accountType\": \"0\",\n            \"serverNode\": new_user[\"serverNode\"],\n            \"remark\": new_user[\"remark\"],\n            \"sort\": \"12\",\n            \"vpsDescs\": []\n        }\n        response = self.send_post_request(\n            api_session,\n            \"/mascontrol/user\",\n            json_data=data\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"新增单个用户失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_foundation\\test_lianxi.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_7061.test_foundation.test_lianxi.TestDeleteFollowSlave object at 0x0000022C9B539760>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/user\nE           JSON路径: $.msg\nE           实际值: 重复添加,请重新输入\nE           期望值: success\n\ncommons\\api_base.py:232: AssertionError","steps":[{"name":"发送POST请求到 /mascontrol/user","time":{"start":1751789785263,"stop":1751789790385,"duration":5122},"status":"passed","steps":[],"attachments":[{"uid":"bdda97e2e739b8f","name":"请求JSON数据","source":"bdda97e2e739b8f.json","type":"application/json","size":217},{"uid":"f3c053488f19fb4f","name":"请求URL","source":"f3c053488f19fb4f.txt","type":"text/plain","size":16},{"uid":"6eff10b5fb7d9bda","name":"响应结果","source":"6eff10b5fb7d9bda.txt","type":"text/plain","size":84}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"55529f6ea99b719","name":"log","source":"55529f6ea99b719.txt","type":"text/plain","size":1658}],"parameters":[],"attachmentsCount":4,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":1,"attachmentStep":false},"afterStages":[{"name":"db_transaction::0","time":{"start":1751789790467,"stop":1751789790513,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"logged_session::0","time":{"start":1751789790514,"stop":1751789790514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"api_session::0","time":{"start":1751789790514,"stop":1751789790514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db::0","time":{"start":1751789796255,"stop":1751789796256,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"var_manager::0","time":{"start":1751789796257,"stop":1751789796259,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"跟单软件看板"},{"name":"parentSuite","value":"test_foundation"},{"name":"suite","value":"test_lianxi"},{"name":"subSuite","value":"TestDeleteFollowSlave"},{"name":"host","value":"xujunhao"},{"name":"thread","value":"21016-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_foundation.test_lianxi"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"cd8604c7ffc59388.json","parameterValues":[]}