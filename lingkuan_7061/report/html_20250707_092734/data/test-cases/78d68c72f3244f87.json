{
  "uid" : "78d68c72f3244f87",
  "name" : "数据库校验-VPS分配下单-持仓检查",
  "fullName" : "test_foundation.test_masOrderSend_copy.TestMasordersendcopy#test_dbquery_order_detail",
  "historyId" : "8bdcf3ba02cf5d60b4b8bbc3797d8d21",
  "time" : {
    "start" : 1751852300200,
    "stop" : 1751852302396,
    "duration" : 2196
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.41, 预期: 1.00)\nassert 0.41 == 1.0\n +  where 0.41 = float(0.41)\n +  and   1.0 = float('1.00')",
  "statusTrace" : "self = <lingkuan_7061.test_foundation.test_masOrderSend_copy.TestMasordersendcopy object at 0x00000181613B4940>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x000001816224BDC0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018161C9A700>\n\n    @allure.title(\"数据库校验-VPS分配下单-持仓检查\")\n    def test_dbquery_order_detail(self, var_manager, db_transaction):\n        with allure.step(\"1. 根据下单指令仓库的order_no字段获取跟单账号订单数据\"):\n            order_no = var_manager.get_variable(\"order_no\")\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            masOrderSend = var_manager.get_variable(\"masOrderSend\")\n    \n            table_name = masOrderSend[\"table_detail\"]\n            symbol = masOrderSend[\"symbol\"]\n    \n            sql = f\"\"\"\n            SELECT *\n            FROM {table_name}\n            WHERE symbol LIKE %s\n              AND send_no = %s\n              AND type = %s\n              AND trader_id = %s\n            \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                order_no,\n                masOrderSend[\"type\"],\n                vps_addslave_id\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"create_time\",  # 按创建时间过滤\n                time_range=MYSQL_TIME,  # 只查前后1分钟的数据\n                timeout=WAIT_TIMEOUT,  # 最多等60秒\n                poll_interval=POLL_INTERVAL,  # 每2秒查一次\n                order_by=\"create_time DESC\"  # 按创建时间倒序\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n            addsalve_size = [record[\"size\"] for record in db_data]\n            total = sum(addsalve_size)\n            logging.info(f\"手数: {addsalve_size}   手数总和: {total}\")\n            totalSzie = trader_ordersend[\"totalSzie\"]\n>           assert float(total) == float(\n                totalSzie), f\"跟单总手数和下单的手数不相等 (实际: {total}, 预期: {totalSzie})\"\nE           AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.41, 预期: 1.00)\nE           assert 0.41 == 1.0\nE            +  where 0.41 = float(0.41)\nE            +  and   1.0 = float('1.00')\n\ntest_foundation\\test_masOrderSend_copy.py:158: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1751852297213,
      "stop" : 1751852297214,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1751852300152,
      "stop" : 1751852300200,
      "duration" : 48
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1751851654967,
      "stop" : 1751851654967,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1751851654968,
      "stop" : 1751851654968,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1751851654968,
      "stop" : 1751851655196,
      "duration" : 228
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.41, 预期: 1.00)\nassert 0.41 == 1.0\n +  where 0.41 = float(0.41)\n +  and   1.0 = float('1.00')",
    "statusTrace" : "self = <lingkuan_7061.test_foundation.test_masOrderSend_copy.TestMasordersendcopy object at 0x00000181613B4940>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x000001816224BDC0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018161C9A700>\n\n    @allure.title(\"数据库校验-VPS分配下单-持仓检查\")\n    def test_dbquery_order_detail(self, var_manager, db_transaction):\n        with allure.step(\"1. 根据下单指令仓库的order_no字段获取跟单账号订单数据\"):\n            order_no = var_manager.get_variable(\"order_no\")\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            masOrderSend = var_manager.get_variable(\"masOrderSend\")\n    \n            table_name = masOrderSend[\"table_detail\"]\n            symbol = masOrderSend[\"symbol\"]\n    \n            sql = f\"\"\"\n            SELECT *\n            FROM {table_name}\n            WHERE symbol LIKE %s\n              AND send_no = %s\n              AND type = %s\n              AND trader_id = %s\n            \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                order_no,\n                masOrderSend[\"type\"],\n                vps_addslave_id\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"create_time\",  # 按创建时间过滤\n                time_range=MYSQL_TIME,  # 只查前后1分钟的数据\n                timeout=WAIT_TIMEOUT,  # 最多等60秒\n                poll_interval=POLL_INTERVAL,  # 每2秒查一次\n                order_by=\"create_time DESC\"  # 按创建时间倒序\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n            addsalve_size = [record[\"size\"] for record in db_data]\n            total = sum(addsalve_size)\n            logging.info(f\"手数: {addsalve_size}   手数总和: {total}\")\n            totalSzie = trader_ordersend[\"totalSzie\"]\n>           assert float(total) == float(\n                totalSzie), f\"跟单总手数和下单的手数不相等 (实际: {total}, 预期: {totalSzie})\"\nE           AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.41, 预期: 1.00)\nE           assert 0.41 == 1.0\nE            +  where 0.41 = float(0.41)\nE            +  and   1.0 = float('1.00')\n\ntest_foundation\\test_masOrderSend_copy.py:158: AssertionError",
    "steps" : [ {
      "name" : "1. 根据下单指令仓库的order_no字段获取跟单账号订单数据",
      "time" : {
        "start" : 1751852300200,
        "stop" : 1751852302396,
        "duration" : 2196
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "2. 校验数据",
      "time" : {
        "start" : 1751852302396,
        "stop" : 1751852302396,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.41, 预期: 1.00)\nassert 0.41 == 1.0\n +  where 0.41 = float(0.41)\n +  and   1.0 = float('1.00')\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_7061\\test_foundation\\test_masOrderSend_copy.py\", line 158, in test_dbquery_order_detail\n    assert float(total) == float(\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "dbd34f735764ceba",
      "name" : "log",
      "source" : "dbd34f735764ceba.txt",
      "type" : "text/plain",
      "size" : 3386
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1751852953393,
      "stop" : 1751852953394,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1751852302400,
      "stop" : 1751852302454,
      "duration" : 54
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1751852953386,
      "stop" : 1751852953386,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS交易下单-复制下单"
  }, {
    "name" : "parentSuite",
    "value" : "test_foundation"
  }, {
    "name" : "suite",
    "value" : "test_masOrderSend_copy"
  }, {
    "name" : "subSuite",
    "value" : "TestMasordersendcopy"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "8168-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_foundation.test_masOrderSend_copy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "78d68c72f3244f87.json",
  "parameterValues" : [ ]
}