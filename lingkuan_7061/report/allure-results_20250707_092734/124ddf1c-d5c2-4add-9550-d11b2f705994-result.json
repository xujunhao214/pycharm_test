{"name": "数据库校验-策略开仓-持仓检查主账号数据", "status": "failed", "statusDetails": {"message": "AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.42, 预期: 1.00)\nassert 0.42 == 1.0\n +  where 0.42 = float(0.42)\n +  and   1.0 = float('1.00')", "trace": "self = <lingkuan_7061.test_foundation.test_vps_Leakage_open.TestLeakageopen object at 0x00000181612F9550>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x0000018161E71280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018161C9A700>\n\n    @allure.title(\"数据库校验-策略开仓-持仓检查主账号数据\")\n    def test_dbquery_order_detail(self, var_manager, db_transaction):\n        with allure.step(\"1. 根据下单指令仓库的order_no字段获取订单详情\"):\n            order_no = var_manager.get_variable(\"order_no\")\n            vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n    \n            table_name = trader_ordersend[\"table_detail\"]\n            symbol = trader_ordersend[\"symbol\"]\n    \n            sql = f\"\"\"\n                SELECT *\n                FROM {table_name}\n                WHERE symbol LIKE %s\n                  AND send_no = %s\n                  AND type = %s\n                  AND trader_id = %s\n                \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                order_no,\n                trader_ordersend[\"type\"],\n                vps_trader_id\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"create_time\",  # 按创建时间过滤\n                time_range=MYSQL_TIME,  # 只查前后1分钟的数据\n                timeout=WAIT_TIMEOUT,  # 最多等60秒\n                poll_interval=POLL_INTERVAL,  # 每2秒查一次\n                order_by=\"create_time DESC\"  # 按创建时间倒序\n            )\n    \n        with allure.step(\"2. 提取数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            order_nos = list(map(lambda x: x[\"order_no\"], db_data))\n            logging.info(f\"持仓订单的订单号: {order_nos}\")\n            var_manager.set_runtime_variable(\"order_nos\", order_nos)\n    \n        with allure.step(\"3. 校验数据\"):\n            addsalve_size = [record[\"size\"] for record in db_data]\n            total = sum(addsalve_size)\n            logging.info(f\"手数: {addsalve_size}   手数总和: {total}\")\n            totalSzie = trader_ordersend[\"totalSzie\"]\n>           assert float(total) == float(totalSzie), f\"跟单总手数和下单的手数不相等 (实际: {total}, 预期: {totalSzie})\"\nE           AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.42, 预期: 1.00)\nE           assert 0.42 == 1.0\nE            +  where 0.42 = float(0.42)\nE            +  and   1.0 = float('1.00')\n\ntest_foundation\\test_vps_Leakage_open.py:256: AssertionError"}, "steps": [{"name": "1. 根据下单指令仓库的order_no字段获取订单详情", "status": "passed", "start": 1751852065963, "stop": 1751852066063}, {"name": "2. 提取数据", "status": "passed", "start": 1751852066063, "stop": 1751852066064}, {"name": "3. 校验数据", "status": "failed", "statusDetails": {"message": "AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.42, 预期: 1.00)\nassert 0.42 == 1.0\n +  where 0.42 = float(0.42)\n +  and   1.0 = float('1.00')\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_7061\\test_foundation\\test_vps_Leakage_open.py\", line 256, in test_dbquery_order_detail\n    assert float(total) == float(totalSzie), f\"跟单总手数和下单的手数不相等 (实际: {total}, 预期: {totalSzie})\"\n"}, "start": 1751852066064, "stop": 1751852066064}], "attachments": [{"name": "log", "source": "232355c9-98b0-4e5f-b537-07d91fcb21e8-attachment.txt", "type": "text/plain"}], "start": 1751852065963, "stop": 1751852066064, "uuid": "b188df55-434a-4e54-9f5d-317579d711f1", "historyId": "e0f99d9733530d8a4ae25af68c46c154", "testCaseId": "e0f99d9733530d8a4ae25af68c46c154", "fullName": "test_foundation.test_vps_Leakage_open.TestLeakageopen#test_dbquery_order_detail", "labels": [{"name": "feature", "value": "VPS策略下单-漏开"}, {"name": "parentSuite", "value": "test_foundation"}, {"name": "suite", "value": "test_vps_Leakage_open"}, {"name": "subSuite", "value": "TestLeakageopen"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "8168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_foundation.test_vps_Leakage_open"}]}