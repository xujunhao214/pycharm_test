{"name": "数据库校验-策略平仓-跟单账号修改品种", "status": "failed", "statusDetails": {"message": "AssertionError: 修改下单品种之后平仓手数之和应该是3，实际是：2.37\nassert 2.37 == 3\n +  where 2.37 = float(2.37)", "trace": "self = <lingkuan_7061.test_foundation.test_vps_scene.TestVPSOrderSend_Scence object at 0x00000181613F2D90>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x00000181613B20A0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018161C9A700>\n\n    @allure.title(\"数据库校验-策略平仓-跟单账号修改品种\")\n    def test_dbclose_templateId3(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            vps_trader = var_manager.get_variable(\"vps_trader\")\n            table_name = trader_ordersend[\"table_detail\"]\n            user_accounts_3 = var_manager.get_variable(\"user_accounts_3\")\n            symbol = trader_ordersend[\"symbol\"]\n    \n            sql = f\"\"\"\n                SELECT *\n                FROM {table_name}\n                WHERE symbol LIKE %s\n                  AND source_user = %s\n                  AND account = %s\n                  AND close_status = %s\n                \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                vps_trader[\"account\"],\n                user_accounts_3,\n                \"1\"\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"create_time\",  # 按创建时间过滤\n                time_range=MYSQL_TIME,  # 只查前后1分钟的数据\n                timeout=WAIT_TIMEOUT,  # 最多等60秒\n                poll_interval=POLL_INTERVAL,  # 每2秒查一次\n                order_by=\"create_time DESC\"  # 按创建时间倒序\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            addsalve_size_templateId3 = [record[\"size\"] for record in db_data]\n            var_manager.set_runtime_variable(\"addsalve_size_templateId3\", addsalve_size_templateId3)\n            total = sum(addsalve_size_templateId3)\n>           assert float(total) == 3, f\"修改下单品种之后平仓手数之和应该是3，实际是：{total}\"\nE           AssertionError: 修改下单品种之后平仓手数之和应该是3，实际是：2.37\nE           assert 2.37 == 3\nE            +  where 2.37 = float(2.37)\n\ntest_foundation\\test_vps_scene.py:406: AssertionError"}, "steps": [{"name": "1. 获取订单详情界面跟单账号数据", "status": "passed", "start": 1751852683692, "stop": 1751852686847}, {"name": "2. 校验数据", "status": "failed", "statusDetails": {"message": "AssertionError: 修改下单品种之后平仓手数之和应该是3，实际是：2.37\nassert 2.37 == 3\n +  where 2.37 = float(2.37)\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_7061\\test_foundation\\test_vps_scene.py\", line 406, in test_dbclose_templateId3\n    assert float(total) == 3, f\"修改下单品种之后平仓手数之和应该是3，实际是：{total}\"\n"}, "start": 1751852686847, "stop": 1751852686847}], "attachments": [{"name": "log", "source": "80059b4c-006e-4ff8-94e6-a47cfeae4e5c-attachment.txt", "type": "text/plain"}], "start": 1751852683692, "stop": 1751852686848, "uuid": "afd9f891-9ab9-408c-9470-d487735a0859", "historyId": "3352c57e698a903468ccfe76f27eff7b", "testCaseId": "3352c57e698a903468ccfe76f27eff7b", "fullName": "test_foundation.test_vps_scene.TestVPSOrderSend_Scence#test_dbclose_templateId3", "labels": [{"name": "feature", "value": "VPS策略下单-跟单修改模式、品种"}, {"name": "parentSuite", "value": "test_foundation"}, {"name": "suite", "value": "test_vps_scene"}, {"name": "subSuite", "value": "TestVPSOrderSend_Scence"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "8168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_foundation.test_vps_scene"}]}