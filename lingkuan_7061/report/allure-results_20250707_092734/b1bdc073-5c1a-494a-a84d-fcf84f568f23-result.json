{"name": "数据库校验-策略平仓-修改币种@", "status": "failed", "statusDetails": {"message": "AssertionError: 下单的币种与预期的不一样，预期：XAUUSD@ 实际：XAUUSD\nassert 'XAUUSD' == 'XAUUSD@'\n  - XAUUSD@\n  ?       -\n  + XAUUSD", "trace": "self = <lingkuan_7061.test_foundation.test_vps_money.TestVPSOrderSend_money object at 0x00000181613525B0>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x0000018161F960D0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018161C9A700>\n\n    @allure.title(\"数据库校验-策略平仓-修改币种@\")\n    def test_dbclose_cfda(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            vps_trader = var_manager.get_variable(\"vps_trader\")\n            table_name = trader_ordersend[\"table_detail\"]\n            user_accounts_5 = var_manager.get_variable(\"user_accounts_5\")\n    \n            sql = f\"\"\"\n                SELECT *\n                FROM {table_name}\n                WHERE source_user = %s\n                  AND account = %s\n                  AND close_status = %s\n                \"\"\"\n            params = (\n                vps_trader[\"account\"],\n                user_accounts_5,\n                \"1\"\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"create_time\",  # 按创建时间过滤\n                time_range=MYSQL_TIME,  # 只查前后1分钟的数据\n                timeout=WAIT_TIMEOUT,  # 最多等60秒\n                poll_interval=POLL_INTERVAL,  # 每2秒查一次\n                order_by=\"create_time DESC\"  # 按创建时间倒序\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            addsalve_size_cfda_close = [record[\"size\"] for record in db_data]\n            var_manager.set_runtime_variable(\"addsalve_size_cfda_close\", addsalve_size_cfda_close)\n            addsalve_size_cfda_total = sum(addsalve_size_cfda_close)\n            assert float(addsalve_size_cfda_total) == 1, f\"修改币种下单总手数应该是1，实际是：{addsalve_size_cfda_total}\"\n            logging.info(f\"修改币种下单总手数应该是1，实际是：{addsalve_size_cfda_total}\")\n    \n            symbol = db_data[0][\"symbol\"]\n>           assert symbol == \"XAUUSD@\", f\"下单的币种与预期的不一样，预期：XAUUSD@ 实际：{symbol}\"\nE           AssertionError: 下单的币种与预期的不一样，预期：XAUUSD@ 实际：XAUUSD\nE           assert 'XAUUSD' == 'XAUUSD@'\nE             - XAUUSD@\nE             ?       -\nE             + XAUUSD\n\ntest_foundation\\test_vps_money.py:366: AssertionError"}, "steps": [{"name": "1. 获取订单详情界面跟单账号数据", "status": "passed", "start": 1751852713159, "stop": 1751852715598}, {"name": "2. 校验数据", "status": "failed", "statusDetails": {"message": "AssertionError: 下单的币种与预期的不一样，预期：XAUUSD@ 实际：XAUUSD\nassert 'XAUUSD' == 'XAUUSD@'\n  - XAUUSD@\n  ?       -\n  + XAUUSD\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_7061\\test_foundation\\test_vps_money.py\", line 366, in test_dbclose_cfda\n    assert symbol == \"XAUUSD@\", f\"下单的币种与预期的不一样，预期：XAUUSD@ 实际：{symbol}\"\n"}, "start": 1751852715598, "stop": 1751852715599}], "attachments": [{"name": "log", "source": "cd4cfd68-395b-433f-bf16-ed56c1051357-attachment.txt", "type": "text/plain"}], "start": 1751852713159, "stop": 1751852715600, "uuid": "7a29e709-2ee7-4f6a-8326-542c30d07cf8", "historyId": "8fe9c3968c53ae8702b60ee908897354", "testCaseId": "8fe9c3968c53ae8702b60ee908897354", "fullName": "test_foundation.test_vps_money.TestVPSOrderSend_money#test_dbclose_cfda", "labels": [{"name": "feature", "value": "VPS策略下单-跟单修改币种"}, {"name": "parentSuite", "value": "test_foundation"}, {"name": "suite", "value": "test_vps_money"}, {"name": "subSuite", "value": "TestVPSOrderSend_money"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "8168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_foundation.test_vps_money"}]}