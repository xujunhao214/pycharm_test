{"name": "数据库校验-策略平仓-持仓检查跟单账号数据", "status": "failed", "statusDetails": {"message": "AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.6900000000000001, 预期: 1.00)\nassert 0.6900000000000001 == 1.0\n +  where 0.6900000000000001 = float(0.6900000000000001)\n +  and   1.0 = float('1.00')", "trace": "self = <lingkuan_7061.test_foundation.test_vps_ordersend.TestVPSOrderSend object at 0x00000181613B4190>\nvar_manager = <lingkuan_7061.commons.variable_manager.VariableManager object at 0x0000018161D185E0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018161C9A700>\n\n    @allure.title(\"数据库校验-策略平仓-持仓检查跟单账号数据\")\n    def test_dbquery_addsalve_clsesdetail(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            vps_trader = var_manager.get_variable(\"vps_trader\")\n            user_accounts_1 = var_manager.get_variable(\"user_accounts_1\")\n            table_name = trader_ordersend[\"table_detail\"]\n            symbol = trader_ordersend[\"symbol\"]\n    \n            sql = f\"\"\"\n                SELECT *\n                FROM {table_name}\n                WHERE symbol LIKE %s\n                  AND source_user = %s\n                  AND account = %s\n                  AND close_status = %s\n                \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                vps_trader[\"account\"],\n                user_accounts_1,\n                \"1\",\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"create_time\",  # 按创建时间过滤\n                time_range=MYSQL_TIME,  # 只查前后1分钟的数据\n                timeout=WAIT_TIMEOUT,  # 最多等60秒\n                poll_interval=POLL_INTERVAL,  # 每2秒查一次\n                order_by=\"create_time DESC\"  # 按创建时间倒序\n            )\n        with (allure.step(\"2. 提取数据\")):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            close_send_nos = [record[\"close_no\"] for record in db_data]\n            logging.info(f\"平仓之后的跟单账号持仓订单号: {close_send_nos}\")\n            var_manager.set_runtime_variable(\"close_send_nos\", close_send_nos)\n        with allure.step(\"3. 校验数据\"):\n            close_addsalve_size = [record[\"size\"] for record in db_data]\n            var_manager.set_runtime_variable(\"close_addsalve_size\", close_addsalve_size)\n            total = sum(close_addsalve_size)\n            logging.info(f\"手数: {close_addsalve_size} 手数总和: {total}\")\n            totalSzie = trader_ordersend[\"totalSzie\"]\n>           assert float(total) == float(totalSzie), f\"跟单总手数和下单的手数不相等 (实际: {total}, 预期: {totalSzie})\"\nE           AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.6900000000000001, 预期: 1.00)\nE           assert 0.6900000000000001 == 1.0\nE            +  where 0.6900000000000001 = float(0.6900000000000001)\nE            +  and   1.0 = float('1.00')\n\ntest_foundation\\test_vps_ordersend.py:480: AssertionError"}, "steps": [{"name": "1. 获取订单详情界面跟单账号数据", "status": "passed", "start": 1751851758085, "stop": 1751851765699}, {"name": "2. 提取数据", "status": "passed", "start": 1751851765699, "stop": 1751851765700}, {"name": "3. 校验数据", "status": "failed", "statusDetails": {"message": "AssertionError: 跟单总手数和下单的手数不相等 (实际: 0.6900000000000001, 预期: 1.00)\nassert 0.6900000000000001 == 1.0\n +  where 0.6900000000000001 = float(0.6900000000000001)\n +  and   1.0 = float('1.00')\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_7061\\test_foundation\\test_vps_ordersend.py\", line 480, in test_dbquery_addsalve_clsesdetail\n    assert float(total) == float(totalSzie), f\"跟单总手数和下单的手数不相等 (实际: {total}, 预期: {totalSzie})\"\n"}, "start": 1751851765700, "stop": 1751851765700}], "attachments": [{"name": "log", "source": "3aea1227-5e53-408b-8285-a4b4cfcf2ef2-attachment.txt", "type": "text/plain"}], "start": 1751851758085, "stop": 1751851765701, "uuid": "af6d0c20-6b19-4d5a-8f6f-f6521e027dba", "historyId": "5a05d79dc3338ab60fd04bc29953db94", "testCaseId": "5a05d79dc3338ab60fd04bc29953db94", "fullName": "test_foundation.test_vps_ordersend.TestVPSOrderSend#test_dbquery_addsalve_clsesdetail", "labels": [{"name": "feature", "value": "VPS策略下单-正常开仓平仓"}, {"name": "parentSuite", "value": "test_foundation"}, {"name": "suite", "value": "test_vps_ordersend"}, {"name": "subSuite", "value": "TestVPSOrderSend"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "8168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_foundation.test_vps_ordersend"}]}