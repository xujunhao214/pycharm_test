{
  "uid" : "54f90f6532d94f13",
  "name" : "数据库校验-云策略列表-批量新增云跟单账号",
  "fullName" : "test_cloudTrader.test_create_scene.TestCreate_importcloudTrader#test_dbquery_cloudBatchAdd",
  "historyId" : "08561cdffd354361ff860906130d7580",
  "time" : {
    "start" : 1755247763582,
    "stop" : 1755247763635,
    "duration" : 53
  },
  "status" : "failed",
  "statusMessage" : "Failed: 数据库查询结果为空，新增云跟单账号失败",
  "statusTrace" : "self = <lingkuan_817.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB947670>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DCDBC27280>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DCDB8DDE20>\n\n    @allure.title(\"数据库校验-云策略列表-批量新增云跟单账号\")\n    def test_dbquery_cloudBatchAdd(self, var_manager, db_transaction):\n        # 1. 获取账号总数和所有账号信息\n        cloudTrader_user_count = var_manager.get_variable(\"cloudTrader_user_count\", 0)\n        if cloudTrader_user_count < 0:\n            pytest.fail(\"未找到需要验证的账号数量，请检查前置步骤\")\n        # 2. 初始化ID列表和计数器\n        cloudTrader_all_count_ids = []\n        cloudTrader_add_count = 0\n        # 3. 提取后6个账号（对应cloudTrader_user_accounts_5到cloudTrader_user_accounts_10）\n        for i in range(5, cloudTrader_user_count + 1):\n            with allure.step(f\"1. 获取第{i}个跟单账号的account是否新增成功\"):\n                usr_account = var_manager.get_variable(f\"cloudTrader_user_accounts_{i}\")\n                if not usr_account:\n                    pytest.fail(f\"第{i}个跟单账号的account为空\")\n    \n                db_data = self.query_database(\n                    db_transaction,\n                    f\"SELECT * FROM follow_cloud_trader WHERE account = %s\",\n                    (usr_account,),\n                    order_by=\"account ASC\"\n                )\n                print(f\"获取第{i}个跟单账号的account:cloudTrader_user_accounts_{i}\")\n    \n                if not db_data:\n>                   pytest.fail(\"数据库查询结果为空，新增云跟单账号失败\")\nE                   Failed: 数据库查询结果为空，新增云跟单账号失败\n\ntest_cloudTrader\\test_create_scene.py:109: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755247763531,
      "stop" : 1755247763582,
      "duration" : 51
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755247760519,
      "stop" : 1755247760520,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755246577943,
      "stop" : 1755246578410,
      "duration" : 467
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1755246577943,
      "stop" : 1755246577943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Failed: 数据库查询结果为空，新增云跟单账号失败",
    "statusTrace" : "self = <lingkuan_817.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB947670>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DCDBC27280>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DCDB8DDE20>\n\n    @allure.title(\"数据库校验-云策略列表-批量新增云跟单账号\")\n    def test_dbquery_cloudBatchAdd(self, var_manager, db_transaction):\n        # 1. 获取账号总数和所有账号信息\n        cloudTrader_user_count = var_manager.get_variable(\"cloudTrader_user_count\", 0)\n        if cloudTrader_user_count < 0:\n            pytest.fail(\"未找到需要验证的账号数量，请检查前置步骤\")\n        # 2. 初始化ID列表和计数器\n        cloudTrader_all_count_ids = []\n        cloudTrader_add_count = 0\n        # 3. 提取后6个账号（对应cloudTrader_user_accounts_5到cloudTrader_user_accounts_10）\n        for i in range(5, cloudTrader_user_count + 1):\n            with allure.step(f\"1. 获取第{i}个跟单账号的account是否新增成功\"):\n                usr_account = var_manager.get_variable(f\"cloudTrader_user_accounts_{i}\")\n                if not usr_account:\n                    pytest.fail(f\"第{i}个跟单账号的account为空\")\n    \n                db_data = self.query_database(\n                    db_transaction,\n                    f\"SELECT * FROM follow_cloud_trader WHERE account = %s\",\n                    (usr_account,),\n                    order_by=\"account ASC\"\n                )\n                print(f\"获取第{i}个跟单账号的account:cloudTrader_user_accounts_{i}\")\n    \n                if not db_data:\n>                   pytest.fail(\"数据库查询结果为空，新增云跟单账号失败\")\nE                   Failed: 数据库查询结果为空，新增云跟单账号失败\n\ntest_cloudTrader\\test_create_scene.py:109: Failed",
    "steps" : [ {
      "name" : "1. 获取第5个跟单账号的account是否新增成功",
      "time" : {
        "start" : 1755247763582,
        "stop" : 1755247763635,
        "duration" : 53
      },
      "status" : "failed",
      "statusMessage" : "Failed: 数据库查询结果为空，新增云跟单账号失败\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_817\\test_cloudTrader\\test_create_scene.py\", line 109, in test_dbquery_cloudBatchAdd\n    pytest.fail(\"数据库查询结果为空，新增云跟单账号失败\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "ea377491c01ff262",
      "name" : "log",
      "source" : "ea377491c01ff262.txt",
      "type" : "text/plain",
      "size" : 457
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755247763639,
      "stop" : 1755247763689,
      "duration" : 50
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755248271249,
      "stop" : 1755248271250,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755248271259,
      "stop" : 1755248271259,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略-云策略列表-批量新增云跟单账号"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_create_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate_importcloudTrader"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "34324-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_create_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "54f90f6532d94f13.json",
  "parameterValues" : [ ]
}