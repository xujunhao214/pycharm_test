{
  "uid" : "fe20999976c4df17",
  "name" : "云策略-云策略列表-批量新增云跟单账号",
  "fullName" : "test_cloudTrader.test_create_scene.TestCreate_importcloudTrader#test_create_importcloudBatchAdd",
  "historyId" : "6050c400f21c48178be233e9b8eb2101",
  "time" : {
    "start" : 1755247761896,
    "stop" : 1755247763518,
    "duration" : 1622
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success",
  "statusTrace" : "self = <lingkuan_817.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB9471C0>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DCDBC27280>\nlogged_session = <lingkuan_817.commons.session.EnvironmentSession object at 0x000001DCDBD451F0>\n\n    @allure.title(\"云策略-云策略列表-批量新增云跟单账号\")\n    def test_create_importcloudBatchAdd(self, var_manager, logged_session):\n        # 1. 获取账号总数和所有ID\n        cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n        cloudTrader_account = var_manager.get_variable(\"cloudTrader_account\", 0)\n        cloudTrader_traderList_2 = var_manager.get_variable(\"cloudTrader_traderList_2\")\n        cloudTrader_user_accounts_2 = var_manager.get_variable(\"cloudTrader_user_accounts_2\")\n        if cloudTrader_account < 0:\n            pytest.fail(\"未找到需要新增的账号数量，请检查前置步骤\")\n        # 2. 循环获取每个账号的ID\n        for i in range(4, cloudTrader_account + 1):\n            with (allure.step(f\"1. 获取第{i}个跟单账号的ID\")):\n                slave_id = var_manager.get_variable(f\"cloudTrader_vps_ids_{i}\")\n                if not slave_id:\n                    pytest.fail(f\"第{i}个跟单账号的ID为空\")\n                print(f\"获取第{i}个跟单账号的ID:cloudTrader_vps_ids_{i}\")\n                # 3. 发送新增跟单云策略请求（接口支持单个ID删除，参数为列表形式）\n                data = [\n                    {\n                        \"traderList\": [\n                            slave_id\n                        ],\n                        \"cloudId\": cloudMaster_id,\n                        \"masterId\": cloudTrader_traderList_2,\n                        \"masterAccount\": cloudTrader_user_accounts_2,\n                        \"followDirection\": 0,\n                        \"followMode\": 1,\n                        \"followParam\": 1,\n                        \"remainder\": 0,\n                        \"placedType\": 0,\n                        \"templateId\": 1,\n                        \"followStatus\": 1,\n                        \"followOpen\": 1,\n                        \"followClose\": 1,\n                        \"fixedComment\": \"ceshi\",\n                        \"remark\": \"\",\n                        \"commentType\": \"\",\n                        \"digits\": 0,\n                        \"followTraderIds\": [],\n                        \"sort\": \"100\"\n                    }\n                ]\n                response = self.send_post_request(\n                    logged_session,\n                    '/mascontrol/cloudTrader/cloudBatchAdd',\n                    json_data=data\n                )\n    \n                # 2. 验证响应状态码\n                self.assert_response_status(\n                    response,\n                    200,\n                    \"新增云跟单账号失败\"\n                )\n    \n                # 3. 验证JSON返回内容\n>               self.assert_json_value(\n                    response,\n                    \"$.msg\",\n                    \"success\",\n                    \"响应msg字段应为success\"\n                )\n\ntest_cloudTrader\\test_create_scene.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_817.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB9471C0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_session",
    "time" : {
      "start" : 1755247760520,
      "stop" : 1755247760521,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755247760519,
      "stop" : 1755247760520,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755247760521,
      "stop" : 1755247761896,
      "duration" : 1375
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success",
    "statusTrace" : "self = <lingkuan_817.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB9471C0>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DCDBC27280>\nlogged_session = <lingkuan_817.commons.session.EnvironmentSession object at 0x000001DCDBD451F0>\n\n    @allure.title(\"云策略-云策略列表-批量新增云跟单账号\")\n    def test_create_importcloudBatchAdd(self, var_manager, logged_session):\n        # 1. 获取账号总数和所有ID\n        cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n        cloudTrader_account = var_manager.get_variable(\"cloudTrader_account\", 0)\n        cloudTrader_traderList_2 = var_manager.get_variable(\"cloudTrader_traderList_2\")\n        cloudTrader_user_accounts_2 = var_manager.get_variable(\"cloudTrader_user_accounts_2\")\n        if cloudTrader_account < 0:\n            pytest.fail(\"未找到需要新增的账号数量，请检查前置步骤\")\n        # 2. 循环获取每个账号的ID\n        for i in range(4, cloudTrader_account + 1):\n            with (allure.step(f\"1. 获取第{i}个跟单账号的ID\")):\n                slave_id = var_manager.get_variable(f\"cloudTrader_vps_ids_{i}\")\n                if not slave_id:\n                    pytest.fail(f\"第{i}个跟单账号的ID为空\")\n                print(f\"获取第{i}个跟单账号的ID:cloudTrader_vps_ids_{i}\")\n                # 3. 发送新增跟单云策略请求（接口支持单个ID删除，参数为列表形式）\n                data = [\n                    {\n                        \"traderList\": [\n                            slave_id\n                        ],\n                        \"cloudId\": cloudMaster_id,\n                        \"masterId\": cloudTrader_traderList_2,\n                        \"masterAccount\": cloudTrader_user_accounts_2,\n                        \"followDirection\": 0,\n                        \"followMode\": 1,\n                        \"followParam\": 1,\n                        \"remainder\": 0,\n                        \"placedType\": 0,\n                        \"templateId\": 1,\n                        \"followStatus\": 1,\n                        \"followOpen\": 1,\n                        \"followClose\": 1,\n                        \"fixedComment\": \"ceshi\",\n                        \"remark\": \"\",\n                        \"commentType\": \"\",\n                        \"digits\": 0,\n                        \"followTraderIds\": [],\n                        \"sort\": \"100\"\n                    }\n                ]\n                response = self.send_post_request(\n                    logged_session,\n                    '/mascontrol/cloudTrader/cloudBatchAdd',\n                    json_data=data\n                )\n    \n                # 2. 验证响应状态码\n                self.assert_response_status(\n                    response,\n                    200,\n                    \"新增云跟单账号失败\"\n                )\n    \n                # 3. 验证JSON返回内容\n>               self.assert_json_value(\n                    response,\n                    \"$.msg\",\n                    \"success\",\n                    \"响应msg字段应为success\"\n                )\n\ntest_cloudTrader\\test_create_scene.py:76: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_817.test_cloudTrader.test_create_scene.TestCreate_importcloudTrader object at 0x000001DCDB9471C0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
    "steps" : [ {
      "name" : "1. 获取第4个跟单账号的ID",
      "time" : {
        "start" : 1755247761896,
        "stop" : 1755247763517,
        "duration" : 1621
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudTrader/cloudBatchAdd\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_817\\test_cloudTrader\\test_create_scene.py\", line 76, in test_create_importcloudBatchAdd\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_817\\commons\\api_base.py\", line 261, in assert_json_value\n    assert actual_value == expected_value, (\n",
      "steps" : [ {
        "name" : "发送POST请求到 /mascontrol/cloudTrader/cloudBatchAdd",
        "time" : {
          "start" : 1755247761896,
          "stop" : 1755247763513,
          "duration" : 1617
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "2cdbf93077f388fd",
          "name" : "请求JSON数据",
          "source" : "2cdbf93077f388fd.json",
          "type" : "application/json",
          "size" : 353
        }, {
          "uid" : "269130398d2cbc6e",
          "name" : "请求URL",
          "source" : "269130398d2cbc6e.txt",
          "type" : "text/plain",
          "size" : 37
        }, {
          "uid" : "eacf2eeb7a44d124",
          "name" : "响应结果",
          "source" : "eacf2eeb7a44d124.txt",
          "type" : "text/plain",
          "size" : 89
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 1,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "58446cd50ac150ba",
      "name" : "log",
      "source" : "58446cd50ac150ba.txt",
      "type" : "text/plain",
      "size" : 3044
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755247763529,
      "stop" : 1755247763529,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755248271249,
      "stop" : 1755248271250,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755247763528,
      "stop" : 1755247763529,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略-云策略列表-批量新增云跟单账号"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_create_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate_importcloudTrader"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "34324-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_create_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "fe20999976c4df17.json",
  "parameterValues" : [ ]
}