{
  "uid" : "d32da1549193228",
  "name" : "数据库校验-云策略列表-修改云策略是否成功",
  "fullName" : "test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status#test_dbcloudTrader_cloudBatchUpdate",
  "historyId" : "69cdba3fedb6edb1607e803c65bcba35",
  "time" : {
    "start" : 1755247487182,
    "stop" : 1755247493629,
    "duration" : 6447
  },
  "description" : "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 修改云策略 策略状态为关闭\n  2. 进行开仓\n  3. 跟单账号跟单失败，有漏单数据，把redis数据和MySQL数据进行校验\n  4. 修改云策略 策略状态为开启\n  5. 进行补单操作，然后平仓\n- 预期结果：云策略 策略状态为关闭，有漏单数据\n",
  "descriptionHtml" : "<h3>用例说明</h3>\n<ul>\n<li>前置条件：有云策略和云跟单</li>\n<li>操作步骤：\n<ol>\n<li>修改云策略 策略状态为关闭</li>\n<li>进行开仓</li>\n<li>跟单账号跟单失败，有漏单数据，把redis数据和MySQL数据进行校验</li>\n<li>修改云策略 策略状态为开启</li>\n<li>进行补单操作，然后平仓</li>\n</ol>\n</li>\n<li>预期结果：云策略 策略状态为关闭，有漏单数据</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: status的状态应该是1，实际是：0\nassert 0 == 1",
  "statusTrace" : "self = <lingkuan_817.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9148E0>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DCDBAFE5B0>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DCDB8DDE20>\n\n    @allure.title(\"数据库校验-云策略列表-修改云策略是否成功\")\n    def test_dbcloudTrader_cloudBatchUpdate(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否修改成功\"):\n            sql = f\"SELECT * FROM follow_cloud_master WHERE name = %s\"\n            params = (\"自动化测试\",)\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params\n            )\n        with allure.step(\"2. 对数据进行校验\"):\n            status = db_data[0][\"status\"]\n>           assert status == 1, f\"status的状态应该是1，实际是：{status}\"\nE           AssertionError: status的状态应该是1，实际是：0\nE           assert 0 == 1\n\ntest_cloudTrader\\test_cloudstartegy_status.py:80: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755247487132,
      "stop" : 1755247487182,
      "duration" : 50
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755246574419,
      "stop" : 1755246574419,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755246577943,
      "stop" : 1755246578410,
      "duration" : 467
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755247484077,
      "stop" : 1755247484077,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1755246577943,
      "stop" : 1755246577943,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 修改云策略 策略状态为关闭\n  2. 进行开仓\n  3. 跟单账号跟单失败，有漏单数据，把redis数据和MySQL数据进行校验\n  4. 修改云策略 策略状态为开启\n  5. 进行补单操作，然后平仓\n- 预期结果：云策略 策略状态为关闭，有漏单数据\n",
    "status" : "failed",
    "statusMessage" : "AssertionError: status的状态应该是1，实际是：0\nassert 0 == 1",
    "statusTrace" : "self = <lingkuan_817.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9148E0>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DCDBAFE5B0>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DCDB8DDE20>\n\n    @allure.title(\"数据库校验-云策略列表-修改云策略是否成功\")\n    def test_dbcloudTrader_cloudBatchUpdate(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否修改成功\"):\n            sql = f\"SELECT * FROM follow_cloud_master WHERE name = %s\"\n            params = (\"自动化测试\",)\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params\n            )\n        with allure.step(\"2. 对数据进行校验\"):\n            status = db_data[0][\"status\"]\n>           assert status == 1, f\"status的状态应该是1，实际是：{status}\"\nE           AssertionError: status的状态应该是1，实际是：0\nE           assert 0 == 1\n\ntest_cloudTrader\\test_cloudstartegy_status.py:80: AssertionError",
    "steps" : [ {
      "name" : "1. 查询数据库验证是否修改成功",
      "time" : {
        "start" : 1755247487182,
        "stop" : 1755247493629,
        "duration" : 6447
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 对数据进行校验",
      "time" : {
        "start" : 1755247493629,
        "stop" : 1755247493629,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: status的状态应该是1，实际是：0\nassert 0 == 1\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_817\\test_cloudTrader\\test_cloudstartegy_status.py\", line 80, in test_dbcloudTrader_cloudBatchUpdate\n    assert status == 1, f\"status的状态应该是1，实际是：{status}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "92fd8f743a5d6742",
      "name" : "log",
      "source" : "92fd8f743a5d6742.txt",
      "type" : "text/plain",
      "size" : 3532
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 2,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755247493634,
      "stop" : 1755247493685,
      "duration" : 51
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755248271259,
      "stop" : 1755248271259,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755248271252,
      "stop" : 1755248271252,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "交易下单-云策略复制下单"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudstartegy_status"
  }, {
    "name" : "subSuite",
    "value" : "Testcloudstargy_status"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "34324-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudstartegy_status"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d32da1549193228.json",
  "parameterValues" : [ ]
}