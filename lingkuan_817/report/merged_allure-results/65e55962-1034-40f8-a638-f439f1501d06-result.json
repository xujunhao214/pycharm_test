{"name": "云策略-云策略列表-修改策略账号信息", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success", "trace": "self = <lingkuan_817.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9F2670>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DCDBAFE5B0>\nlogged_session = <lingkuan_817.commons.session.EnvironmentSession object at 0x000001DCDBAFE400>\nencrypted_password = 'fa1af751c83d311f091c9393a364068c'\n\n    @allure.title(\"云策略-云策略列表-修改策略账号信息\")\n    def test_mascontrol_cloudMaster(self, var_manager, logged_session, encrypted_password):\n        # 1. 修改云策略状态status为1，关闭策略状态\n        with allure.step(\"发送修改云策略的请求\"):\n            cloudTrader_group_id = var_manager.get_variable(\"cloudTrader_group_id\")\n            cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n            json_data = {\n                \"id\": cloudMaster_id,\n                \"name\": \"自动化测试\",\n                \"type\": 0,\n                \"remark\": None,\n                \"status\": 1,\n                \"groupId\": cloudTrader_group_id,\n                \"sort\": None,\n                \"isMonitorRepair\": 1,\n                \"isAutoRepair\": 1\n            }\n            response = self.send_put_request(\n                logged_session,\n                '/mascontrol/cloudMaster',\n                json_data=json_data,\n            )\n    \n        with allure.step(\"2. 验证响应状态码和内容\"):\n            # 2. 验证响应状态码和内容\n            self.assert_response_status(\n                response,\n                200,\n                \"发送修改云策略的请求失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_cloudTrader\\test_cloudstartegy_status.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_817.test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status object at 0x000001DCDB9F2670>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/cloudMaster\nE           JSON路径: $.msg\nE           实际值: 云策略名称已存在，请勿重复添加\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError"}, "description": "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 修改云策略 策略状态为关闭\n  2. 进行开仓\n  3. 跟单账号跟单失败，有漏单数据，把redis数据和MySQL数据进行校验\n  4. 修改云策略 策略状态为开启\n  5. 进行补单操作，然后平仓\n- 预期结果：云策略 策略状态为关闭，有漏单数据\n", "steps": [{"name": "发送修改云策略的请求", "status": "passed", "steps": [{"name": "发送PUT请求到 /mascontrol/cloudMaster", "status": "passed", "attachments": [{"name": "请求参数", "source": "197617d4-0829-41ec-ab85-471caae93c05-attachment.json", "type": "application/json"}, {"name": "响应结果", "source": "78f4736a-951f-41d2-af73-ed2ae314312f-attachment.txt", "type": "text/plain"}], "start": 1755247485548, "stop": 1755247487112}], "start": 1755247485548, "stop": 1755247487112}, {"name": "2. 验证响应状态码和内容", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_817\\test_cloudTrader\\test_cloudstartegy_status.py\", line 59, in test_mascontrol_cloudMaster\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_817\\commons\\api_base.py\", line 261, in assert_json_value\n    assert actual_value == expected_value, (\n"}, "start": 1755247487112, "stop": 1755247487117}], "attachments": [{"name": "log", "source": "c421f90f-9aad-4a98-85b9-6004af801a4b-attachment.txt", "type": "text/plain"}], "start": 1755247485548, "stop": 1755247487117, "uuid": "5742bede-dda0-49d1-a18d-2397c3adc6d4", "historyId": "15185eaee34b7f9632a8d6878cb1429f", "testCaseId": "15185eaee34b7f9632a8d6878cb1429f", "fullName": "test_cloudTrader.test_cloudstartegy_status.Testcloudstargy_status#test_mascontrol_cloudMaster", "labels": [{"name": "feature", "value": "交易下单-云策略复制下单"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudstartegy_status"}, {"name": "subSuite", "value": "Testcloudstargy_status"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "34324-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudstartegy_status"}]}