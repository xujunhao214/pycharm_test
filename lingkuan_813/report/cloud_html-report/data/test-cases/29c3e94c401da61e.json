{
  "uid" : "29c3e94c401da61e",
  "name" : "平台管理-品种管理-添加品种",
  "fullName" : "test_cloudTrader.test_create.TestCreate_cloudTrader#test_create_variety",
  "historyId" : "1448f5ff09be410153ff6fb961b85db8",
  "time" : {
    "start" : 1755140887550,
    "stop" : 1755140888709,
    "duration" : 1159
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/variety/addTemplate\nJSON路径: $.msg\n实际值: 模板名称重复，请重新输入\n期望值: success",
  "statusTrace" : "self = <lingkuan_813.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001E8F84A6160>\nlogged_session = <lingkuan_813.commons.session.EnvironmentSession object at 0x000001E8F852FFD0>\nvar_manager = <lingkuan_813.commons.variable_manager.VariableManager object at 0x000001E8F84CAEB0>\n\n    @allure.title(\"平台管理-品种管理-添加品种\")\n    def test_create_variety(self, logged_session, var_manager):\n        # 1. 读取CSV文件\n        add_variety = var_manager.get_variable(\"add_variety\")\n        with open(add_variety[\"csv_variety_path\"], 'rb') as f:\n            # print(f'打印输出文件：{add_variety[\"csv_variety_path\"]}')\n            csv_file = f.read()\n    \n        # 2. 构造请求参数\n        files = {\n            \"file\": (\"品种数据300.csv\", csv_file, \"text/csv\")\n        }\n        data = {\n            \"templateName\": add_variety[\"templateName2\"]\n        }\n    \n        # 1. 添加品种\n        response = self.send_post_request(\n            logged_session,\n            '/mascontrol/variety/addTemplate',\n            data=data,\n            files=files\n        )\n    \n        # 2. 判断是否添加成功\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_cloudTrader\\test_create.py:706: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_813.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001E8F84A6160>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/variety/addTemplate\nE           JSON路径: $.msg\nE           实际值: 模板名称重复，请重新输入\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_session",
    "time" : {
      "start" : 1755140887420,
      "stop" : 1755140887420,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755140741859,
      "stop" : 1755140741860,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755140741859,
      "stop" : 1755140741859,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755140887420,
      "stop" : 1755140887550,
      "duration" : 130
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/variety/addTemplate\nJSON路径: $.msg\n实际值: 模板名称重复，请重新输入\n期望值: success",
    "statusTrace" : "self = <lingkuan_813.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001E8F84A6160>\nlogged_session = <lingkuan_813.commons.session.EnvironmentSession object at 0x000001E8F852FFD0>\nvar_manager = <lingkuan_813.commons.variable_manager.VariableManager object at 0x000001E8F84CAEB0>\n\n    @allure.title(\"平台管理-品种管理-添加品种\")\n    def test_create_variety(self, logged_session, var_manager):\n        # 1. 读取CSV文件\n        add_variety = var_manager.get_variable(\"add_variety\")\n        with open(add_variety[\"csv_variety_path\"], 'rb') as f:\n            # print(f'打印输出文件：{add_variety[\"csv_variety_path\"]}')\n            csv_file = f.read()\n    \n        # 2. 构造请求参数\n        files = {\n            \"file\": (\"品种数据300.csv\", csv_file, \"text/csv\")\n        }\n        data = {\n            \"templateName\": add_variety[\"templateName2\"]\n        }\n    \n        # 1. 添加品种\n        response = self.send_post_request(\n            logged_session,\n            '/mascontrol/variety/addTemplate',\n            data=data,\n            files=files\n        )\n    \n        # 2. 判断是否添加成功\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_cloudTrader\\test_create.py:706: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_813.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001E8F84A6160>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/variety/addTemplate\nE           JSON路径: $.msg\nE           实际值: 模板名称重复，请重新输入\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
    "steps" : [ {
      "name" : "发送POST请求到 /mascontrol/variety/addTemplate",
      "time" : {
        "start" : 1755140887552,
        "stop" : 1755140888668,
        "duration" : 1116
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "2e6768643eec0320",
        "name" : "请求表单数据",
        "source" : "2e6768643eec0320.json",
        "type" : "application/json",
        "size" : 33
      }, {
        "uid" : "4112db73caae90bd",
        "name" : "请求URL",
        "source" : "4112db73caae90bd.txt",
        "type" : "text/plain",
        "size" : 31
      }, {
        "uid" : "85caae861fbf919",
        "name" : "响应结果",
        "source" : "85caae861fbf919.txt",
        "type" : "text/plain",
        "size" : 92
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "3d69cafbb88d94b5",
      "name" : "log",
      "source" : "3d69cafbb88d94b5.txt",
      "type" : "text/plain",
      "size" : 1792
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 1,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755140888723,
      "stop" : 1755140888723,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755140947387,
      "stop" : 1755140947387,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755140888722,
      "stop" : 1755140888722,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "数据管理-创建数据-为云策略准备"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate_cloudTrader"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "26896-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "29c3e94c401da61e.json",
  "parameterValues" : [ ]
}