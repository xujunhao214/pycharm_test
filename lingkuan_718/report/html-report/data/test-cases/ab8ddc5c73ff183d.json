{
  "uid" : "ab8ddc5c73ff183d",
  "name" : "账号管理-组别列表-新增VPS组别",
  "fullName" : "test_vps.test_create.TestCreate#test_create_vpsgroup",
  "historyId" : "72b0415c0e0f7ace628398d6d44c5348",
  "time" : {
    "start" : 1753084530276,
    "stop" : 1753084535339,
    "duration" : 5063
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/group\nJSON路径: $.msg\n实际值: 组别名称重复\n期望值: success",
  "statusTrace" : "self = <lingkuan_718.test_vps.test_create.TestCreate object at 0x000001D1809E9C70>\napi_session = <lingkuan_718.commons.session.EnvironmentSession object at 0x000001D180BB10D0>\nvar_manager = <lingkuan_718.commons.variable_manager.VariableManager object at 0x000001D180A70A00>\nlogged_session = <lingkuan_718.commons.session.EnvironmentSession object at 0x000001D180BB10D0>\n\n    @allure.title(\"账号管理-组别列表-新增VPS组别\")\n    def test_create_vpsgroup(self, api_session, var_manager, logged_session):\n        add_vpsgroup = var_manager.get_variable(\"add_vpsgroup\")\n        data = {\n            \"name\": add_vpsgroup[\"name\"],\n            \"color\": add_vpsgroup[\"color\"],\n            \"sort\": add_vpsgroup[\"sort\"],\n            \"type\": add_vpsgroup[\"type\"]\n        }\n    \n        # 1. 发送新增VPS组别请求\n        response = self.send_post_request(\n            api_session,\n            \"/mascontrol/group\",\n            json_data=data\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"新增VPS组别失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_create.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_718.test_vps.test_create.TestCreate object at 0x000001D1809E9C70>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/group\nE           JSON路径: $.msg\nE           实际值: 组别名称重复\nE           期望值: success\n\ncommons\\api_base.py:245: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1753084518237,
      "stop" : 1753084518237,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1753084518237,
      "stop" : 1753084518237,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1753084530135,
      "stop" : 1753084530276,
      "duration" : 141
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1753084530135,
      "stop" : 1753084530135,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/group\nJSON路径: $.msg\n实际值: 组别名称重复\n期望值: success",
    "statusTrace" : "self = <lingkuan_718.test_vps.test_create.TestCreate object at 0x000001D1809E9C70>\napi_session = <lingkuan_718.commons.session.EnvironmentSession object at 0x000001D180BB10D0>\nvar_manager = <lingkuan_718.commons.variable_manager.VariableManager object at 0x000001D180A70A00>\nlogged_session = <lingkuan_718.commons.session.EnvironmentSession object at 0x000001D180BB10D0>\n\n    @allure.title(\"账号管理-组别列表-新增VPS组别\")\n    def test_create_vpsgroup(self, api_session, var_manager, logged_session):\n        add_vpsgroup = var_manager.get_variable(\"add_vpsgroup\")\n        data = {\n            \"name\": add_vpsgroup[\"name\"],\n            \"color\": add_vpsgroup[\"color\"],\n            \"sort\": add_vpsgroup[\"sort\"],\n            \"type\": add_vpsgroup[\"type\"]\n        }\n    \n        # 1. 发送新增VPS组别请求\n        response = self.send_post_request(\n            api_session,\n            \"/mascontrol/group\",\n            json_data=data\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"新增VPS组别失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_create.py:186: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_718.test_vps.test_create.TestCreate object at 0x000001D1809E9C70>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/group\nE           JSON路径: $.msg\nE           实际值: 组别名称重复\nE           期望值: success\n\ncommons\\api_base.py:245: AssertionError",
    "steps" : [ {
      "name" : "发送POST请求到 /mascontrol/group",
      "time" : {
        "start" : 1753084530276,
        "stop" : 1753084535335,
        "duration" : 5059
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "26eb7d46cfde875",
        "name" : "请求JSON数据",
        "source" : "26eb7d46cfde875.json",
        "type" : "application/json",
        "size" : 75
      }, {
        "uid" : "fe6b99a7b42562",
        "name" : "请求URL",
        "source" : "fe6b99a7b42562.txt",
        "type" : "text/plain",
        "size" : 17
      }, {
        "uid" : "cdb85c822f9c0ba9",
        "name" : "响应结果",
        "source" : "cdb85c822f9c0ba9.txt",
        "type" : "text/plain",
        "size" : 74
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "e9f8254f5071df05",
      "name" : "log",
      "source" : "e9f8254f5071df05.txt",
      "type" : "text/plain",
      "size" : 4911
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1753085075837,
      "stop" : 1753085075838,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1753084535349,
      "stop" : 1753084535349,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1753084535350,
      "stop" : 1753084535350,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "账号管理-创建基本信息"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "33416-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ab8ddc5c73ff183d.json",
  "parameterValues" : [ ]
}