{
  "uid" : "f5fd29a975f965c7",
  "name" : "云策略-云策略列表-新增云策略",
  "fullName" : "test_cloudTrader.test_create.TestCreate_cloudTrader#test_create_cloudMaster",
  "historyId" : "cd9b563c694cd53e814a76e953c82b6f",
  "time" : {
    "start" : 1753084837986,
    "stop" : 1753084843057,
    "duration" : 5071
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success",
  "statusTrace" : "self = <lingkuan_718.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001D180A8AB50>\nvar_manager = <lingkuan_718.commons.variable_manager.VariableManager object at 0x000001D180CF5790>\nlogged_session = <lingkuan_718.commons.session.EnvironmentSession object at 0x000001D180BF1850>\n\n    @allure.title(\"云策略-云策略列表-新增云策略\")\n    def test_create_cloudMaster(self, var_manager, logged_session):\n        cloudgroup_id = var_manager.get_variable(\"cloudgroup_id\")\n        with allure.step(\"1. 发送新增云策略的请求接口\"):\n            data = {\n                \"name\": \"自动化测试\",\n                \"type\": 0,\n                \"remark\": \"\",\n                \"status\": 0,\n                \"groupId\": cloudgroup_id,\n                \"sort\": 100,\n                \"isMonitorRepair\": 1\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/mascontrol/cloudMaster',\n                json_data=data\n            )\n    \n        with allure.step(\"2. 校验接口请求是否正确\"):\n            # 使用工具类的 assert_value 方法验证响应状态\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_cloudTrader\\test_create.py:456: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_718.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001D180A8AB50>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/cloudMaster\nE           JSON路径: $.msg\nE           实际值: 云策略名称已存在，请勿重复添加\nE           期望值: success\n\ncommons\\api_base.py:245: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1753084656438,
      "stop" : 1753084656438,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1753084837838,
      "stop" : 1753084837838,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1753084518237,
      "stop" : 1753084518237,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1753084837838,
      "stop" : 1753084837985,
      "duration" : 147
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success",
    "statusTrace" : "self = <lingkuan_718.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001D180A8AB50>\nvar_manager = <lingkuan_718.commons.variable_manager.VariableManager object at 0x000001D180CF5790>\nlogged_session = <lingkuan_718.commons.session.EnvironmentSession object at 0x000001D180BF1850>\n\n    @allure.title(\"云策略-云策略列表-新增云策略\")\n    def test_create_cloudMaster(self, var_manager, logged_session):\n        cloudgroup_id = var_manager.get_variable(\"cloudgroup_id\")\n        with allure.step(\"1. 发送新增云策略的请求接口\"):\n            data = {\n                \"name\": \"自动化测试\",\n                \"type\": 0,\n                \"remark\": \"\",\n                \"status\": 0,\n                \"groupId\": cloudgroup_id,\n                \"sort\": 100,\n                \"isMonitorRepair\": 1\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/mascontrol/cloudMaster',\n                json_data=data\n            )\n    \n        with allure.step(\"2. 校验接口请求是否正确\"):\n            # 使用工具类的 assert_value 方法验证响应状态\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_cloudTrader\\test_create.py:456: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_718.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001D180A8AB50>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/cloudMaster\nE           JSON路径: $.msg\nE           实际值: 云策略名称已存在，请勿重复添加\nE           期望值: success\n\ncommons\\api_base.py:245: AssertionError",
    "steps" : [ {
      "name" : "1. 发送新增云策略的请求接口",
      "time" : {
        "start" : 1753084837986,
        "stop" : 1753084843053,
        "duration" : 5067
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "发送POST请求到 /mascontrol/cloudMaster",
        "time" : {
          "start" : 1753084837986,
          "stop" : 1753084843053,
          "duration" : 5067
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "4af2240092c2e73c",
          "name" : "请求JSON数据",
          "source" : "4af2240092c2e73c.json",
          "type" : "application/json",
          "size" : 116
        }, {
          "uid" : "a6fa11ac7f20b2b8",
          "name" : "请求URL",
          "source" : "a6fa11ac7f20b2b8.txt",
          "type" : "text/plain",
          "size" : 23
        }, {
          "uid" : "5c2bac840deea3",
          "name" : "响应结果",
          "source" : "5c2bac840deea3.txt",
          "type" : "text/plain",
          "size" : 101
        } ],
        "parameters" : [ ],
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    }, {
      "name" : "2. 校验接口请求是否正确",
      "time" : {
        "start" : 1753084843053,
        "stop" : 1753084843057,
        "duration" : 4
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/cloudMaster\nJSON路径: $.msg\n实际值: 云策略名称已存在，请勿重复添加\n期望值: success\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_718\\test_cloudTrader\\test_create.py\", line 456, in test_create_cloudMaster\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_718\\commons\\api_base.py\", line 245, in assert_json_value\n    assert actual_value == expected_value, (\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "1594b1727d57190",
      "name" : "log",
      "source" : "1594b1727d57190.txt",
      "type" : "text/plain",
      "size" : 5166
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1753085075831,
      "stop" : 1753085075832,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1753084843071,
      "stop" : 1753084843071,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1753084843070,
      "stop" : 1753084843070,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "账号管理-创建账号-为云策略准备"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate_cloudTrader"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "33416-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f5fd29a975f965c7.json",
  "parameterValues" : [ ]
}