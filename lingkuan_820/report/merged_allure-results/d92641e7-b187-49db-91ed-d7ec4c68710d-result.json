{"name": "数据库校验-VPS数据-批量新增跟单账号", "status": "broken", "statusDetails": {"message": "pymysql.err.InterfaceError: (0, '')", "trace": "self = <lingkuan_820.test_vps.test_create_scene.TestCreate_Scene object at 0x000001DFD478BA00>\nvar_manager = <lingkuan_820.commons.variable_manager.VariableManager object at 0x000001DFD4AC2460>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DFD4712040>\n\n    @allure.title(\"数据库校验-VPS数据-批量新增跟单账号\")\n    def test_dbimport_addSlave(self, var_manager, db_transaction):\n        # 1. 校验总用户数（需至少7个，才能取后6个）\n        vps_user_count = var_manager.get_variable(\"vps_user_count\", 0)\n        if vps_user_count < 7:\n            pytest.fail(f\"用户总数需至少为7，当前为{vps_user_count}，无法提取后6个数据进行校验\")\n    \n        # 2. 提取后6个账号（对应vps_user_accounts_2到vps_user_accounts_7）\n        all_accounts = []\n        for i in range(2, 8):  # 直接指定取第2到第7个账号（共6个）\n            account = var_manager.get_variable(f\"vps_user_accounts_{i}\")\n            if not account:\n                pytest.fail(f\"未找到第{i}个账号（变量：vps_user_accounts_{i}）\")\n            all_accounts.append(account)\n        print(f\"将校验的后6个账号：{all_accounts}\")\n    \n        # 3. 初始化ID列表和计数器\n        all_ids = []\n        vps_addslave_count = 0\n    \n        # 4. 逐个校验后6个账号的数据库记录\n        for idx, account in enumerate(all_accounts, 1):  # idx从1开始（1-6，对应6个账号）\n            with allure.step(f\"验证第{idx}个账号（{account}）的数据库记录\"):\n                sql = f\"SELECT * FROM follow_trader WHERE account = %s\"\n                params = (account,)\n    \n                # 调用轮询等待方法（带时间范围过滤）\n                db_data = self.query_database_with_time(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"account ASC\"\n                )\n    \n                if not db_data:\n                    pytest.fail(f\"账号 {account} 在主表中未找到记录，请检查新增是否成功\")\n    \n                # 提取当前账号的ID并保存到变量管理器\n                vps_addslave_id = db_data[0][\"id\"]\n                all_ids.append(vps_addslave_id)\n                var_manager.set_runtime_variable(f\"vps_addslave_ids_{idx}\", vps_addslave_id)\n                print(f\"账号 {account} 的ID为：{vps_addslave_id}，已保存到变量 vps_addslave_ids_{idx}\")\n    \n            with allure.step(\"校验账号状态和净值（核心业务规则）\"):\n                status = db_data[0][\"status\"]\n                assert status == 0, f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\"\n                logging.info(f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\")\n    \n                euqit = db_data[0][\"euqit\"]\n                assert euqit > 0, f\"账号净值euqit有钱，实际金额为: {euqit}\"\n                logging.info(f\"账号净值euqit有钱，实际金额为: {euqit}\")\n    \n                # 校验订阅表记录（从表关联）\n                sql = f\"SELECT * FROM follow_trader_subscribe WHERE slave_account = %s\"\n                params = (account,)\n                # 调用轮询等待方法（带时间范围过滤）\n>               db_sub_data = self.query_database_with_time(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"slave_account ASC\"\n                )\n\ntest_vps\\test_create_scene.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in query_database_with_time\n    final_result = self._execute_query(\ncommons\\api_base.py:718: in _execute_query\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:562: in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001DFD4712040>\ncommand = 3\nsql = b\"SELECT * FROM follow_trader_subscribe WHERE slave_account = '300155' ORDER BY slave_account ASC\"\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError"}, "steps": [{"name": "验证第1个账号（300153）的数据库记录", "status": "passed", "steps": [{"name": "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）", "status": "passed", "start": 1755512942336, "stop": 1755512942336}, {"name": "数据库查询结果（最终稳定结果）", "status": "passed", "attachments": [{"name": "执行SQL", "source": "734a5869-c0fe-4807-8eef-1c577fa33d97-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "8fe38b39-2170-4cbd-bcbb-6d90977211d5-attachment.txt", "type": "text/plain"}, {"name": "查询结果（共1条，显示前1条）", "source": "b031c987-4017-45c3-896a-464ca6ee176f-attachment.json", "type": "application/json"}], "start": 1755512948733, "stop": 1755512948734}], "attachments": [{"name": "等待结果", "source": "f42f8a97-5ec0-4a0e-8ae4-f441eecd16ad-attachment.txt", "type": "text/plain"}], "start": 1755512942336, "stop": 1755512948735}, {"name": "校验账号状态和净值（核心业务规则）", "status": "passed", "steps": [{"name": "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）", "status": "passed", "start": 1755512948735, "stop": 1755512948735}, {"name": "数据库查询结果（最终稳定结果）", "status": "passed", "attachments": [{"name": "执行SQL", "source": "ba489e6f-5cc1-4a0c-ba38-db0636affa44-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "21e749db-aefb-4495-9972-540afb4f1a1f-attachment.txt", "type": "text/plain"}, {"name": "查询结果（共1条，显示前1条）", "source": "3bcec7cd-7cb5-41eb-b208-448515b95d1b-attachment.json", "type": "application/json"}], "start": 1755512955125, "stop": 1755512955126}], "attachments": [{"name": "等待结果", "source": "5c529794-71ed-48f0-9cd3-5c3f120a9ff9-attachment.txt", "type": "text/plain"}], "start": 1755512948735, "stop": 1755512955126}, {"name": "验证第2个账号（300154）的数据库记录", "status": "passed", "steps": [{"name": "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）", "status": "passed", "start": 1755512955126, "stop": 1755512955126}, {"name": "数据库查询结果（最终稳定结果）", "status": "passed", "attachments": [{"name": "执行SQL", "source": "cb5ea8c6-d50b-4613-ad65-81795dd515a3-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "deb1af24-e2ca-459c-98bd-03eaf970da31-attachment.txt", "type": "text/plain"}, {"name": "查询结果（共1条，显示前1条）", "source": "822c40c2-5d71-4efd-9047-4e88f36271b2-attachment.json", "type": "application/json"}], "start": 1755512961532, "stop": 1755512961533}], "attachments": [{"name": "等待结果", "source": "a5ec08f5-3848-4deb-95c1-af8a257e3952-attachment.txt", "type": "text/plain"}], "start": 1755512955126, "stop": 1755512961534}, {"name": "校验账号状态和净值（核心业务规则）", "status": "passed", "steps": [{"name": "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）", "status": "passed", "start": 1755512961534, "stop": 1755512961534}, {"name": "数据库查询结果（最终稳定结果）", "status": "passed", "attachments": [{"name": "执行SQL", "source": "bb28dce8-ad45-4421-8f53-1238b67f4136-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "66de6e39-94c4-44ca-beba-6a88cd44fb86-attachment.txt", "type": "text/plain"}, {"name": "查询结果（共1条，显示前1条）", "source": "582d312f-b129-4319-b274-61da2d44180e-attachment.json", "type": "application/json"}], "start": 1755512967937, "stop": 1755512967938}], "attachments": [{"name": "等待结果", "source": "d504fdb8-2910-4035-86d2-1142a013fc66-attachment.txt", "type": "text/plain"}], "start": 1755512961534, "stop": 1755512967938}, {"name": "验证第3个账号（300155）的数据库记录", "status": "passed", "steps": [{"name": "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）", "status": "passed", "start": 1755512967938, "stop": 1755512967938}, {"name": "数据库查询结果（最终稳定结果）", "status": "passed", "attachments": [{"name": "执行SQL", "source": "72d9d8b2-27fe-436a-81f5-a1d9b3c4de03-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "eac9f433-d426-4870-8b34-0d78073831ff-attachment.txt", "type": "text/plain"}, {"name": "查询结果（共1条，显示前1条）", "source": "e337ac86-6f56-4fb6-a18a-ffe3db46c00a-attachment.json", "type": "application/json"}], "start": 1755512974340, "stop": 1755512974341}], "attachments": [{"name": "等待结果", "source": "02141289-ba4f-4a88-b491-16d6224c8272-attachment.txt", "type": "text/plain"}], "start": 1755512967938, "stop": 1755512974341}, {"name": "校验账号状态和净值（核心业务规则）", "status": "broken", "statusDetails": {"message": "pymysql.err.InterfaceError: (0, '')\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_820\\test_vps\\test_create_scene.py\", line 202, in test_dbimport_addSlave\n    db_sub_data = self.query_database_with_time(\n  File \"D:\\pycharm_test\\lingkuan_820\\commons\\api_base.py\", line 662, in query_database_with_time\n    final_result = self._execute_query(\n  File \"D:\\pycharm_test\\lingkuan_820\\commons\\api_base.py\", line 718, in _execute_query\n    return self.query_database(\n  File \"D:\\pycharm_test\\lingkuan_820\\commons\\api_base.py\", line 398, in query_database\n    cursor.execute(final_sql, params)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 562, in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 843, in _execute_command\n    raise err.InterfaceError(0, \"\")\n"}, "steps": [{"name": "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）", "status": "passed", "start": 1755512974342, "stop": 1755512974342}], "attachments": [{"name": "数据库异常", "source": "3460d6ae-9954-4f5a-8cfc-8f78b2441123-attachment.txt", "type": "text/plain"}], "start": 1755512974341, "stop": 1755564918774}], "attachments": [{"name": "log", "source": "ac27237b-8f00-4a7e-8bfc-1fd993f9d10b-attachment.txt", "type": "text/plain"}], "start": 1755512942336, "stop": 1755564918775, "uuid": "caf59f33-394f-45f0-825a-f084cca52231", "historyId": "5b943886b5c4f05887f323b30339137a", "testCaseId": "5b943886b5c4f05887f323b30339137a", "fullName": "test_vps.test_create_scene.TestCreate_Scene#test_dbimport_addSlave", "labels": [{"name": "feature", "value": "跟单软件看板-VPS数据-批量新增VPS跟单"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_create_scene"}, {"name": "subSuite", "value": "TestCreate_Scene"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "6824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_create_scene"}]}