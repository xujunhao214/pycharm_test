{
  "uid" : "afc2848d0f8d7991",
  "name" : "数据库校验-交易平仓-主指令及订单详情数据检查-有订单",
  "fullName" : "test_vps.test_vps_masOrderClose.TestVPStradingOrders2#test_dbquery_orderSendclose",
  "historyId" : "6cec5c8362413bb725560d09ebd8c4aa",
  "time" : {
    "start" : 1756111739621,
    "stop" : 1756111746742,
    "duration" : 7121
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有vps策略和vps跟单\n      1. 进行开仓，手数范围0.1-1，总订单4\n      2. 进行平仓\n      3. 发送停止请求\n      4. 校验平仓的订单数，应该不等于4\n      5. 进行平仓-正常平仓\n      6. 校验平仓的订单数,等于4\n    - 预期结果：平仓的停止功能正确\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有vps策略和vps跟单\n  1. 进行开仓，手数范围0.1-1，总订单4\n  2. 进行平仓\n  3. 发送停止请求\n  4. 校验平仓的订单数，应该不等于4\n  5. 进行平仓-正常平仓\n  6. 校验平仓的订单数,等于4\n- 预期结果：平仓的停止功能正确\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 正常平仓，应该有4个平仓订单，结果有6个订单\nassert 6 == 4\n +  where 6 = len([{'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:57', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '7105741943212', 'close_time': '2025-08-25 11:48:29', 'create_time': '2025-08-25 16:48:29', 'foi.order_no': '7105741943212', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}])",
  "statusTrace" : "self = <lingkuan_820.test_vps.test_vps_masOrderClose.TestVPSMasOrderclose.TestVPStradingOrders2 object at 0x0000014712EA1700>\nvar_manager = <lingkuan_820.commons.variable_manager.VariableManager object at 0x0000014712FE88B0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000014712E55EE0>\n\n    @allure.title(\"数据库校验-交易平仓-主指令及订单详情数据检查-有订单\")\n    def test_dbquery_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            new_user = var_manager.get_variable(\"new_user\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    fod.close_time,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    \"\"\"\n            params = (\n                '1',\n                new_user[\"account\"],\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n>           assert len(db_data) == 4, f\"正常平仓，应该有4个平仓订单，结果有{len(db_data)}个订单\"\nE           AssertionError: 正常平仓，应该有4个平仓订单，结果有6个订单\nE           assert 6 == 4\nE            +  where 6 = len([{'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:57', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '7105741943212', 'close_time': '2025-08-25 11:48:29', 'create_time': '2025-08-25 16:48:29', 'foi.order_no': '7105741943212', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}])\n\ntest_vps\\test_vps_masOrderClose.py:614: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1756111739217,
      "stop" : 1756111739621,
      "duration" : 404
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756111739621,
      "stop" : 1756111739621,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有vps策略和vps跟单\n      1. 进行开仓，手数范围0.1-1，总订单4\n      2. 进行平仓\n      3. 发送停止请求\n      4. 校验平仓的订单数，应该不等于4\n      5. 进行平仓-正常平仓\n      6. 校验平仓的订单数,等于4\n    - 预期结果：平仓的停止功能正确\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 正常平仓，应该有4个平仓订单，结果有6个订单\nassert 6 == 4\n +  where 6 = len([{'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:57', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '7105741943212', 'close_time': '2025-08-25 11:48:29', 'create_time': '2025-08-25 16:48:29', 'foi.order_no': '7105741943212', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}])",
    "statusTrace" : "self = <lingkuan_820.test_vps.test_vps_masOrderClose.TestVPSMasOrderclose.TestVPStradingOrders2 object at 0x0000014712EA1700>\nvar_manager = <lingkuan_820.commons.variable_manager.VariableManager object at 0x0000014712FE88B0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000014712E55EE0>\n\n    @allure.title(\"数据库校验-交易平仓-主指令及订单详情数据检查-有订单\")\n    def test_dbquery_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            new_user = var_manager.get_variable(\"new_user\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    fod.close_time,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    \"\"\"\n            params = (\n                '1',\n                new_user[\"account\"],\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n>           assert len(db_data) == 4, f\"正常平仓，应该有4个平仓订单，结果有{len(db_data)}个订单\"\nE           AssertionError: 正常平仓，应该有4个平仓订单，结果有6个订单\nE           assert 6 == 4\nE            +  where 6 = len([{'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:57', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '7105741943212', 'close_time': '2025-08-25 11:48:29', 'create_time': '2025-08-25 16:48:29', 'foi.order_no': '7105741943212', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}])\n\ntest_vps\\test_vps_masOrderClose.py:614: AssertionError",
    "steps" : [ {
      "name" : "1. 获取订单详情界面跟单账号数据",
      "time" : {
        "start" : 1756111739621,
        "stop" : 1756111746741,
        "duration" : 7120
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（时区+05:00，超时30秒）",
        "time" : {
          "start" : 1756111739621,
          "stop" : 1756111739622,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "a6171a69559220dd",
          "name" : "SQL模板",
          "source" : "a6171a69559220dd.txt",
          "type" : "text/plain",
          "size" : 916
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false
      }, {
        "name" : "带时区查询最终结果",
        "time" : {
          "start" : 1756111746741,
          "stop" : 1756111746741,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "5fdfcf230179c29b",
          "name" : "结果预览",
          "source" : "5fdfcf230179c29b.json",
          "type" : "application/json",
          "size" : 2222
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 2,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 数据校验",
      "time" : {
        "start" : 1756111746741,
        "stop" : 1756111746742,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 正常平仓，应该有4个平仓订单，结果有6个订单\nassert 6 == 4\n +  where 6 = len([{'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:57', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '8160687930229', 'close_time': '2025-08-25 11:48:58', 'create_time': '2025-08-25 16:48:58', 'foi.order_no': '8160687930229', ...}, {'close_no': '7105741943212', 'close_time': '2025-08-25 11:48:29', 'create_time': '2025-08-25 16:48:29', 'foi.order_no': '7105741943212', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}, {'close_no': '0332828771526', 'close_time': '2025-08-25 11:48:05', 'create_time': '2025-08-25 16:48:05', 'foi.order_no': '0332828771526', ...}])\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_820\\test_vps\\test_vps_masOrderClose.py\", line 614, in test_dbquery_orderSendclose\n    assert len(db_data) == 4, f\"正常平仓，应该有4个平仓订单，结果有{len(db_data)}个订单\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "8d18f531f0457bf2",
      "name" : "log",
      "source" : "8d18f531f0457bf2.txt",
      "type" : "text/plain",
      "size" : 8205
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 4,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1756111746858,
      "stop" : 1756111746859,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756111746857,
      "stop" : 1756111746857,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略账号交易下单-平仓的功能校验"
  }, {
    "name" : "story",
    "value" : "场景2：平仓的停止功能校验"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_masOrderClose"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSMasOrderclose"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "32884-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_masOrderClose"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "afc2848d0f8d7991.json",
  "parameterValues" : [ ]
}