{"name": "跟单账号ID查询-开仓后", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'", "trace": "self = <template.test_cloudTrader.test_openandclose.Test_openandclouseall.Test_orderseng object at 0x000001D2BE1CCEB0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001D2BE1DBB50>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001D2BE1CCE50>\n\n    @allure.title(\"跟单账号ID查询-开仓后\")\n    def test_query_openfollow_passid(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            follow_pass_id = var_manager.get_variable(\"follow_pass_id\")\n            follow_account = var_manager.get_variable(\"follow_account\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"trader_id\": follow_pass_id,\n                \"column\": \"id\",\n                \"order\": \"desc\",\n                \"pageNo\": 1,\n                \"pageSize\": 50,\n                \"superQueryMatchType\": \"and\"\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/online/cgform/api/getData/402883977b38c9ca017b38c9caff0000',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.success\",\n                True,\n                \"响应success字段应为true\"\n            )\n    \n        with allure.step(\"3. 提取数据\"):\n            order_no = self.json_utils.extract(response.json(), \"$.result.records[0].order_no\")\n            var_manager.set_runtime_variable(\"order_no\", order_no)\n            allure.attach(f\"{order_no}\", \"跟单订单号\", allure.attachment_type.TEXT)\n    \n        with allure.step(f\"3. 查询校验\"):\n            trader_id_list = self.json_utils.extract(\n                response.json(),\n                \"$.result.records[0].trader_id\",\n                default=[],\n                multi_match=True\n            )\n    \n            if not trader_id_list:\n                attach_body = f\"账号ID查询[{follow_account}]，返回的trader_id列表为空（暂无数据）\"\n            else:\n                attach_body = f\"账号ID查询[{follow_account}]，返回 {len(trader_id_list)} 条记录，trader_id值如下：\\n\" + \\\n                              \"\\n\".join([f\"第 {idx + 1} 条：{s}\" for idx, s in enumerate(trader_id_list)])\n    \n            allure.attach(\n                body=attach_body,\n                name=f\"账号ID:{follow_account}查询结果\",\n                attachment_type=\"text/plain\"\n            )\n    \n            for idx, trader_id in enumerate(trader_id_list):\n                self.verify_data(\n                    actual_value=int(trader_id),\n                    expected_value=int(follow_pass_id),\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"第 {idx + 1} 条记录的账号ID应为{trader_id}\",\n                    attachment_name=f\"账号ID:{follow_pass_id}第 {idx + 1} 条记录校验\"\n                )\n    \n            with allure.step(\"喊单者订单号校验\"):\n                master_order_no = self.json_utils.extract(response.json(), \"$.result.records[0].master_order_no\")\n                ticket_open = var_manager.get_variable(\"ticket_open\")\n    \n                self.verify_data(\n                    actual_value=master_order_no,\n                    expected_value=ticket_open,\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"订单号数据正确\",\n                    attachment_name=\"订单号详情\"\n                )\n                logger.info(f\"订单号数据正确,开仓订单号：{ticket_open} 喊单者订单号：{master_order_no}\")\n    \n            with allure.step(\"跟单订单号校验\"):\n                slave_ticket = var_manager.get_variable(\"slave_ticket\")\n                self.verify_data(\n                    actual_value=slave_ticket,\n                    expected_value=order_no,\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"订单号数据正确\",\n                    attachment_name=\"订单号详情\"\n                )\n                logger.info(f\"订单号数据正确,跟单者订单号：{order_no} 数据库数据：{slave_ticket}\")\n    \n            with allure.step(\"手数校验-订阅关系是按比例1:1\"):\n                add_size = self.json_utils.extract(response.json(), \"$.result.records[0].size\")\n                order_size = var_manager.get_variable(\"order_size\")\n    \n                self.verify_data(\n                    actual_value=float(add_size),\n>                   expected_value=float(order_size),\n                    op=CompareOp.EQ,\n                    message=f\"手数符合预期\",\n                    attachment_name=\"手数详情\"\n                )\nE               TypeError: float() argument must be a string or a number, not 'NoneType'\n\ntest_cloudTrader\\test_openandclose.py:385: TypeError"}, "steps": [{"name": "1. 发送请求", "status": "passed", "steps": [{"name": "执行 GET 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "218b55a0-ae8b-45ef-bb3a-c790a76e2a72-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "7e029bdc-b359-45bd-85a1-e2ac705148ec-attachment.json", "type": "application/json"}, {"name": "请求体（表单/文件）", "source": "67e5cdef-1892-40b9-b8cd-25ab36ca6070-attachment.txt", "type": "text/plain"}], "start": 1758017418125, "stop": 1758017418126}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "c4725f87-1ac3-49ac-9aa0-399ccd7a3db0-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "57f58d75-5d36-4cb4-8991-aef399c3110d-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "30d1640c-19f3-477b-b2d6-fa16b4dc6c7d-attachment.json", "type": "application/json"}], "start": 1758017418708, "stop": 1758017418710}], "start": 1758017418125, "stop": 1758017421711}], "start": 1758017418125, "stop": 1758017421711}, {"name": "2. 返回校验", "status": "passed", "steps": [{"name": "断言JSON路径: $.success", "status": "passed", "attachments": [{"name": "请求URL", "source": "945cce23-df12-4abb-95c3-cfc6b4cd31f2-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "8a669b62-6edb-47bc-847c-8a1b6c0ffbba-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "be02baa8-4772-4998-9464-d3debbf13350-attachment.txt", "type": "text/plain"}], "start": 1758017421720, "stop": 1758017421723}], "start": 1758017421711, "stop": 1758017421723}, {"name": "3. 提取数据", "status": "passed", "attachments": [{"name": "跟单订单号", "source": "f9724e16-35cd-4b9d-b244-e41b3fa499bc-attachment.txt", "type": "text/plain"}], "start": 1758017421723, "stop": 1758017421734}, {"name": "3. 查询校验", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_openandclose.py\", line 385, in test_query_openfollow_passid\n    expected_value=float(order_size),\n"}, "steps": [{"name": "校验: 第 1 条记录的账号ID应为1967760842374959105", "status": "passed", "attachments": [{"name": "账号ID:1967760842374959105第 1 条记录校验", "source": "2ad606f7-83ed-4ed3-abb2-3c5e2c1b3975-attachment.attach", "type": "text/plain"}], "start": 1758017421743, "stop": 1758017421744}, {"name": "喊单者订单号校验", "status": "passed", "steps": [{"name": "校验: 订单号数据正确", "status": "passed", "attachments": [{"name": "订单号详情", "source": "3b97c298-ad32-4419-ade3-ea2967899da2-attachment.attach", "type": "text/plain"}], "start": 1758017421754, "stop": 1758017421754}], "start": 1758017421744, "stop": 1758017421754}, {"name": "跟单订单号校验", "status": "passed", "steps": [{"name": "校验: 订单号数据正确", "status": "passed", "attachments": [{"name": "订单号详情", "source": "14945775-df98-495d-baad-496c4a82f09d-attachment.attach", "type": "text/plain"}], "start": 1758017421754, "stop": 1758017421755}], "start": 1758017421754, "stop": 1758017421755}, {"name": "手数校验-订阅关系是按比例1:1", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_openandclose.py\", line 385, in test_query_openfollow_passid\n    expected_value=float(order_size),\n"}, "start": 1758017421755, "stop": 1758017421764}], "attachments": [{"name": "账号ID:2088767546查询结果", "source": "39c06ba8-264a-4371-a02b-38199c796b76-attachment.attach", "type": "text/plain"}], "start": 1758017421734, "stop": 1758017421765}], "attachments": [{"name": "log", "source": "94f3694b-897f-48a5-8b35-87742f00fdc5-attachment.txt", "type": "text/plain"}], "start": 1758017418124, "stop": 1758017421765, "uuid": "866d38a7-e25c-4043-8f47-5e88f82fd685", "historyId": "cb15ef5295904b63d41cbdb1393c5da7", "testCaseId": "cb15ef5295904b63d41cbdb1393c5da7", "fullName": "test_cloudTrader.test_openandclose.Test_orderseng#test_query_openfollow_passid", "labels": [{"name": "feature", "value": "账户管理-持仓订单"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_openandclose"}, {"name": "subSuite", "value": "Test_openandclouseall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "39736-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_openandclose"}]}