{"name": "账号管理-交易员账号-绑定账户", "status": "failed", "statusDetails": {"message": "AssertionError: Failed: 响应success字段应为true（JSON断言失败）", "trace": "self = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x0000021028369F40>\nresponse = <Response [200]>, json_path = '$.success', expected_value = True\nerror_msg_prefix = '响应success字段应为true'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg_prefix):\n        \"\"\"断言JSON路径对应的值（分层提示优化）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n            with allure.step(f\"断言JSON路径: {json_path}\"):\n                allure.attach(response.url, \"请求URL\", allure.attachment_type.TEXT)\n                allure.attach(f\"期望值: {self.serialize_data(expected_value)}\", \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(f\"实际值: {self.serialize_data(actual_value)}\", \"实际值\", allure.attachment_type.TEXT)\n    \n>           assert actual_value == expected_value, \\\n                f\"Failed: {error_msg_prefix}（JSON路径值不匹配）\"\nE               AssertionError: Failed: 响应success字段应为true（JSON路径值不匹配）\n\ncommons\\api_base.py:473: AssertionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x0000021028369F40>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x0000021028471910>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x0000021028379040>\n\n    @allure.title(\"账号管理-交易员账号-绑定账户\")\n    def test_account_bind(self, var_manager, logged_session):\n        trader_account = var_manager.get_variable(\"trader_account\")\n        trader_password = var_manager.get_variable(\"trader_password\")\n        trader_user_id = var_manager.get_variable(\"trader_user_id\")\n        trader_broker_id = var_manager.get_variable(\"trader_broker_id\")\n        trader_server_id = var_manager.get_variable(\"trader_server_id\")\n        data = {\n            \"userId\": trader_user_id,\n            \"brokerId\": trader_broker_id,\n            \"serverId\": trader_server_id,\n            \"account\": trader_account,\n            \"password\": trader_password,\n            \"display\": \"PUBLIC\",\n            \"passwordType\": \"0\",\n            \"subscribeFee\": \"0\",\n            \"type\": \"MASTER_REAL\",\n            \"strategy\": \"\",\n            \"platform\": \"4\"\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/blockchain/account/bind',\n            json_data=data\n        )\n    \n>       self.assert_json_value(\n            response,\n            \"$.success\",\n            True,\n            \"响应success字段应为true\"\n        )\n\ntest_cloudTrader\\test_create.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x0000021028369F40>\nresponse = <Response [200]>, json_path = '$.success', expected_value = True\nerror_msg_prefix = '响应success字段应为true'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg_prefix):\n        \"\"\"断言JSON路径对应的值（分层提示优化）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n            with allure.step(f\"断言JSON路径: {json_path}\"):\n                allure.attach(response.url, \"请求URL\", allure.attachment_type.TEXT)\n                allure.attach(f\"期望值: {self.serialize_data(expected_value)}\", \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(f\"实际值: {self.serialize_data(actual_value)}\", \"实际值\", allure.attachment_type.TEXT)\n    \n            assert actual_value == expected_value, \\\n                f\"Failed: {error_msg_prefix}（JSON路径值不匹配）\"\n        except Exception as e:\n            with allure.step(f\"JSON断言失败: {json_path}\"):\n                allure.attach(json_path, \"JSON路径\", allure.attachment_type.TEXT)\n                allure.attach(str(expected_value), \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(response.text[:500], \"响应内容\", allure.attachment_type.TEXT)\n            logger.error(\n                f\"[{self._get_current_time()}] JSON断言失败: {str(e)} | 路径: {json_path} | 响应: {response.text[:500]}\")\n>           raise AssertionError(f\"Failed: {error_msg_prefix}（JSON断言失败）\") from e\nE           AssertionError: Failed: 响应success字段应为true（JSON断言失败）\n\ncommons\\api_base.py:482: AssertionError"}, "steps": [{"name": "执行 POST 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "fa9f5345-599b-43eb-abab-41c0c7814c2f-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "1b753e58-c6e5-465b-91a7-9926b1b5e7a4-attachment.json", "type": "application/json"}, {"name": "请求体（JSON）", "source": "70e09cd6-e907-46ea-bd26-f90542629606-attachment.json", "type": "application/json"}], "start": 1758529769678, "stop": 1758529769679}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "99dd656c-6889-4eff-99f2-578e9e807f1f-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "9a57eaf7-ef2e-4042-8066-54a6073691eb-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "f045b859-dc82-4294-a8b7-87fa95ca01d7-attachment.json", "type": "application/json"}], "start": 1758529773305, "stop": 1758529773306}], "start": 1758529769678, "stop": 1758529776315}, {"name": "断言JSON路径: $.success", "status": "passed", "attachments": [{"name": "请求URL", "source": "35f83de3-64f3-4df7-9b1b-f62130065bfb-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "54e8a57f-70ca-4335-9049-2d2e5fea9963-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "cabde438-02f4-4eb7-8b67-8c36c88c398f-attachment.txt", "type": "text/plain"}], "start": 1758529776320, "stop": 1758529776321}, {"name": "JSON断言失败: $.success", "status": "passed", "attachments": [{"name": "JSON路径", "source": "fed9a0e8-7f4f-4081-b5c4-9289b0827a15-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "b128d039-c0b8-47a4-9dd1-20fbe2661cc3-attachment.txt", "type": "text/plain"}, {"name": "响应内容", "source": "8b7c7d8d-6b2e-47bb-a117-f907ab4f3991-attachment.txt", "type": "text/plain"}], "start": 1758529776321, "stop": 1758529776322}], "attachments": [{"name": "log", "source": "ae042633-1306-4eb1-851e-ade1d2723326-attachment.txt", "type": "text/plain"}], "start": 1758529769678, "stop": 1758529776322, "uuid": "66813899-bcea-41b6-900a-c4b7f5d4cb6c", "historyId": "74e11d64ebca920bc538b40564cd7c54", "testCaseId": "74e11d64ebca920bc538b40564cd7c54", "fullName": "test_cloudTrader.test_create.Test_trader#test_account_bind", "labels": [{"name": "story", "value": "创建交易员账号"}, {"name": "feature", "value": "账号管理"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_create"}, {"name": "subSuite", "value": "Test_create"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "8540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_create"}]}