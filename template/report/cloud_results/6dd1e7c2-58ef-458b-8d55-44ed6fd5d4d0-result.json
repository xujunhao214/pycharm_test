{"name": "跟单管理-VPS管理-提取喊单者净值", "status": "failed", "statusDetails": {"message": "Failed: 不支持的币种：None，请补充币种转换逻辑", "trace": "self = <template.test_cloudTrader.test_oac_equit.Test_openandclouseall.Test_orderseng1 object at 0x000001F114E2D910>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001F114E58640>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001F114E53280>\n\n    @pytest.mark.retry(n=3, delay=20)\n    @allure.title(\"跟单管理-VPS管理-提取喊单者净值\")\n    def test_query_get_traderquit(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            trader_account = var_manager.get_variable(\"trader_account\")\n            vpsrunIpAddr = var_manager.get_variable(\"vpsrunIpAddr\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"pageNo\": \"1\",\n                \"pageSize\": \"50\",\n                \"accountLike\": trader_account,\n                \"serverNameLike\": \"\",\n                \"connectTraderLike\": \"\",\n                \"connected\": \"\",\n                \"runIpAddr\": vpsrunIpAddr\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/blockchain/account/getRecordList',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.searchCount\",\n                True,\n                \"响应searchCount字段应为true\"\n            )\n    \n        with allure.step(f\"3. 提取净值数据\"):\n            trader_equity = self.json_utils.extract(response.json(), \"$.records[0].equity\")\n            currency = self.json_utils.extract(response.json(), \"$.records[0].currency\")\n    \n            if currency == \"USD\":\n                trader_periodP = round(float(trader_equity) * 1.0, 2)\n            elif currency == \"JPY\":\n                trader_periodP = round(float(trader_equity) * 0.00672, 2)\n            elif currency == \"AUD\":\n                trader_periodP = round(float(trader_equity) * 0.6251, 2)\n            elif currency == \"USC\":\n                trader_periodP = round(float(trader_equity) * 0.01, 2)\n            else:\n>               pytest.fail(f\"不支持的币种：{currency}，请补充币种转换逻辑\")\nE               Failed: 不支持的币种：None，请补充币种转换逻辑\n\ntest_cloudTrader\\test_oac_equit.py:136: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ", "steps": [{"name": "1. 发送请求", "status": "passed", "steps": [{"name": "执行 GET 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "5d858d34-3ee3-4f05-a6b1-03fbbc7d6070-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "64c9dd1a-dad9-466e-b7cb-eefd8819c858-attachment.json", "type": "application/json"}, {"name": "请求体（表单/文件）", "source": "abfc8007-7623-4ea5-a3b8-31e7239130e1-attachment.txt", "type": "text/plain"}], "start": 1758249175129, "stop": 1758249175131}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "603eb43f-8221-43bc-924a-9e38a00c6d66-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "7c53ee62-75eb-4632-b712-763b2d38f1d6-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "a31815f0-c6b1-4a34-abb1-74457ecc442d-attachment.json", "type": "application/json"}], "start": 1758249175689, "stop": 1758249175690}], "start": 1758249175129, "stop": 1758249178700}], "start": 1758249175129, "stop": 1758249178700}, {"name": "2. 返回校验", "status": "passed", "steps": [{"name": "断言JSON路径: $.searchCount", "status": "passed", "attachments": [{"name": "请求URL", "source": "0d7c788b-b62d-46e5-a546-350bf5dab2f9-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "bd2d3f68-1900-434d-ae17-b5ea40cde9d1-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "c1861960-fb01-4f3f-bc82-9a5f3930cc60-attachment.txt", "type": "text/plain"}], "start": 1758249178705, "stop": 1758249178706}], "start": 1758249178700, "stop": 1758249178706}, {"name": "3. 提取净值数据", "status": "failed", "statusDetails": {"message": "Failed: 不支持的币种：None，请补充币种转换逻辑\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 136, in test_query_get_traderquit\n    pytest.fail(f\"不支持的币种：{currency}，请补充币种转换逻辑\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1758249178706, "stop": 1758249178714}], "attachments": [{"name": "log", "source": "c1a5144b-4f80-471d-ad94-f095fb2dd892-attachment.txt", "type": "text/plain"}], "start": 1758249175129, "stop": 1758249178715, "uuid": "65ecc308-f09b-4750-8265-d1508bc1c71e", "historyId": "e12448f1d243114d3fed01b1fed7cd9e", "testCaseId": "e12448f1d243114d3fed01b1fed7cd9e", "fullName": "test_cloudTrader.test_oac_equit.Test_orderseng1#test_query_get_traderquit", "labels": [{"name": "feature", "value": "跟随方式-按净值"}, {"name": "story", "value": "场景1：跟随方式-按净值-100%"}, {"name": "tag", "value": "retry(n=3, delay=20)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_oac_equit"}, {"name": "subSuite", "value": "Test_openandclouseall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "17284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_oac_equit"}]}