{"name": "MT4平台平仓操作", "status": "failed", "statusDetails": {"message": "Failed: 经过3次尝试（包含重新登录）后，平仓仍失败，订单号: 44268341", "trace": "self = <template.test_cloudTrader.test_oac_equit.Test_openandclouseall.Test_orderseng1 object at 0x00000195AB2E8F10>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x00000195AB2CD3A0>\n\n    @allure.title(\"MT4平台平仓操作\")\n    def test_mt4_close(self, var_manager):\n        max_attempts = 3  # 最大总尝试次数\n        retry_interval = 10  # 每次尝试间隔时间(秒)\n        ticket_open = var_manager.get_variable(\"ticket_open\")\n        ticket_close = None\n    \n        # 提取登录所需变量\n        uuid_pattern = re.compile(\n            r'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$')\n    \n        for attempt in range(max_attempts):\n            try:\n                with allure.step(f\"1. 发送平仓请求 (第{attempt + 1}次尝试)\"):\n                    # 检查token是否有效，无效则重新登录\n                    if not token_mt4 or not uuid_pattern.match(token_mt4):\n                        with allure.step(\"token无效或不存在，重新登录MT4\"):\n                            self.test_mt4_login(var_manager)  # 调用登录方法获取新token\n    \n                    # 发送平仓请求\n                    url = f\"https://mt4.mtapi.io/OrderClose?id={token_mt4}&ticket={ticket_open}&price=0.00\"\n                    self.response = requests.request(\"GET\", url, headers=headers)\n                    self.response_json = self.response.json()\n                    logging.info(f\"第{attempt + 1}次平仓响应: {self.response_json[:500]}\")\n    \n                # 提取平仓订单号\n                ticket_close = self.json_utils.extract(self.response_json, \"$.ticket\")\n    \n                # 检查平仓是否成功\n                if ticket_close is not None:\n                    with allure.step(\"2. 数据校验\"):\n                        self.verify_data(\n                            actual_value=ticket_close,\n                            expected_value=ticket_open,\n                            op=CompareOp.EQ,\n                            use_isclose=False,\n                            message=\"预期：开仓订单号和平仓订单号一致\",\n                            attachment_name=\"订单号详情\"\n                        )\n                        logger.info(\n                            f\"开仓订单号和平仓订单号一致,开仓订单号：{ticket_open} 平仓订单号：{ticket_close}\")\n                    break  # 成功则跳出循环\n                else:\n                    logging.warning(f\"第{attempt + 1}次平仓失败，未获取到平仓订单号\")\n    \n            except Exception as e:\n                logging.error(f\"第{attempt + 1}次平仓发生异常: {str(e)}\")\n    \n            # 如果不是最后一次尝试，等待后重试\n            if attempt < max_attempts - 1:\n                logging.info(f\"将在{retry_interval}秒后进行第{attempt + 2}次尝试...\")\n                time.sleep(retry_interval)\n                # 主动重新登录获取新token\n                with allure.step(f\"准备第{attempt + 2}次尝试，先重新登录MT4\"):\n                    self.test_mt4_login(var_manager)\n    \n        # 所有尝试结束后仍失败，标记用例失败\n        if ticket_close is None:\n>           pytest.fail(f\"经过{max_attempts}次尝试（包含重新登录）后，平仓仍失败，订单号: {ticket_open}\")\nE           Failed: 经过3次尝试（包含重新登录）后，平仓仍失败，订单号: 44268341\n\ntest_cloudTrader\\test_oac_equit.py:1001: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ", "steps": [{"name": "1. 发送平仓请求 (第1次尝试)", "status": "broken", "statusDetails": {"message": "TypeError: unhashable type: 'slice'\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 966, in test_mt4_close\n    logging.info(f\"第{attempt + 1}次平仓响应: {self.response_json[:500]}\")\n"}, "start": 1758177505189, "stop": 1758177506257}, {"name": "准备第2次尝试，先重新登录MT4", "status": "passed", "start": 1758177516260, "stop": 1758177517356}, {"name": "1. 发送平仓请求 (第2次尝试)", "status": "broken", "statusDetails": {"message": "TypeError: unhashable type: 'slice'\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 966, in test_mt4_close\n    logging.info(f\"第{attempt + 1}次平仓响应: {self.response_json[:500]}\")\n"}, "start": 1758177517356, "stop": 1758177518362}, {"name": "准备第3次尝试，先重新登录MT4", "status": "passed", "start": 1758177528371, "stop": 1758177529378}, {"name": "1. 发送平仓请求 (第3次尝试)", "status": "broken", "statusDetails": {"message": "TypeError: unhashable type: 'slice'\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 966, in test_mt4_close\n    logging.info(f\"第{attempt + 1}次平仓响应: {self.response_json[:500]}\")\n"}, "start": 1758177529378, "stop": 1758177530404}], "attachments": [{"name": "log", "source": "a109521e-6fdc-436b-a7fc-88e901ba41a0-attachment.txt", "type": "text/plain"}], "start": 1758177505189, "stop": 1758177530405, "uuid": "ef3c9a93-9c10-455a-b65c-20f42436a72a", "historyId": "cf83d878d54f36435ac87820dab082d1", "testCaseId": "cf83d878d54f36435ac87820dab082d1", "fullName": "test_cloudTrader.test_oac_equit.Test_orderseng1#test_mt4_close", "labels": [{"name": "story", "value": "场景1：跟随方式-按净值-100%"}, {"name": "feature", "value": "跟随方式-按净值"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_oac_equit"}, {"name": "subSuite", "value": "Test_openandclouseall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "18712-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_oac_equit"}]}