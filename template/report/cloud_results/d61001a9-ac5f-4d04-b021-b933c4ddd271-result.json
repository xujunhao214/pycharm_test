{"name": "跟单管理-VPS管理-提取喊单者净值", "status": "failed", "statusDetails": {"message": "Failed: 不支持的币种：None，请补充币种转换逻辑", "trace": "self = <template.test_cloudTrader.test_oac_equit.Test_openandclouseall.Test_orderseng3 object at 0x000001F114E58220>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001F114E58640>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001F114E53280>\n\n    @pytest.mark.retry(n=3, delay=20)\n    @allure.title(\"跟单管理-VPS管理-提取喊单者净值\")\n    def test_query_get_traderquit(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            trader_account = var_manager.get_variable(\"trader_account\")\n            vpsrunIpAddr = var_manager.get_variable(\"vpsrunIpAddr\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"pageNo\": \"1\",\n                \"pageSize\": \"50\",\n                \"accountLike\": trader_account,\n                \"serverNameLike\": \"\",\n                \"connectTraderLike\": \"\",\n                \"connected\": \"\",\n                \"runIpAddr\": vpsrunIpAddr\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/blockchain/account/getRecordList',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.searchCount\",\n                True,\n                \"响应searchCount字段应为true\"\n            )\n    \n        with allure.step(f\"3. 提取净值数据\"):\n            trader_equity = self.json_utils.extract(response.json(), \"$.records[0].equity\")\n            currency = self.json_utils.extract(response.json(), \"$.records[0].currency\")\n    \n            if currency == \"USD\":\n                trader_periodP = round(float(trader_equity) * 1.0, 2)\n            elif currency == \"JPY\":\n                trader_periodP = round(float(trader_equity) * 0.00672, 2)\n            elif currency == \"AUD\":\n                trader_periodP = round(float(trader_equity) * 0.6251, 2)\n            elif currency == \"USC\":\n                trader_periodP = round(float(trader_equity) * 0.01, 2)\n            else:\n>               pytest.fail(f\"不支持的币种：{currency}，请补充币种转换逻辑\")\nE               Failed: 不支持的币种：None，请补充币种转换逻辑\n\ntest_cloudTrader\\test_oac_equit.py:2465: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ", "steps": [{"name": "1. 发送请求", "status": "passed", "steps": [{"name": "执行 GET 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "4c9a12ce-da89-4c39-8d06-6dba7c6db39e-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "aeebbbf0-58aa-43fa-a58a-1a3f80453b61-attachment.json", "type": "application/json"}, {"name": "请求体（表单/文件）", "source": "961cbc3a-4b5f-4afd-912f-af7607329914-attachment.txt", "type": "text/plain"}], "start": 1758249739273, "stop": 1758249739275}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "4b6e6e08-bc79-4316-b782-59bc49ba7013-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "daca9a99-4283-4d17-b762-7ac9b05fea1d-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "a5bff3f3-4267-4758-9543-7b8de25e2424-attachment.json", "type": "application/json"}], "start": 1758249739877, "stop": 1758249739879}], "start": 1758249739273, "stop": 1758249742885}], "start": 1758249739273, "stop": 1758249742885}, {"name": "2. 返回校验", "status": "passed", "steps": [{"name": "断言JSON路径: $.searchCount", "status": "passed", "attachments": [{"name": "请求URL", "source": "3a4c1b35-660f-4905-ad9e-6c3a28861f75-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "06ae1662-10ef-49b0-bd61-5c52986363a4-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "724a7754-a417-4079-a75e-2496c6a2f44b-attachment.txt", "type": "text/plain"}], "start": 1758249742889, "stop": 1758249742891}], "start": 1758249742885, "stop": 1758249742891}, {"name": "3. 提取净值数据", "status": "failed", "statusDetails": {"message": "Failed: 不支持的币种：None，请补充币种转换逻辑\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 2465, in test_query_get_traderquit\n    pytest.fail(f\"不支持的币种：{currency}，请补充币种转换逻辑\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1758249742891, "stop": 1758249742898}], "attachments": [{"name": "log", "source": "21467d2d-1e36-4a16-86e0-d080cff4c11c-attachment.txt", "type": "text/plain"}], "start": 1758249739273, "stop": 1758249742898, "uuid": "1c5c53c3-7350-4459-b4e7-6308b8c9bd39", "historyId": "5f41b8386288b27e9a488cf1ee06d79c", "testCaseId": "5f41b8386288b27e9a488cf1ee06d79c", "fullName": "test_cloudTrader.test_oac_equit.Test_orderseng3#test_query_get_traderquit", "labels": [{"name": "feature", "value": "跟随方式-按净值"}, {"name": "story", "value": "场景3：跟随方式-按净值-1%"}, {"name": "tag", "value": "retry(n=3, delay=20)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_oac_equit"}, {"name": "subSuite", "value": "Test_openandclouseall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "17284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_oac_equit"}]}