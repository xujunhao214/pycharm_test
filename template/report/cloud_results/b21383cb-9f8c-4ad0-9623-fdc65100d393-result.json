{"name": "跟单管理-VPS管理-提取喊单者净值", "status": "failed", "statusDetails": {"message": "Failed: 不支持的币种：None，请补充币种转换逻辑", "trace": "self = <template.test_cloudTrader.test_oac_equit.Test_openandclouseall.Test_orderseng3 object at 0x000001F114E58220>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001F114E58640>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001F114E53280>\n\n    @pytest.mark.retry(n=3, delay=20)\n    @allure.title(\"跟单管理-VPS管理-提取喊单者净值\")\n    def test_query_get_traderquit(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            trader_account = var_manager.get_variable(\"trader_account\")\n            vpsrunIpAddr = var_manager.get_variable(\"vpsrunIpAddr\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"pageNo\": \"1\",\n                \"pageSize\": \"50\",\n                \"accountLike\": trader_account,\n                \"serverNameLike\": \"\",\n                \"connectTraderLike\": \"\",\n                \"connected\": \"\",\n                \"runIpAddr\": vpsrunIpAddr\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/blockchain/account/getRecordList',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.searchCount\",\n                True,\n                \"响应searchCount字段应为true\"\n            )\n    \n        with allure.step(f\"3. 提取净值数据\"):\n            trader_equity = self.json_utils.extract(response.json(), \"$.records[0].equity\")\n            currency = self.json_utils.extract(response.json(), \"$.records[0].currency\")\n    \n            if currency == \"USD\":\n                trader_periodP = round(float(trader_equity) * 1.0, 2)\n            elif currency == \"JPY\":\n                trader_periodP = round(float(trader_equity) * 0.00672, 2)\n            elif currency == \"AUD\":\n                trader_periodP = round(float(trader_equity) * 0.6251, 2)\n            elif currency == \"USC\":\n                trader_periodP = round(float(trader_equity) * 0.01, 2)\n            else:\n>               pytest.fail(f\"不支持的币种：{currency}，请补充币种转换逻辑\")\nE               Failed: 不支持的币种：None，请补充币种转换逻辑\n\ntest_cloudTrader\\test_oac_equit.py:2465: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ", "steps": [{"name": "1. 发送请求", "status": "passed", "steps": [{"name": "执行 GET 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "6c3ac7d8-1741-46f8-8b5c-093626208a6d-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "ba89f948-4635-4d26-8b90-dc3a07c0eec9-attachment.json", "type": "application/json"}, {"name": "请求体（表单/文件）", "source": "d30a1b72-0cbe-41ef-bf35-3c57b58a3f1e-attachment.txt", "type": "text/plain"}], "start": 1758249687821, "stop": 1758249687822}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "d2852eb7-6de6-4366-96bb-455e045f4fe2-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "653dacf8-cab7-401a-ad66-b372ab3d7b6c-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "8397a3f0-c6ca-4de3-95a2-feac478941cb-attachment.json", "type": "application/json"}], "start": 1758249688786, "stop": 1758249688787}], "start": 1758249687821, "stop": 1758249691795}], "start": 1758249687821, "stop": 1758249691795}, {"name": "2. 返回校验", "status": "passed", "steps": [{"name": "断言JSON路径: $.searchCount", "status": "passed", "attachments": [{"name": "请求URL", "source": "87eb0274-767e-4db9-ab38-9640d5272e76-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "7cda38f0-5bd4-4de0-95a6-06fd96329f22-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "f18827b2-fca9-44a0-bcf7-391f5b178eaf-attachment.txt", "type": "text/plain"}], "start": 1758249691799, "stop": 1758249691801}], "start": 1758249691795, "stop": 1758249691801}, {"name": "3. 提取净值数据", "status": "failed", "statusDetails": {"message": "Failed: 不支持的币种：None，请补充币种转换逻辑\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 2465, in test_query_get_traderquit\n    pytest.fail(f\"不支持的币种：{currency}，请补充币种转换逻辑\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1758249691801, "stop": 1758249691808}], "attachments": [{"name": "log", "source": "44be37e7-56aa-4162-bab2-afef29678b44-attachment.txt", "type": "text/plain"}], "start": 1758249687821, "stop": 1758249691809, "uuid": "4a6f1b43-146a-44ca-9f18-227b854fa2ff", "historyId": "5f41b8386288b27e9a488cf1ee06d79c", "testCaseId": "5f41b8386288b27e9a488cf1ee06d79c", "fullName": "test_cloudTrader.test_oac_equit.Test_orderseng3#test_query_get_traderquit", "labels": [{"name": "feature", "value": "跟随方式-按净值"}, {"name": "story", "value": "场景3：跟随方式-按净值-1%"}, {"name": "tag", "value": "retry(n=3, delay=20)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_oac_equit"}, {"name": "subSuite", "value": "Test_openandclouseall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "17284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_oac_equit"}]}