{"name": "账号管理-交易员账号-绑定账户", "status": "failed", "statusDetails": {"message": "AssertionError: Failed: 响应success字段应为true（JSON断言失败）", "trace": "self = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x0000021028369F40>\nresponse = <Response [200]>, json_path = '$.success', expected_value = True\nerror_msg_prefix = '响应success字段应为true'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg_prefix):\n        \"\"\"断言JSON路径对应的值（分层提示优化）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n            with allure.step(f\"断言JSON路径: {json_path}\"):\n                allure.attach(response.url, \"请求URL\", allure.attachment_type.TEXT)\n                allure.attach(f\"期望值: {self.serialize_data(expected_value)}\", \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(f\"实际值: {self.serialize_data(actual_value)}\", \"实际值\", allure.attachment_type.TEXT)\n    \n>           assert actual_value == expected_value, \\\n                f\"Failed: {error_msg_prefix}（JSON路径值不匹配）\"\nE               AssertionError: Failed: 响应success字段应为true（JSON路径值不匹配）\n\ncommons\\api_base.py:473: AssertionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x0000021028369F40>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x0000021028471910>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x0000021028379040>\n\n    @allure.title(\"账号管理-交易员账号-绑定账户\")\n    def test_account_bind(self, var_manager, logged_session):\n        trader_account = var_manager.get_variable(\"trader_account\")\n        trader_password = var_manager.get_variable(\"trader_password\")\n        trader_user_id = var_manager.get_variable(\"trader_user_id\")\n        trader_broker_id = var_manager.get_variable(\"trader_broker_id\")\n        trader_server_id = var_manager.get_variable(\"trader_server_id\")\n        data = {\n            \"userId\": trader_user_id,\n            \"brokerId\": trader_broker_id,\n            \"serverId\": trader_server_id,\n            \"account\": trader_account,\n            \"password\": trader_password,\n            \"display\": \"PUBLIC\",\n            \"passwordType\": \"0\",\n            \"subscribeFee\": \"0\",\n            \"type\": \"MASTER_REAL\",\n            \"strategy\": \"\",\n            \"platform\": \"4\"\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/blockchain/account/bind',\n            json_data=data\n        )\n    \n>       self.assert_json_value(\n            response,\n            \"$.success\",\n            True,\n            \"响应success字段应为true\"\n        )\n\ntest_cloudTrader\\test_create.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x0000021028369F40>\nresponse = <Response [200]>, json_path = '$.success', expected_value = True\nerror_msg_prefix = '响应success字段应为true'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg_prefix):\n        \"\"\"断言JSON路径对应的值（分层提示优化）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n            with allure.step(f\"断言JSON路径: {json_path}\"):\n                allure.attach(response.url, \"请求URL\", allure.attachment_type.TEXT)\n                allure.attach(f\"期望值: {self.serialize_data(expected_value)}\", \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(f\"实际值: {self.serialize_data(actual_value)}\", \"实际值\", allure.attachment_type.TEXT)\n    \n            assert actual_value == expected_value, \\\n                f\"Failed: {error_msg_prefix}（JSON路径值不匹配）\"\n        except Exception as e:\n            with allure.step(f\"JSON断言失败: {json_path}\"):\n                allure.attach(json_path, \"JSON路径\", allure.attachment_type.TEXT)\n                allure.attach(str(expected_value), \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(response.text[:500], \"响应内容\", allure.attachment_type.TEXT)\n            logger.error(\n                f\"[{self._get_current_time()}] JSON断言失败: {str(e)} | 路径: {json_path} | 响应: {response.text[:500]}\")\n>           raise AssertionError(f\"Failed: {error_msg_prefix}（JSON断言失败）\") from e\nE           AssertionError: Failed: 响应success字段应为true（JSON断言失败）\n\ncommons\\api_base.py:482: AssertionError"}, "steps": [{"name": "执行 POST 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "8af68ae8-cb6a-497d-9853-894be732257e-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "bce7469d-0a43-4dd1-88ea-9ed07dfe49dc-attachment.json", "type": "application/json"}, {"name": "请求体（JSON）", "source": "f0488045-ecd1-49d7-aaae-fb7b876affd9-attachment.json", "type": "application/json"}], "start": 1758529743054, "stop": 1758529743056}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "dbdd7532-3b0c-434c-bb15-9340a1a05de7-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "552c7837-3b0a-4087-afd6-87e701d48007-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "30890630-371f-4561-b07f-243a6f511dec-attachment.json", "type": "application/json"}], "start": 1758529746599, "stop": 1758529746599}], "start": 1758529743054, "stop": 1758529749609}, {"name": "断言JSON路径: $.success", "status": "passed", "attachments": [{"name": "请求URL", "source": "56e2b1da-3b5c-4c23-977b-2d545bcb6e42-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "675a916c-cf32-48d7-bd48-7016eea5abaf-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "bb42b820-515f-43c5-8e46-255d7589723f-attachment.txt", "type": "text/plain"}], "start": 1758529749614, "stop": 1758529749619}, {"name": "JSON断言失败: $.success", "status": "passed", "attachments": [{"name": "JSON路径", "source": "a4f03c42-17e5-4dce-857b-5a16947362cd-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "3b6f1a0b-f8f5-4177-8181-faace5a21491-attachment.txt", "type": "text/plain"}, {"name": "响应内容", "source": "77363670-750f-4197-8a74-10df2b8dff7b-attachment.txt", "type": "text/plain"}], "start": 1758529749619, "stop": 1758529749619}], "attachments": [{"name": "log", "source": "92c4e83c-96c4-4471-a128-001f2132532f-attachment.txt", "type": "text/plain"}], "start": 1758529743054, "stop": 1758529749619, "uuid": "47cd466e-fb17-48cc-bd85-c17daa61ae9e", "historyId": "74e11d64ebca920bc538b40564cd7c54", "testCaseId": "74e11d64ebca920bc538b40564cd7c54", "fullName": "test_cloudTrader.test_create.Test_trader#test_account_bind", "labels": [{"name": "story", "value": "创建交易员账号"}, {"name": "feature", "value": "账号管理"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_create"}, {"name": "subSuite", "value": "Test_create"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "8540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_create"}]}