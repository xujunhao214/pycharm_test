{"name": "账号管理-交易员账号-绑定账户", "status": "failed", "statusDetails": {"message": "AssertionError: Failed: 响应success字段应为true（JSON断言失败）", "trace": "self = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x000002033092B910>\nresponse = <Response [200]>, json_path = '$.success', expected_value = True\nerror_msg_prefix = '响应success字段应为true'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg_prefix):\n        \"\"\"断言JSON路径对应的值（分层提示优化）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n            with allure.step(f\"断言JSON路径: {json_path}\"):\n                allure.attach(response.url, \"请求URL\", allure.attachment_type.TEXT)\n                allure.attach(f\"期望值: {self.serialize_data(expected_value)}\", \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(f\"实际值: {self.serialize_data(actual_value)}\", \"实际值\", allure.attachment_type.TEXT)\n    \n>           assert actual_value == expected_value, \\\n                f\"Failed: {error_msg_prefix}（JSON路径值不匹配）\"\nE               AssertionError: Failed: 响应success字段应为true（JSON路径值不匹配）\n\ncommons\\api_base.py:475: AssertionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x000002033092B910>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x00000203309480A0>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x0000020330A36790>\n\n    @allure.title(\"账号管理-交易员账号-绑定账户\")\n    def test_account_bind(self, var_manager, logged_session):\n        trader_account = var_manager.get_variable(\"trader_account\")\n        trader_password = var_manager.get_variable(\"trader_password\")\n        trader_user_id = var_manager.get_variable(\"trader_user_id\")\n        trader_broker_id = var_manager.get_variable(\"trader_broker_id\")\n        trader_server_id = var_manager.get_variable(\"trader_server_id\")\n        data = {\n            \"userId\": trader_user_id,\n            \"brokerId\": trader_broker_id,\n            \"serverId\": trader_server_id,\n            \"account\": trader_account,\n            \"password\": trader_password,\n            \"display\": \"PUBLIC\",\n            \"passwordType\": \"0\",\n            \"subscribeFee\": \"0\",\n            \"type\": \"MASTER_REAL\",\n            \"strategy\": \"\",\n            \"platform\": \"4\"\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/blockchain/account/bind',\n            json_data=data\n        )\n    \n>       self.assert_json_value(\n            response,\n            \"$.success\",\n            True,\n            \"响应success字段应为true\"\n        )\n\ntest_cloudTrader\\test_create.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x000002033092B910>\nresponse = <Response [200]>, json_path = '$.success', expected_value = True\nerror_msg_prefix = '响应success字段应为true'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg_prefix):\n        \"\"\"断言JSON路径对应的值（分层提示优化）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n            with allure.step(f\"断言JSON路径: {json_path}\"):\n                allure.attach(response.url, \"请求URL\", allure.attachment_type.TEXT)\n                allure.attach(f\"期望值: {self.serialize_data(expected_value)}\", \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(f\"实际值: {self.serialize_data(actual_value)}\", \"实际值\", allure.attachment_type.TEXT)\n    \n            assert actual_value == expected_value, \\\n                f\"Failed: {error_msg_prefix}（JSON路径值不匹配）\"\n        except Exception as e:\n            with allure.step(f\"JSON断言失败: {json_path}\"):\n                allure.attach(json_path, \"JSON路径\", allure.attachment_type.TEXT)\n                allure.attach(str(expected_value), \"预期值\", allure.attachment_type.TEXT)\n                allure.attach(response.text[:500], \"响应内容\", allure.attachment_type.TEXT)\n            logger.error(\n                f\"[{self._get_current_time()}] JSON断言失败: {str(e)} | 路径: {json_path} | 响应: {response.text[:500]}\")\n>           raise AssertionError(f\"Failed: {error_msg_prefix}（JSON断言失败）\") from e\nE           AssertionError: Failed: 响应success字段应为true（JSON断言失败）\n\ncommons\\api_base.py:484: AssertionError"}, "steps": [{"name": "执行 POST 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "34f5c5dc-b95c-4052-be3e-1e7371b06b07-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "3e94db18-770a-49a2-9b66-f299d89c6aef-attachment.json", "type": "application/json"}, {"name": "请求体（JSON）", "source": "620f1156-4f0f-4ded-9dcf-25c7a1c6dc38-attachment.json", "type": "application/json"}], "start": 1757583429875, "stop": 1757583429876}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "82f10262-6ac1-4712-9f94-00f1549c74a4-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "9b3c36b2-903d-4a86-860c-09602817817d-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "6732193b-b4e7-4a0d-a51e-3862ba487c59-attachment.json", "type": "application/json"}], "start": 1757583432068, "stop": 1757583432069}], "start": 1757583429875, "stop": 1757583435071}, {"name": "断言JSON路径: $.success", "status": "passed", "attachments": [{"name": "请求URL", "source": "8215f673-6466-4de6-a080-8308f4d5609b-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "b6651195-da0a-4b8c-9383-758e383b11a2-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "cc011703-9e1e-4919-86cc-3b7d82b9de75-attachment.txt", "type": "text/plain"}], "start": 1757583435075, "stop": 1757583435076}, {"name": "JSON断言失败: $.success", "status": "passed", "attachments": [{"name": "JSON路径", "source": "50dcf2d2-3abe-456b-8317-00fb92c7ac6b-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "8c4a130c-7633-413f-913d-9138864c2ba2-attachment.txt", "type": "text/plain"}, {"name": "响应内容", "source": "51438b92-03a0-47a8-815e-ab9cdfb0eb26-attachment.txt", "type": "text/plain"}], "start": 1757583435076, "stop": 1757583435077}], "attachments": [{"name": "log", "source": "0f4abde8-ddc3-490b-b7fe-ee486a238be6-attachment.txt", "type": "text/plain"}], "start": 1757583429875, "stop": 1757583435077, "uuid": "258998ea-624e-4be0-ba4b-98ac99ae58a6", "historyId": "74e11d64ebca920bc538b40564cd7c54", "testCaseId": "74e11d64ebca920bc538b40564cd7c54", "fullName": "test_cloudTrader.test_create.Test_trader#test_account_bind", "labels": [{"name": "feature", "value": "账号管理"}, {"name": "story", "value": "创建交易员账号"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_create"}, {"name": "subSuite", "value": "Test_create"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "54504-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_create"}]}