{"name": "数据库校验-VPS数据-删除策略账号", "status": "failed", "statusDetails": {"message": "Failed: 删除失败: Failed: 等待记录删除超时（5秒）", "trace": "self = <test_delete.TestDeleteUser object at 0x00000211AA3D6280>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x00000211AA5E0E20>\ndbvps_transaction = <pymysql.connections.Connection object at 0x00000211AA736EE0>\n\n    @allure.title(\"数据库校验-VPS数据-删除策略账号\")\n    def test_dbdelete_vpstrader(self, var_manager, dbvps_transaction):\n        with allure.step(\"1. 查询数据库验证是否删除成功\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            logging.info(f\"查询条件: table=follow_trader, account={vps_user_accounts_1}\")\n    \n            sql = f\"SELECT * FROM follow_trader WHERE account = %s\"\n            params = (vps_user_accounts_1,)\n            try:\n>               self.wait_for_database_deletion(\n                    dbvps_transaction=dbvps_transaction,\n                    sql=sql,\n                    params=params\n                )\n\ntest_community_vps\\test_delete.py:153: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_delete.TestDeleteUser object at 0x00000211AA3D6280>\ndbvps_transaction = <pymysql.connections.Connection object at 0x00000211AA736EE0>\nsql = 'SELECT * FROM follow_trader WHERE account = %s', params = ('301391174',)\ntime_field = None, time_range = 1, order_by = 'create_time DESC', timeout = 5\npoll_interval = 2\n\n    def wait_for_database_deletion(self, dbvps_transaction: pymysql.connections.Connection,\n                                   sql: str,\n                                   params: tuple = (),\n                                   time_field: Optional[str] = None,\n                                   time_range: int = MYSQL_TIME,\n                                   order_by: str = \"create_time DESC\",\n                                   timeout: int = DELETE_WAIT_TIMEOUT,\n                                   poll_interval: int = POLL_INTERVAL) -> None:\n        \"\"\"轮询等待数据库记录删除（带Allure分层提示）\"\"\"\n        start_time = time.time()\n    \n        # 生成固定时间范围（轮询开始时计算一次）\n        poll_start_datetime = datetime.datetime.now()\n        fixed_time_start = (poll_start_datetime - datetime.timedelta(minutes=time_range)).strftime(\n            \"%Y-%m-%d %H:%M:%S\")\n        fixed_time_end = (poll_start_datetime + datetime.timedelta(minutes=time_range)).strftime(\n            \"%Y-%m-%d %H:%M:%S\")\n    \n        logger.info(f\"[{self._get_current_time()}] 开始等待数据库记录删除 | SQL: {sql[:200]} | 超时: {timeout}秒\")\n    \n        with allure.step(f\"等待数据库记录删除（超时: {timeout}秒）\"):\n            while time.time() - start_time < timeout:\n                try:\n                    dbvps_transaction.commit()\n    \n                    if time_field:\n                        result = self._execute_query(\n                            dbvps_transaction=dbvps_transaction,\n                            sql=sql,\n                            params=params,\n                            time_field=time_field,\n                            order_by=order_by,\n                            fixed_time_start=fixed_time_start,\n                            fixed_time_end=fixed_time_end,\n                            attach_to_allure=False\n                        )\n                    else:\n                        result = self.query_database(\n                            dbvps_transaction=dbvps_transaction,\n                            sql=sql,\n                            params=params,\n                            order_by=order_by,\n                            attach_to_allure=False\n                        )\n    \n                    elapsed = time.time() - start_time\n                    with allure.step(f\"等待中（已等待{elapsed:.1f}秒）\"):\n                        allure.attach(f\"剩余记录数: {len(result)}\", \"当前状态\", allure.attachment_type.TEXT)\n                        allure.attach(f\"剩余时间: {timeout - elapsed:.1f}秒\", \"超时倒计时\", allure.attachment_type.TEXT)\n    \n                    if not result:\n                        logger.info(\n                            f\"[{self._get_current_time()}] 删除成功（耗时{time.time() - start_time:.1f}秒）| SQL: {sql[:200]}\")\n                        with allure.step(\"删除验证成功\"):\n                            allure.attach(f\"耗时{time.time() - start_time:.1f}秒，记录已删除\", \"结果说明\",\n                                          allure.attachment_type.TEXT)\n                        return\n    \n                    logger.info(\n                        f\"[{self._get_current_time()}] 记录仍存在（已等待{elapsed:.1f}秒）| 剩余时间: {timeout - elapsed:.1f}秒 | 结果数: {len(result)}\")\n                    time.sleep(poll_interval)\n    \n                except Exception as e:\n                    with allure.step(\"删除等待异常\"):\n                        allure.attach(sql, \"执行SQL\", allure.attachment_type.TEXT)\n                        allure.attach(str(params), \"SQL参数\", allure.attachment_type.TEXT)\n                        allure.attach(str(e), \"错误详情\", allure.attachment_type.TEXT)\n                    logger.warning(f\"[{self._get_current_time()}] 轮询查询异常: {str(e)} | 继续等待...\")\n                    time.sleep(poll_interval)\n    \n            # 超时处理\n            dbvps_transaction.commit()\n            if time_field:\n                final_result = self._execute_query(\n                    dbvps_transaction=dbvps_transaction,\n                    sql=sql,\n                    params=params,\n                    time_field=time_field,\n                    order_by=order_by,\n                    fixed_time_start=fixed_time_start,\n                    fixed_time_end=fixed_time_end,\n                    attach_to_allure=True\n                )\n            else:\n                final_result = self.query_database(\n                    dbvps_transaction=dbvps_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=order_by,\n                    attach_to_allure=True\n                )\n    \n            display_count = min(len(final_result), 50)\n            with allure.step(\"等待删除超时\"):\n                allure.attach(f\"超过{timeout}秒仍有{len(final_result)}条记录未删除\", \"超时说明\",\n                              allure.attachment_type.TEXT)\n                allure.attach(\n                    self.serialize_data(final_result[:display_count]),\n                    f\"剩余记录（共{len(final_result)}条）\",\n                    allure.attachment_type.JSON\n                )\n    \n>           raise TimeoutError(f\"Failed: 等待记录删除超时（{timeout}秒）\")\nE           TimeoutError: Failed: 等待记录删除超时（5秒）\n\ncommons\\api_vpsbase.py:870: TimeoutError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_delete.TestDeleteUser object at 0x00000211AA3D6280>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x00000211AA5E0E20>\ndbvps_transaction = <pymysql.connections.Connection object at 0x00000211AA736EE0>\n\n    @allure.title(\"数据库校验-VPS数据-删除策略账号\")\n    def test_dbdelete_vpstrader(self, var_manager, dbvps_transaction):\n        with allure.step(\"1. 查询数据库验证是否删除成功\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            logging.info(f\"查询条件: table=follow_trader, account={vps_user_accounts_1}\")\n    \n            sql = f\"SELECT * FROM follow_trader WHERE account = %s\"\n            params = (vps_user_accounts_1,)\n            try:\n                self.wait_for_database_deletion(\n                    dbvps_transaction=dbvps_transaction,\n                    sql=sql,\n                    params=params\n                )\n                allure.attach(f\"策略账号 {vps_user_accounts_1} 已成功从数据库删除\", \"验证结果\")\n            except TimeoutError as e:\n                allure.attach(f\"删除超时: {str(e)}\", \"验证结果\")\n>               pytest.fail(f\"删除失败: {str(e)}\")\nE               Failed: 删除失败: Failed: 等待记录删除超时（5秒）\n\ntest_community_vps\\test_delete.py:161: Failed"}, "steps": [{"name": "1. 查询数据库验证是否删除成功", "status": "failed", "statusDetails": {"message": "Failed: 删除失败: Failed: 等待记录删除超时（5秒）\n", "trace": "  File \"D:\\pycharm_test\\template\\test_community_vps\\test_delete.py\", line 161, in test_dbdelete_vpstrader\n    pytest.fail(f\"删除失败: {str(e)}\")\n  File \"D:\\pycharm_test\\Community\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "等待数据库记录删除（超时: 5秒）", "status": "broken", "statusDetails": {"message": "TimeoutError: Failed: 等待记录删除超时（5秒）\n", "trace": "  File \"D:\\pycharm_test\\template\\commons\\api_vpsbase.py\", line 870, in wait_for_database_deletion\n    raise TimeoutError(f\"Failed: 等待记录删除超时（{timeout}秒）\")\n"}, "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "6b23b8ba-6424-4f96-919c-76275f067972-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "b399bc4c-78dc-4af8-9e5a-fa3b90969bdd-attachment.txt", "type": "text/plain"}], "start": 1760526391229, "stop": 1760526391281}, {"name": "等待中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "be03b572-ccf0-4d18-8558-83bca9ef5bbc-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "397508f9-ea7e-4955-a8eb-6df465fb8c98-attachment.txt", "type": "text/plain"}], "start": 1760526391281, "stop": 1760526391282}, {"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "1638e7a4-78dd-4140-8d8e-32961f4f358b-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "1cc9c836-1c6c-4cf9-a7af-c25f99d9a112-attachment.txt", "type": "text/plain"}], "start": 1760526393330, "stop": 1760526393380}, {"name": "等待中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "870d8197-091c-4044-b053-140d0563e853-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "e7d4fc5a-64a0-4489-8951-36166b2a0539-attachment.txt", "type": "text/plain"}], "start": 1760526393380, "stop": 1760526393381}, {"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "fffccb7f-aab4-4975-8528-f04801a33168-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "cf3f660e-91a7-4587-b8fb-9c87991298f3-attachment.txt", "type": "text/plain"}], "start": 1760526395437, "stop": 1760526395486}, {"name": "等待中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "8814b5d0-ce61-4d11-8881-8cf4bf3c631d-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "19e05c23-7871-4d89-9b97-8ec557229dad-attachment.txt", "type": "text/plain"}], "start": 1760526395486, "stop": 1760526395487}, {"name": "执行数据库查询", "status": "passed", "steps": [{"name": "数据库查询结果", "status": "passed", "attachments": [{"name": "查询结果（共1条，显示前50条）", "source": "d1cdcb2f-3107-497a-9909-6b7b16872f81-attachment.json", "type": "application/json"}], "start": 1760526397587, "stop": 1760526397588}], "attachments": [{"name": "执行SQL", "source": "78dd7dbc-ad90-40d1-87cc-b635189d0c72-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "c61a3acf-a878-4cf2-87f4-aae74f6380bb-attachment.txt", "type": "text/plain"}], "start": 1760526397542, "stop": 1760526397588}, {"name": "等待删除超时", "status": "passed", "attachments": [{"name": "超时说明", "source": "26726c69-806a-4011-bb15-d1ed0c7c4479-attachment.txt", "type": "text/plain"}, {"name": "剩余记录（共1条）", "source": "7ff490ea-5522-4648-8ea3-5e3d5b2683d8-attachment.json", "type": "application/json"}], "start": 1760526397588, "stop": 1760526397589}], "start": 1760526391184, "stop": 1760526397589}], "attachments": [{"name": "验证结果", "source": "61dabdb9-b6cc-4503-88bb-64e12f8b9f8f-attachment.attach"}], "start": 1760526391184, "stop": 1760526397590}], "attachments": [{"name": "log", "source": "2a653d6e-ec73-44f1-8660-c5ca642c58bc-attachment.txt", "type": "text/plain"}], "start": 1760526391184, "stop": 1760526397590, "uuid": "15322a46-50e7-4dc8-8526-8d41942dad54", "historyId": "153e02380f97491c7fd95c4501af5b9c", "testCaseId": "153e02380f97491c7fd95c4501af5b9c", "fullName": "test_community_vps.test_delete.TestDeleteUser#test_dbdelete_vpstrader", "labels": [{"name": "feature", "value": "数据管理-删除跟单社区测试数据"}, {"name": "parentSuite", "value": "test_community_vps"}, {"name": "suite", "value": "test_delete"}, {"name": "subSuite", "value": "TestDeleteUser"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "20652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_community_vps.test_delete"}]}