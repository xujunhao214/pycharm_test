{"name": "公共方法-MT4开仓操作", "status": "failed", "statusDetails": {"message": "Failed: 数据库查询结果为空，无法提取数据", "trace": "self = <template.test_cloudTrader.test_oac_proportion.Test_proportionall.Test_orderseng1 object at 0x00000287982B27F0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x0000028798384610>\ndb_transaction = <pymysql.connections.Connection object at 0x0000028798401E50>\n\n    @allure.title(\"公共方法-MT4开仓操作\")\n    def test_run_mt4open(self, var_manager, db_transaction):\n        # 实例化类\n        public_front = PublicUtils()\n    \n        # 登录MT4账号获取token\n        public_front.test_mt4_login(var_manager)\n        # MT4平台开仓操作\n        public_front.test_mt4_open(var_manager)\n        # 提跟单订单号\n>       public_front.test_dbquery_openorder(var_manager, db_transaction)\n\ntest_cloudTrader\\test_oac_proportion.py:123: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <template.public_function.proportion_public.PublicUtils object at 0x000002879835B880>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x0000028798384610>\ndb_transaction = <pymysql.connections.Connection object at 0x0000028798401E50>\n\n    @allure.title(\"数据库提取数据-提取跟单订单号\")\n    def test_dbquery_openorder(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否新增成功\"):\n            ticket_open = var_manager.get_variable(\"ticket_open\")\n    \n            # 优化后的数据库查询\n            db_data = self.query_database(\n                db_transaction,\n                f\"SELECT * FROM bchain_trader_subscribe_order WHERE master_ticket = %s\",\n                (ticket_open,),\n            )\n    \n            # 提取数据库中的值\n            if not db_data:\n>               pytest.fail(\"数据库查询结果为空，无法提取数据\")\nE               Failed: 数据库查询结果为空，无法提取数据\n\npublic_function\\proportion_public.py:347: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. 修改订阅信息，跟随方式-按比例-固定比例100%\n      2. MT4进行登录，然后进行开仓，总手数0.01\n      3. 账号管理-持仓订单-喊单和跟单数据校验\n      4. 跟单管理-开仓日志-喊单和跟单数据校验\n      5. 跟单管理-VPS管理-喊单和跟单数据校验\n      6. MT4进行平仓\n      7.账号管理-持仓订单-喊单和跟单数据校验\n      8.账号管理-历史订单-喊单和跟单数据校验\n      9.跟单管理-开仓日志-喊单和跟单数据校验\n      10.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ", "steps": [{"name": "发生登录请求", "status": "passed", "steps": [{"name": "第1次尝试", "status": "passed", "attachments": [{"name": "请求URL", "source": "c6d12cb7-b580-449e-8a19-8eedc295ae21-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "dc062258-2700-402d-a060-32f50df02b22-attachment.json", "type": "application/json"}, {"name": "响应内容", "source": "2b521cd7-47c7-4f42-9293-a076346f81cc-attachment.txt", "type": "text/plain"}], "start": 1758859086423, "stop": 1758859104068}], "start": 1758859086423, "stop": 1758859104068}, {"name": "发送开仓请求", "status": "passed", "attachments": [{"name": "请求URL", "source": "9b2c1ceb-666a-4b3c-ab03-1b110afe3612-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "43d62b62-8b83-44c4-a1c9-6c892206459d-attachment.json", "type": "application/json"}, {"name": "响应内容", "source": "b77bb2a9-4094-431a-83de-baf13f5e8758-attachment.json", "type": "application/json"}], "start": 1758859104068, "stop": 1758859105624}, {"name": "1. 查询数据库验证是否新增成功", "status": "failed", "statusDetails": {"message": "Failed: 数据库查询结果为空，无法提取数据\n", "trace": "  File \"D:\\pycharm_test\\template\\public_function\\proportion_public.py\", line 347, in test_dbquery_openorder\n    pytest.fail(\"数据库查询结果为空，无法提取数据\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "执行数据库查询", "status": "passed", "steps": [{"name": "数据库查询结果", "status": "passed", "attachments": [{"name": "查询结果（共0条，显示前50条）", "source": "403b169b-f08c-4d5f-97c3-3803e1e31890-attachment.json", "type": "application/json"}], "start": 1758859105694, "stop": 1758859105694}], "attachments": [{"name": "执行SQL", "source": "e0074309-78ac-486a-ba14-74d297c97820-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "c20ead46-1ea6-4aba-96bb-78eb3d6ecc08-attachment.txt", "type": "text/plain"}], "start": 1758859105624, "stop": 1758859105695}], "start": 1758859105624, "stop": 1758859105695}], "attachments": [{"name": "log", "source": "20dcc229-2209-4036-be1c-78809f50a9f9-attachment.txt", "type": "text/plain"}], "start": 1758859086423, "stop": 1758859105696, "uuid": "3a5bc2fb-d77d-44bf-b428-62e4494c7032", "historyId": "b6acfebac026bec042c01b24298ec215", "testCaseId": "b6acfebac026bec042c01b24298ec215", "fullName": "test_cloudTrader.test_oac_proportion.Test_orderseng1#test_run_mt4open", "labels": [{"name": "story", "value": "场景1：跟随方式-按比例-固定比例100%"}, {"name": "feature", "value": "跟随方式-按比例"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_oac_proportion"}, {"name": "subSuite", "value": "Test_proportionall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "35132-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_oac_proportion"}]}