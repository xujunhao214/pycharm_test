{"name": "跟单管理-VPS管理-喊单者账号-开仓后", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'", "trace": "self = <template.test_cloudTrader.test_oac_equit.Test_openandclouseall.Test_orderseng4 object at 0x000001F114E6C670>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001F114E58640>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001F114E53280>\n\n    @pytest.mark.retry(n=3, delay=20)\n    @allure.title(\"跟单管理-VPS管理-喊单者账号-开仓后\")\n    def test_query_opentrader_getRecordList(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            trader_account = var_manager.get_variable(\"trader_account\")\n            vpsrunIpAddr = var_manager.get_variable(\"vpsrunIpAddr\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"pageNo\": \"1\",\n                \"pageSize\": \"50\",\n                \"accountLike\": trader_account,\n                \"serverNameLike\": \"\",\n                \"connectTraderLike\": \"\",\n                \"connected\": \"\",\n                \"runIpAddr\": vpsrunIpAddr\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/blockchain/account/getRecordList',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.searchCount\",\n                True,\n                \"响应searchCount字段应为true\"\n            )\n    \n        with allure.step(f\"3. 数据校验\"):\n            with allure.step(\"喊单者手数校验-MT4开仓手数和持仓订单手数\"):\n                totalLots = self.json_utils.extract(response.json(), \"$.records[0].totalLots\")\n                logging.info(f\"手数是: {totalLots}\")\n    \n                lots_open = var_manager.get_variable(\"lots_open\")\n    \n                self.verify_data(\n>                   actual_value=float(totalLots),\n                    expected_value=float(lots_open),\n                    op=CompareOp.EQ,\n                    message=f\"手数符合预期\",\n                    attachment_name=\"手数详情\"\n                )\nE               TypeError: float() argument must be a string or a number, not 'NoneType'\n\ntest_cloudTrader\\test_oac_equit.py:4210: TypeError"}, "description": "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ", "steps": [{"name": "1. 发送请求", "status": "passed", "steps": [{"name": "执行 GET 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "6b62f495-0127-42ad-9649-18e42c04ff36-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "4037420b-3d6c-4861-a302-148ff1cfb7b3-attachment.json", "type": "application/json"}, {"name": "请求体（表单/文件）", "source": "ed8e166e-4d02-477b-98ed-82d618486732-attachment.txt", "type": "text/plain"}], "start": 1758249998263, "stop": 1758249998264}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "70c9d3e1-44b6-4ec3-b07a-7ee9abaca6d3-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "901fbed1-358e-4ca9-bc67-903326be0fa3-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "f95b1b07-3873-4fb6-8450-7309cf361ebe-attachment.json", "type": "application/json"}], "start": 1758249998810, "stop": 1758249998811}], "start": 1758249998263, "stop": 1758250001815}], "start": 1758249998263, "stop": 1758250001815}, {"name": "2. 返回校验", "status": "passed", "steps": [{"name": "断言JSON路径: $.searchCount", "status": "passed", "attachments": [{"name": "请求URL", "source": "371f00dd-3653-4fa9-9672-0fa98a651c6f-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "dbe62400-328e-4a26-8472-051952c090d9-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "f390f454-5694-4b6d-bedd-db84b284551b-attachment.txt", "type": "text/plain"}], "start": 1758250001819, "stop": 1758250001820}], "start": 1758250001815, "stop": 1758250001821}, {"name": "3. 数据校验", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 4210, in test_query_opentrader_getRecordList\n    actual_value=float(totalLots),\n"}, "steps": [{"name": "喊单者手数校验-MT4开仓手数和持仓订单手数", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'\n", "trace": "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_equit.py\", line 4210, in test_query_opentrader_getRecordList\n    actual_value=float(totalLots),\n"}, "start": 1758250001821, "stop": 1758250001825}], "start": 1758250001821, "stop": 1758250001825}], "attachments": [{"name": "log", "source": "88fac663-4009-40dd-9831-6c7f74ef60e7-attachment.txt", "type": "text/plain"}], "start": 1758249998263, "stop": 1758250001825, "uuid": "f4c8e142-861d-42cb-9a29-84f63f222e1b", "historyId": "c19e5d6d648a251b75574a3506444bbf", "testCaseId": "c19e5d6d648a251b75574a3506444bbf", "fullName": "test_cloudTrader.test_oac_equit.Test_orderseng4#test_query_opentrader_getRecordList", "labels": [{"name": "story", "value": "场景4：跟随方式-按净值-100%-跟单方向反向"}, {"name": "feature", "value": "跟随方式-按净值"}, {"name": "tag", "value": "retry(n=3, delay=20)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_oac_equit"}, {"name": "subSuite", "value": "Test_openandclouseall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "17284-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_oac_equit"}]}