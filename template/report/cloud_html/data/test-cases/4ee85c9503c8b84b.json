{
  "uid" : "4ee85c9503c8b84b",
  "name" : "跟单管理-VPS管理-喊单者账号-开仓后",
  "fullName" : "test_cloudTrader.test_oac_proportion.Test_orderseng3#test_query_opentrader_getRecordList",
  "historyId" : "7b3e93e3ebbb101580b7eeb91445e856",
  "time" : {
    "start" : 1758504458164,
    "stop" : 1758504461780,
    "duration" : 3616
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确,手数最低是0.01\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n  1. MT4进行登录，然后进行开仓，总手数0.01\n  2. 账号管理-持仓订单-喊单和跟单数据校验\n  3. 跟单管理-开仓日志-喊单和跟单数据校验\n  4. 跟单管理-VPS管理-喊单和跟单数据校验\n  5. MT4进行平仓\n  6.账号管理-持仓订单-喊单和跟单数据校验\n  7.跟单管理-开仓日志-喊单和跟单数据校验\n  8.跟单管理-VPS管理-喊单和跟单数据校验\n- 预期结果：喊单和跟单数据校验正确,手数最低是0.01\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'",
  "statusTrace" : "self = <template.test_cloudTrader.test_oac_proportion.Test_openandclouseall.Test_orderseng3 object at 0x0000025C42B546D0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x0000025C42B47400>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x0000025C42ABD940>\n\n    @pytest.mark.retry(n=3, delay=20)\n    @allure.title(\"跟单管理-VPS管理-喊单者账号-开仓后\")\n    def test_query_opentrader_getRecordList(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            trader_account = var_manager.get_variable(\"trader_account\")\n            vpsrunIpAddr = var_manager.get_variable(\"vpsrunIpAddr\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"pageNo\": \"1\",\n                \"pageSize\": \"50\",\n                \"accountLike\": trader_account,\n                \"serverNameLike\": \"\",\n                \"connectTraderLike\": \"\",\n                \"connected\": \"\",\n                \"runIpAddr\": vpsrunIpAddr\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/blockchain/account/getRecordList',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.searchCount\",\n                True,\n                \"响应searchCount字段应为true\"\n            )\n    \n        with allure.step(f\"3. 数据校验\"):\n            with allure.step(\"喊单者手数校验-MT4开仓手数和持仓订单手数\"):\n                totalLots = self.json_utils.extract(response.json(), \"$.records[0].totalLots\")\n                logging.info(f\"手数是: {totalLots}\")\n    \n                lots_open = var_manager.get_variable(\"lots_open\")\n    \n                self.verify_data(\n>                   actual_value=float(totalLots),\n                    expected_value=float(lots_open),\n                    op=CompareOp.EQ,\n                    message=f\"手数符合预期\",\n                    attachment_name=\"手数详情\"\n                )\nE               TypeError: float() argument must be a string or a number, not 'NoneType'\n\ntest_cloudTrader\\test_oac_proportion.py:2901: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确,手数最低是0.01\n    ",
    "status" : "broken",
    "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'",
    "statusTrace" : "self = <template.test_cloudTrader.test_oac_proportion.Test_openandclouseall.Test_orderseng3 object at 0x0000025C42B546D0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x0000025C42B47400>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x0000025C42ABD940>\n\n    @pytest.mark.retry(n=3, delay=20)\n    @allure.title(\"跟单管理-VPS管理-喊单者账号-开仓后\")\n    def test_query_opentrader_getRecordList(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            trader_account = var_manager.get_variable(\"trader_account\")\n            vpsrunIpAddr = var_manager.get_variable(\"vpsrunIpAddr\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"pageNo\": \"1\",\n                \"pageSize\": \"50\",\n                \"accountLike\": trader_account,\n                \"serverNameLike\": \"\",\n                \"connectTraderLike\": \"\",\n                \"connected\": \"\",\n                \"runIpAddr\": vpsrunIpAddr\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/blockchain/account/getRecordList',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.searchCount\",\n                True,\n                \"响应searchCount字段应为true\"\n            )\n    \n        with allure.step(f\"3. 数据校验\"):\n            with allure.step(\"喊单者手数校验-MT4开仓手数和持仓订单手数\"):\n                totalLots = self.json_utils.extract(response.json(), \"$.records[0].totalLots\")\n                logging.info(f\"手数是: {totalLots}\")\n    \n                lots_open = var_manager.get_variable(\"lots_open\")\n    \n                self.verify_data(\n>                   actual_value=float(totalLots),\n                    expected_value=float(lots_open),\n                    op=CompareOp.EQ,\n                    message=f\"手数符合预期\",\n                    attachment_name=\"手数详情\"\n                )\nE               TypeError: float() argument must be a string or a number, not 'NoneType'\n\ntest_cloudTrader\\test_oac_proportion.py:2901: TypeError",
    "steps" : [ {
      "name" : "1. 发送请求",
      "time" : {
        "start" : 1758504458164,
        "stop" : 1758504461770,
        "duration" : 3606
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "执行 GET 请求",
        "time" : {
          "start" : 1758504458164,
          "stop" : 1758504461770,
          "duration" : 3606
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "请求详情",
          "time" : {
            "start" : 1758504458164,
            "stop" : 1758504458166,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "e0217aca567f651d",
            "name" : "请求URL",
            "source" : "e0217aca567f651d.txt",
            "type" : "text/plain",
            "size" : 33
          }, {
            "uid" : "370ec7858a40d635",
            "name" : "请求头",
            "source" : "370ec7858a40d635.json",
            "type" : "application/json",
            "size" : 429
          }, {
            "uid" : "90170ce3f24f2631",
            "name" : "请求体（表单/文件）",
            "source" : "90170ce3f24f2631.txt",
            "type" : "text/plain",
            "size" : 173
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "响应详情",
          "time" : {
            "start" : 1758504458762,
            "stop" : 1758504458764,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "76fc1c0af829b5de",
            "name" : "响应状态码",
            "source" : "76fc1c0af829b5de.txt",
            "type" : "text/plain",
            "size" : 3
          }, {
            "uid" : "91ca549a0bd6e824",
            "name" : "响应头",
            "source" : "91ca549a0bd6e824.json",
            "type" : "application/json",
            "size" : 460
          }, {
            "uid" : "72dce5c20e355396",
            "name" : "响应体（JSON）",
            "source" : "72dce5c20e355396.json",
            "type" : "application/json",
            "size" : 183
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "hasContent" : true,
        "attachmentsCount" : 6,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "hasContent" : true,
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 返回校验",
      "time" : {
        "start" : 1758504461770,
        "stop" : 1758504461775,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "断言JSON路径: $.searchCount",
        "time" : {
          "start" : 1758504461774,
          "stop" : 1758504461775,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "24189c90e9145255",
          "name" : "请求URL",
          "source" : "24189c90e9145255.txt",
          "type" : "text/plain",
          "size" : 191
        }, {
          "uid" : "5ef63c60b126fb8a",
          "name" : "预期值",
          "source" : "5ef63c60b126fb8a.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "1d9219663f38386f",
          "name" : "实际值",
          "source" : "1d9219663f38386f.txt",
          "type" : "text/plain",
          "size" : 15
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false
    }, {
      "name" : "3. 数据校验",
      "time" : {
        "start" : 1758504461775,
        "stop" : 1758504461780,
        "duration" : 5
      },
      "status" : "broken",
      "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_proportion.py\", line 2901, in test_query_opentrader_getRecordList\n    actual_value=float(totalLots),\n",
      "steps" : [ {
        "name" : "喊单者手数校验-MT4开仓手数和持仓订单手数",
        "time" : {
          "start" : 1758504461775,
          "stop" : 1758504461779,
          "duration" : 4
        },
        "status" : "broken",
        "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'\n",
        "statusTrace" : "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_proportion.py\", line 2901, in test_query_opentrader_getRecordList\n    actual_value=float(totalLots),\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "91ef696f8f0c2459",
      "name" : "log",
      "source" : "91ef696f8f0c2459.txt",
      "type" : "text/plain",
      "size" : 633
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "hasContent" : true,
    "attachmentsCount" : 10,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "场景3：跟随方式-按比例-固定比例25%"
  }, {
    "name" : "feature",
    "value" : "跟随方式-按比例"
  }, {
    "name" : "tag",
    "value" : "retry(n=3, delay=20)"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_oac_proportion"
  }, {
    "name" : "subSuite",
    "value" : "Test_openandclouseall"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "4044-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_oac_proportion"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "retry(n=3, delay=20)" ]
  },
  "source" : "4ee85c9503c8b84b.json",
  "parameterValues" : [ ]
}