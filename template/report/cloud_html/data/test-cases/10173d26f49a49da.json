{
  "uid" : "10173d26f49a49da",
  "name" : "任务中心-MT4绑定审核-提取数据2",
  "fullName" : "test_cloudTrader.test_create.Test_trader#test_api_getData0",
  "historyId" : "183f2c77153af6fada891c5bf3c281f7",
  "time" : {
    "start" : 1757411276491,
    "stop" : 1757411280110,
    "duration" : 3619
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 未找MT4审核[301388315]的ID！\n  当前返回的MT4审核列表：[]\n  请检查：1. 账号是否正确； 2. 是否在当前分页（pageSize=50）\nassert None is not None",
  "statusTrace" : "self = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x000001D375C02A90>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001D375B1D970>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001D375B1DC10>\n\n    @allure.title(\"任务中心-MT4绑定审核-提取数据2\")\n    def test_api_getData0(self, var_manager, logged_session):\n        account = var_manager.get_variable(\"trader_account\")\n        with allure.step(\"1. 发送请求\"):\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"column\": \"id\",\n                \"order\": \"desc\",\n                \"pageNo\": 1,\n                \"pageSize\": 20,\n                \"superQueryMatchType\": \"and\",\n                \"status\": \"PENDING,VERIFICATION\"\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/online/cgform/api/getData/2c9a814a81d3a91b0181d3a91b250000',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.success\",\n                True,\n                \"响应success字段应为true\"\n            )\n    \n        with allure.step(\"3. 提取数据\"):\n            all_pass_account = self.json_utils.extract(\n                data=response.json(),\n                expression=\"$.result.records[*]\",\n                multi_match=True,\n                default=[]\n            )\n            trader_pass_id = None\n            existing_account = [account.get(\"account\") for account in all_pass_account if account.get(\"account\")]\n    \n            for trader_pass in all_pass_account:\n                current_server = trader_pass.get(\"account\")\n                if current_server == account:\n                    trader_pass_id = trader_pass.get(\"id\")\n                    break\n    \n>           assert trader_pass_id is not None, (\n                f\"未找MT4审核[{account}]的ID！\"\n                f\"\\n当前返回的MT4审核列表：{existing_account}\"\n                f\"\\n请检查：1. 账号是否正确； 2. 是否在当前分页（pageSize=50）\"\n            )\nE           AssertionError: 未找MT4审核[301388315]的ID！\nE             当前返回的MT4审核列表：[]\nE             请检查：1. 账号是否正确； 2. 是否在当前分页（pageSize=50）\nE           assert None is not None\n\ntest_cloudTrader\\test_create.py:321: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1757411210739,
      "stop" : 1757411210740,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1757411210739,
      "stop" : 1757411210739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1757411210739,
      "stop" : 1757411210739,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1757411211203,
      "stop" : 1757411211203,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1757411211203,
      "stop" : 1757411258155,
      "duration" : 46952
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 未找MT4审核[301388315]的ID！\n  当前返回的MT4审核列表：[]\n  请检查：1. 账号是否正确； 2. 是否在当前分页（pageSize=50）\nassert None is not None",
    "statusTrace" : "self = <template.test_cloudTrader.test_create.Test_create.Test_trader object at 0x000001D375C02A90>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001D375B1D970>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001D375B1DC10>\n\n    @allure.title(\"任务中心-MT4绑定审核-提取数据2\")\n    def test_api_getData0(self, var_manager, logged_session):\n        account = var_manager.get_variable(\"trader_account\")\n        with allure.step(\"1. 发送请求\"):\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"column\": \"id\",\n                \"order\": \"desc\",\n                \"pageNo\": 1,\n                \"pageSize\": 20,\n                \"superQueryMatchType\": \"and\",\n                \"status\": \"PENDING,VERIFICATION\"\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/online/cgform/api/getData/2c9a814a81d3a91b0181d3a91b250000',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.success\",\n                True,\n                \"响应success字段应为true\"\n            )\n    \n        with allure.step(\"3. 提取数据\"):\n            all_pass_account = self.json_utils.extract(\n                data=response.json(),\n                expression=\"$.result.records[*]\",\n                multi_match=True,\n                default=[]\n            )\n            trader_pass_id = None\n            existing_account = [account.get(\"account\") for account in all_pass_account if account.get(\"account\")]\n    \n            for trader_pass in all_pass_account:\n                current_server = trader_pass.get(\"account\")\n                if current_server == account:\n                    trader_pass_id = trader_pass.get(\"id\")\n                    break\n    \n>           assert trader_pass_id is not None, (\n                f\"未找MT4审核[{account}]的ID！\"\n                f\"\\n当前返回的MT4审核列表：{existing_account}\"\n                f\"\\n请检查：1. 账号是否正确； 2. 是否在当前分页（pageSize=50）\"\n            )\nE           AssertionError: 未找MT4审核[301388315]的ID！\nE             当前返回的MT4审核列表：[]\nE             请检查：1. 账号是否正确； 2. 是否在当前分页（pageSize=50）\nE           assert None is not None\n\ntest_cloudTrader\\test_create.py:321: AssertionError",
    "steps" : [ {
      "name" : "1. 发送请求",
      "time" : {
        "start" : 1757411276491,
        "stop" : 1757411280101,
        "duration" : 3610
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "执行 GET 请求",
        "time" : {
          "start" : 1757411276491,
          "stop" : 1757411280101,
          "duration" : 3610
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "请求详情",
          "time" : {
            "start" : 1757411276491,
            "stop" : 1757411276492,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "626f4a72ac0b2c0e",
            "name" : "请求URL",
            "source" : "626f4a72ac0b2c0e.txt",
            "type" : "text/plain",
            "size" : 59
          }, {
            "uid" : "8ea23fd284e9f896",
            "name" : "请求头",
            "source" : "8ea23fd284e9f896.json",
            "type" : "application/json",
            "size" : 429
          }, {
            "uid" : "5cbc92b2762a7a86",
            "name" : "请求体（表单/文件）",
            "source" : "5cbc92b2762a7a86.txt",
            "type" : "text/plain",
            "size" : 144
          } ],
          "parameters" : [ ],
          "hasContent" : true,
          "stepsCount" : 0,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "响应详情",
          "time" : {
            "start" : 1757411277095,
            "stop" : 1757411277097,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "1dd6d6ace71faa3a",
            "name" : "响应状态码",
            "source" : "1dd6d6ace71faa3a.txt",
            "type" : "text/plain",
            "size" : 3
          }, {
            "uid" : "9e55dd3a43621c13",
            "name" : "响应头",
            "source" : "9e55dd3a43621c13.json",
            "type" : "application/json",
            "size" : 460
          }, {
            "uid" : "73f82949c975def3",
            "name" : "响应体（JSON）",
            "source" : "73f82949c975def3.json",
            "type" : "application/json",
            "size" : 134
          } ],
          "parameters" : [ ],
          "hasContent" : true,
          "stepsCount" : 0,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 2,
        "attachmentsCount" : 6,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 3,
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 返回校验",
      "time" : {
        "start" : 1757411280101,
        "stop" : 1757411280105,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "断言JSON路径: $.success",
        "time" : {
          "start" : 1757411280104,
          "stop" : 1757411280105,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "8cc603638e5f18c7",
          "name" : "请求URL",
          "source" : "8cc603638e5f18c7.txt",
          "type" : "text/plain",
          "size" : 200
        }, {
          "uid" : "cd9bcadc0a20f37f",
          "name" : "预期值",
          "source" : "cd9bcadc0a20f37f.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "86cd8ddcc1c66dd2",
          "name" : "实际值",
          "source" : "86cd8ddcc1c66dd2.txt",
          "type" : "text/plain",
          "size" : 15
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 1,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false
    }, {
      "name" : "3. 提取数据",
      "time" : {
        "start" : 1757411280105,
        "stop" : 1757411280109,
        "duration" : 4
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 未找MT4审核[301388315]的ID！\n  当前返回的MT4审核列表：[]\n  请检查：1. 账号是否正确； 2. 是否在当前分页（pageSize=50）\nassert None is not None\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_create.py\", line 321, in test_api_getData0\n    assert trader_pass_id is not None, (\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "f0b5dd9a869ebb02",
      "name" : "log",
      "source" : "f0b5dd9a869ebb02.txt",
      "type" : "text/plain",
      "size" : 298
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 7,
    "attachmentsCount" : 10,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1757411344401,
      "stop" : 1757411344402,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1757411344400,
      "stop" : 1757411344400,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1757411344400,
      "stop" : 1757411344400,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "创建交易员账号"
  }, {
    "name" : "feature",
    "value" : "账号管理"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "Test_create"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "23392-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "10173d26f49a49da.json",
  "parameterValues" : [ ]
}