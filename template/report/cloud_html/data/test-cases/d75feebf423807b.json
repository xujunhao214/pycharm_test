{
  "uid" : "d75feebf423807b",
  "name" : "账号管理-持仓订单-跟单账号ID查询-开仓前",
  "fullName" : "test_cloudTrader.test_oac_proportion.Test_orderseng2#test_query_follow_passid",
  "historyId" : "d90dee5555a07974a5383931f1053d27",
  "time" : {
    "start" : 1758511368586,
    "stop" : 1758511372217,
    "duration" : 3631
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.2\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n  1. MT4进行登录，然后进行开仓，总手数0.2\n  2. 账号管理-持仓订单-喊单和跟单数据校验\n  3. 跟单管理-开仓日志-喊单和跟单数据校验\n  4. 跟单管理-VPS管理-喊单和跟单数据校验\n  5. MT4进行平仓\n  6.账号管理-持仓订单-喊单和跟单数据校验\n  7.跟单管理-开仓日志-喊单和跟单数据校验\n  8.跟单管理-VPS管理-喊单和跟单数据校验\n- 预期结果：喊单和跟单数据校验正确\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 断言失败：实际值 '[{'order_no': 86403102, 'magic': 0, 'symbol': 'EURNZD', 'trader_id': '1969961978502778881', 'margin': 15032.42, 'swap': 0.0, 'owning_account': '301390787', 'open_time': '2025-09-22 05:48:31', 'owning_userid': '1962808746181640193', 'type': 0, 'close_price': 2.00258, 'jeecg_row_key': '1969964149858357250', 'size': 8.0, 'sl': 0.0, 'master_order_no': '', 'commission': 0.0, 'comment': '', 'id': '1969964149858357250', 'open_price': 2.00325, 'tp': 0.0, 'profit': -314.03, 'slip_point': 0.0, 'market_account_id': ''}]' 不是空列表",
  "statusTrace" : "self = <template.test_cloudTrader.test_oac_proportion.Test_openandclouseall.Test_orderseng2 object at 0x000002367A9934F0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000002367A99B940>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000002367A9116A0>\n\n    @allure.title(\"账号管理-持仓订单-跟单账号ID查询-开仓前\")\n    def test_query_follow_passid(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            follow_pass_id = var_manager.get_variable(\"follow_pass_id\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"trader_id\": follow_pass_id,\n                \"column\": \"id\",\n                \"order\": \"desc\",\n                \"pageNo\": 1,\n                \"pageSize\": 50,\n                \"superQueryMatchType\": \"and\"\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/online/cgform/api/getData/402883977b38c9ca017b38c9caff0000',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.success\",\n                True,\n                \"响应success字段应为true\"\n            )\n    \n        with allure.step(f\"3. 查询校验\"):\n>           self.json_utils.assert_empty_list(\n                data=response.json(),\n                expression=\"$.result.records\"\n            )\n\ntest_cloudTrader\\test_oac_proportion.py:1321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <template.commons.jsonpath_utils.JsonPathUtils object at 0x000002367A922D30>\ndata = {'code': 0, 'message': '', 'result': {'records': [{'close_price': 2.00258, 'comment': '', 'commission': 0.0, 'id': '1969964149858357250', ...}], 'total': 1}, 'success': True, ...}\nexpression = '$.result.records'\n\n    def assert_empty_list(self, data: dict, expression: str) -> None:\n        actual = self.extract(data, expression)\n>       assert isinstance(actual, list) and len(actual) == 0, \\\n            f\"断言失败：实际值 '{actual}' 不是空列表\"\nE       AssertionError: 断言失败：实际值 '[{'order_no': 86403102, 'magic': 0, 'symbol': 'EURNZD', 'trader_id': '1969961978502778881', 'margin': 15032.42, 'swap': 0.0, 'owning_account': '301390787', 'open_time': '2025-09-22 05:48:31', 'owning_userid': '1962808746181640193', 'type': 0, 'close_price': 2.00258, 'jeecg_row_key': '1969964149858357250', 'size': 8.0, 'sl': 0.0, 'master_order_no': '', 'commission': 0.0, 'comment': '', 'id': '1969964149858357250', 'open_price': 2.00325, 'tp': 0.0, 'profit': -314.03, 'slip_point': 0.0, 'market_account_id': ''}]' 不是空列表\n\ncommons\\jsonpath_utils.py:53: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.2\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 断言失败：实际值 '[{'order_no': 86403102, 'magic': 0, 'symbol': 'EURNZD', 'trader_id': '1969961978502778881', 'margin': 15032.42, 'swap': 0.0, 'owning_account': '301390787', 'open_time': '2025-09-22 05:48:31', 'owning_userid': '1962808746181640193', 'type': 0, 'close_price': 2.00258, 'jeecg_row_key': '1969964149858357250', 'size': 8.0, 'sl': 0.0, 'master_order_no': '', 'commission': 0.0, 'comment': '', 'id': '1969964149858357250', 'open_price': 2.00325, 'tp': 0.0, 'profit': -314.03, 'slip_point': 0.0, 'market_account_id': ''}]' 不是空列表",
    "statusTrace" : "self = <template.test_cloudTrader.test_oac_proportion.Test_openandclouseall.Test_orderseng2 object at 0x000002367A9934F0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000002367A99B940>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000002367A9116A0>\n\n    @allure.title(\"账号管理-持仓订单-跟单账号ID查询-开仓前\")\n    def test_query_follow_passid(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            follow_pass_id = var_manager.get_variable(\"follow_pass_id\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"trader_id\": follow_pass_id,\n                \"column\": \"id\",\n                \"order\": \"desc\",\n                \"pageNo\": 1,\n                \"pageSize\": 50,\n                \"superQueryMatchType\": \"and\"\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/online/cgform/api/getData/402883977b38c9ca017b38c9caff0000',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.success\",\n                True,\n                \"响应success字段应为true\"\n            )\n    \n        with allure.step(f\"3. 查询校验\"):\n>           self.json_utils.assert_empty_list(\n                data=response.json(),\n                expression=\"$.result.records\"\n            )\n\ntest_cloudTrader\\test_oac_proportion.py:1321: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <template.commons.jsonpath_utils.JsonPathUtils object at 0x000002367A922D30>\ndata = {'code': 0, 'message': '', 'result': {'records': [{'close_price': 2.00258, 'comment': '', 'commission': 0.0, 'id': '1969964149858357250', ...}], 'total': 1}, 'success': True, ...}\nexpression = '$.result.records'\n\n    def assert_empty_list(self, data: dict, expression: str) -> None:\n        actual = self.extract(data, expression)\n>       assert isinstance(actual, list) and len(actual) == 0, \\\n            f\"断言失败：实际值 '{actual}' 不是空列表\"\nE       AssertionError: 断言失败：实际值 '[{'order_no': 86403102, 'magic': 0, 'symbol': 'EURNZD', 'trader_id': '1969961978502778881', 'margin': 15032.42, 'swap': 0.0, 'owning_account': '301390787', 'open_time': '2025-09-22 05:48:31', 'owning_userid': '1962808746181640193', 'type': 0, 'close_price': 2.00258, 'jeecg_row_key': '1969964149858357250', 'size': 8.0, 'sl': 0.0, 'master_order_no': '', 'commission': 0.0, 'comment': '', 'id': '1969964149858357250', 'open_price': 2.00325, 'tp': 0.0, 'profit': -314.03, 'slip_point': 0.0, 'market_account_id': ''}]' 不是空列表\n\ncommons\\jsonpath_utils.py:53: AssertionError",
    "steps" : [ {
      "name" : "1. 发送请求",
      "time" : {
        "start" : 1758511368586,
        "stop" : 1758511372203,
        "duration" : 3617
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "执行 GET 请求",
        "time" : {
          "start" : 1758511368586,
          "stop" : 1758511372203,
          "duration" : 3617
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "请求详情",
          "time" : {
            "start" : 1758511368586,
            "stop" : 1758511368587,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "e084de9465916d42",
            "name" : "请求URL",
            "source" : "e084de9465916d42.txt",
            "type" : "text/plain",
            "size" : 59
          }, {
            "uid" : "71663ac2d8e6f7ab",
            "name" : "请求头",
            "source" : "71663ac2d8e6f7ab.json",
            "type" : "application/json",
            "size" : 429
          }, {
            "uid" : "f388873edca6069b",
            "name" : "请求体（表单/文件）",
            "source" : "f388873edca6069b.txt",
            "type" : "text/plain",
            "size" : 146
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "响应详情",
          "time" : {
            "start" : 1758511369199,
            "stop" : 1758511369201,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "86bffe89c4399ddc",
            "name" : "响应状态码",
            "source" : "86bffe89c4399ddc.txt",
            "type" : "text/plain",
            "size" : 3
          }, {
            "uid" : "b6eb5f3276f28545",
            "name" : "响应头",
            "source" : "b6eb5f3276f28545.json",
            "type" : "application/json",
            "size" : 460
          }, {
            "uid" : "3964ee7ce3940063",
            "name" : "响应体（JSON）",
            "source" : "3964ee7ce3940063.json",
            "type" : "application/json",
            "size" : 850
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 6
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 6
    }, {
      "name" : "2. 返回校验",
      "time" : {
        "start" : 1758511372203,
        "stop" : 1758511372213,
        "duration" : 10
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "断言JSON路径: $.success",
        "time" : {
          "start" : 1758511372212,
          "stop" : 1758511372213,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "ce9658e6c54f84e",
          "name" : "请求URL",
          "source" : "ce9658e6c54f84e.txt",
          "type" : "text/plain",
          "size" : 200
        }, {
          "uid" : "95b1d3d1d0cb2a2d",
          "name" : "预期值",
          "source" : "95b1d3d1d0cb2a2d.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "15f170e69eff294c",
          "name" : "实际值",
          "source" : "15f170e69eff294c.txt",
          "type" : "text/plain",
          "size" : 15
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3
    }, {
      "name" : "3. 查询校验",
      "time" : {
        "start" : 1758511372213,
        "stop" : 1758511372217,
        "duration" : 4
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 断言失败：实际值 '[{'order_no': 86403102, 'magic': 0, 'symbol': 'EURNZD', 'trader_id': '1969961978502778881', 'margin': 15032.42, 'swap': 0.0, 'owning_account': '301390787', 'open_time': '2025-09-22 05:48:31', 'owning_userid': '1962808746181640193', 'type': 0, 'close_price': 2.00258, 'jeecg_row_key': '1969964149858357250', 'size': 8.0, 'sl': 0.0, 'master_order_no': '', 'commission': 0.0, 'comment': '', 'id': '1969964149858357250', 'open_price': 2.00325, 'tp': 0.0, 'profit': -314.03, 'slip_point': 0.0, 'market_account_id': ''}]' 不是空列表\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_oac_proportion.py\", line 1321, in test_query_follow_passid\n    self.json_utils.assert_empty_list(\n  File \"D:\\pycharm_test\\template\\commons\\jsonpath_utils.py\", line 53, in assert_empty_list\n    assert isinstance(actual, list) and len(actual) == 0, \\\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "126e7ef40c2a7c63",
      "name" : "log",
      "source" : "126e7ef40c2a7c63.txt",
      "type" : "text/plain",
      "size" : 1167
    } ],
    "parameters" : [ ],
    "stepsCount" : 7,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 10
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "场景2：跟随方式-按比例-固定比例50%"
  }, {
    "name" : "feature",
    "value" : "跟随方式-按比例"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_oac_proportion"
  }, {
    "name" : "subSuite",
    "value" : "Test_openandclouseall"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "27592-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_oac_proportion"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "d75feebf423807b.json",
  "parameterValues" : [ ]
}