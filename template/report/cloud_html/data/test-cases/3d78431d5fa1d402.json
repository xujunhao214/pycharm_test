{
  "uid" : "3d78431d5fa1d402",
  "name" : "跟单账号ID查询-开仓后",
  "fullName" : "test_cloudTrader.test_openandclose.Test_orderseng#test_query_openfollow_passid",
  "historyId" : "cb15ef5295904b63d41cbdb1393c5da7",
  "time" : {
    "start" : 1758017418124,
    "stop" : 1758017421765,
    "duration" : 3641
  },
  "status" : "broken",
  "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'",
  "statusTrace" : "self = <template.test_cloudTrader.test_openandclose.Test_openandclouseall.Test_orderseng object at 0x000001D2BE1CCEB0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001D2BE1DBB50>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001D2BE1CCE50>\n\n    @allure.title(\"跟单账号ID查询-开仓后\")\n    def test_query_openfollow_passid(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            follow_pass_id = var_manager.get_variable(\"follow_pass_id\")\n            follow_account = var_manager.get_variable(\"follow_account\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"trader_id\": follow_pass_id,\n                \"column\": \"id\",\n                \"order\": \"desc\",\n                \"pageNo\": 1,\n                \"pageSize\": 50,\n                \"superQueryMatchType\": \"and\"\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/online/cgform/api/getData/402883977b38c9ca017b38c9caff0000',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.success\",\n                True,\n                \"响应success字段应为true\"\n            )\n    \n        with allure.step(\"3. 提取数据\"):\n            order_no = self.json_utils.extract(response.json(), \"$.result.records[0].order_no\")\n            var_manager.set_runtime_variable(\"order_no\", order_no)\n            allure.attach(f\"{order_no}\", \"跟单订单号\", allure.attachment_type.TEXT)\n    \n        with allure.step(f\"3. 查询校验\"):\n            trader_id_list = self.json_utils.extract(\n                response.json(),\n                \"$.result.records[0].trader_id\",\n                default=[],\n                multi_match=True\n            )\n    \n            if not trader_id_list:\n                attach_body = f\"账号ID查询[{follow_account}]，返回的trader_id列表为空（暂无数据）\"\n            else:\n                attach_body = f\"账号ID查询[{follow_account}]，返回 {len(trader_id_list)} 条记录，trader_id值如下：\\n\" + \\\n                              \"\\n\".join([f\"第 {idx + 1} 条：{s}\" for idx, s in enumerate(trader_id_list)])\n    \n            allure.attach(\n                body=attach_body,\n                name=f\"账号ID:{follow_account}查询结果\",\n                attachment_type=\"text/plain\"\n            )\n    \n            for idx, trader_id in enumerate(trader_id_list):\n                self.verify_data(\n                    actual_value=int(trader_id),\n                    expected_value=int(follow_pass_id),\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"第 {idx + 1} 条记录的账号ID应为{trader_id}\",\n                    attachment_name=f\"账号ID:{follow_pass_id}第 {idx + 1} 条记录校验\"\n                )\n    \n            with allure.step(\"喊单者订单号校验\"):\n                master_order_no = self.json_utils.extract(response.json(), \"$.result.records[0].master_order_no\")\n                ticket_open = var_manager.get_variable(\"ticket_open\")\n    \n                self.verify_data(\n                    actual_value=master_order_no,\n                    expected_value=ticket_open,\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"订单号数据正确\",\n                    attachment_name=\"订单号详情\"\n                )\n                logger.info(f\"订单号数据正确,开仓订单号：{ticket_open} 喊单者订单号：{master_order_no}\")\n    \n            with allure.step(\"跟单订单号校验\"):\n                slave_ticket = var_manager.get_variable(\"slave_ticket\")\n                self.verify_data(\n                    actual_value=slave_ticket,\n                    expected_value=order_no,\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"订单号数据正确\",\n                    attachment_name=\"订单号详情\"\n                )\n                logger.info(f\"订单号数据正确,跟单者订单号：{order_no} 数据库数据：{slave_ticket}\")\n    \n            with allure.step(\"手数校验-订阅关系是按比例1:1\"):\n                add_size = self.json_utils.extract(response.json(), \"$.result.records[0].size\")\n                order_size = var_manager.get_variable(\"order_size\")\n    \n                self.verify_data(\n                    actual_value=float(add_size),\n>                   expected_value=float(order_size),\n                    op=CompareOp.EQ,\n                    message=f\"手数符合预期\",\n                    attachment_name=\"手数详情\"\n                )\nE               TypeError: float() argument must be a string or a number, not 'NoneType'\n\ntest_cloudTrader\\test_openandclose.py:385: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "environment",
    "time" : {
      "start" : 1758017394208,
      "stop" : 1758017394208,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1758017394208,
      "stop" : 1758017394208,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1758017394208,
      "stop" : 1758017394208,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1758017394209,
      "stop" : 1758017395790,
      "duration" : 1581
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1758017394208,
      "stop" : 1758017394209,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'",
    "statusTrace" : "self = <template.test_cloudTrader.test_openandclose.Test_openandclouseall.Test_orderseng object at 0x000001D2BE1CCEB0>\nvar_manager = <template.commons.variable_manager.VariableManager object at 0x000001D2BE1DBB50>\nlogged_session = <template.commons.session.EnvironmentSession object at 0x000001D2BE1CCE50>\n\n    @allure.title(\"跟单账号ID查询-开仓后\")\n    def test_query_openfollow_passid(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            follow_pass_id = var_manager.get_variable(\"follow_pass_id\")\n            follow_account = var_manager.get_variable(\"follow_account\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"trader_id\": follow_pass_id,\n                \"column\": \"id\",\n                \"order\": \"desc\",\n                \"pageNo\": 1,\n                \"pageSize\": 50,\n                \"superQueryMatchType\": \"and\"\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/online/cgform/api/getData/402883977b38c9ca017b38c9caff0000',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.success\",\n                True,\n                \"响应success字段应为true\"\n            )\n    \n        with allure.step(\"3. 提取数据\"):\n            order_no = self.json_utils.extract(response.json(), \"$.result.records[0].order_no\")\n            var_manager.set_runtime_variable(\"order_no\", order_no)\n            allure.attach(f\"{order_no}\", \"跟单订单号\", allure.attachment_type.TEXT)\n    \n        with allure.step(f\"3. 查询校验\"):\n            trader_id_list = self.json_utils.extract(\n                response.json(),\n                \"$.result.records[0].trader_id\",\n                default=[],\n                multi_match=True\n            )\n    \n            if not trader_id_list:\n                attach_body = f\"账号ID查询[{follow_account}]，返回的trader_id列表为空（暂无数据）\"\n            else:\n                attach_body = f\"账号ID查询[{follow_account}]，返回 {len(trader_id_list)} 条记录，trader_id值如下：\\n\" + \\\n                              \"\\n\".join([f\"第 {idx + 1} 条：{s}\" for idx, s in enumerate(trader_id_list)])\n    \n            allure.attach(\n                body=attach_body,\n                name=f\"账号ID:{follow_account}查询结果\",\n                attachment_type=\"text/plain\"\n            )\n    \n            for idx, trader_id in enumerate(trader_id_list):\n                self.verify_data(\n                    actual_value=int(trader_id),\n                    expected_value=int(follow_pass_id),\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"第 {idx + 1} 条记录的账号ID应为{trader_id}\",\n                    attachment_name=f\"账号ID:{follow_pass_id}第 {idx + 1} 条记录校验\"\n                )\n    \n            with allure.step(\"喊单者订单号校验\"):\n                master_order_no = self.json_utils.extract(response.json(), \"$.result.records[0].master_order_no\")\n                ticket_open = var_manager.get_variable(\"ticket_open\")\n    \n                self.verify_data(\n                    actual_value=master_order_no,\n                    expected_value=ticket_open,\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"订单号数据正确\",\n                    attachment_name=\"订单号详情\"\n                )\n                logger.info(f\"订单号数据正确,开仓订单号：{ticket_open} 喊单者订单号：{master_order_no}\")\n    \n            with allure.step(\"跟单订单号校验\"):\n                slave_ticket = var_manager.get_variable(\"slave_ticket\")\n                self.verify_data(\n                    actual_value=slave_ticket,\n                    expected_value=order_no,\n                    op=CompareOp.EQ,\n                    use_isclose=False,\n                    message=f\"订单号数据正确\",\n                    attachment_name=\"订单号详情\"\n                )\n                logger.info(f\"订单号数据正确,跟单者订单号：{order_no} 数据库数据：{slave_ticket}\")\n    \n            with allure.step(\"手数校验-订阅关系是按比例1:1\"):\n                add_size = self.json_utils.extract(response.json(), \"$.result.records[0].size\")\n                order_size = var_manager.get_variable(\"order_size\")\n    \n                self.verify_data(\n                    actual_value=float(add_size),\n>                   expected_value=float(order_size),\n                    op=CompareOp.EQ,\n                    message=f\"手数符合预期\",\n                    attachment_name=\"手数详情\"\n                )\nE               TypeError: float() argument must be a string or a number, not 'NoneType'\n\ntest_cloudTrader\\test_openandclose.py:385: TypeError",
    "steps" : [ {
      "name" : "1. 发送请求",
      "time" : {
        "start" : 1758017418125,
        "stop" : 1758017421711,
        "duration" : 3586
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "执行 GET 请求",
        "time" : {
          "start" : 1758017418125,
          "stop" : 1758017421711,
          "duration" : 3586
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "请求详情",
          "time" : {
            "start" : 1758017418125,
            "stop" : 1758017418126,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "13fc0642f0e91a2d",
            "name" : "请求URL",
            "source" : "13fc0642f0e91a2d.txt",
            "type" : "text/plain",
            "size" : 59
          }, {
            "uid" : "f60dbe4b9b34a85b",
            "name" : "请求头",
            "source" : "f60dbe4b9b34a85b.json",
            "type" : "application/json",
            "size" : 429
          }, {
            "uid" : "f0114f271cf4a030",
            "name" : "请求体（表单/文件）",
            "source" : "f0114f271cf4a030.txt",
            "type" : "text/plain",
            "size" : 146
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "响应详情",
          "time" : {
            "start" : 1758017418708,
            "stop" : 1758017418710,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "7b1821eb1ce2172f",
            "name" : "响应状态码",
            "source" : "7b1821eb1ce2172f.txt",
            "type" : "text/plain",
            "size" : 3
          }, {
            "uid" : "f49872395ce28bbd",
            "name" : "响应头",
            "source" : "f49872395ce28bbd.json",
            "type" : "application/json",
            "size" : 460
          }, {
            "uid" : "136f83429aec1443",
            "name" : "响应体（JSON）",
            "source" : "136f83429aec1443.json",
            "type" : "application/json",
            "size" : 882
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 6
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 6
    }, {
      "name" : "2. 返回校验",
      "time" : {
        "start" : 1758017421711,
        "stop" : 1758017421723,
        "duration" : 12
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "断言JSON路径: $.success",
        "time" : {
          "start" : 1758017421720,
          "stop" : 1758017421723,
          "duration" : 3
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "6ab033ac430bbc03",
          "name" : "请求URL",
          "source" : "6ab033ac430bbc03.txt",
          "type" : "text/plain",
          "size" : 200
        }, {
          "uid" : "20c587a4f7f0071f",
          "name" : "预期值",
          "source" : "20c587a4f7f0071f.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "76bfa1b2115d9c03",
          "name" : "实际值",
          "source" : "76bfa1b2115d9c03.txt",
          "type" : "text/plain",
          "size" : 15
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3
    }, {
      "name" : "3. 提取数据",
      "time" : {
        "start" : 1758017421723,
        "stop" : 1758017421734,
        "duration" : 11
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b38848ec7ea8b620",
        "name" : "跟单订单号",
        "source" : "b38848ec7ea8b620.txt",
        "type" : "text/plain",
        "size" : 8
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "3. 查询校验",
      "time" : {
        "start" : 1758017421734,
        "stop" : 1758017421765,
        "duration" : 31
      },
      "status" : "broken",
      "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_openandclose.py\", line 385, in test_query_openfollow_passid\n    expected_value=float(order_size),\n",
      "steps" : [ {
        "name" : "校验: 第 1 条记录的账号ID应为1967760842374959105",
        "time" : {
          "start" : 1758017421743,
          "stop" : 1758017421744,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "85c6a6df2bc164a7",
          "name" : "账号ID:1967760842374959105第 1 条记录校验",
          "source" : "85c6a6df2bc164a7.attach",
          "type" : "text/plain",
          "size" : 68
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "喊单者订单号校验",
        "time" : {
          "start" : 1758017421744,
          "stop" : 1758017421754,
          "duration" : 10
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单号数据正确",
          "time" : {
            "start" : 1758017421754,
            "stop" : 1758017421754,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "a11f4d052ed1a02f",
            "name" : "订单号详情",
            "source" : "a11f4d052ed1a02f.attach",
            "type" : "text/plain",
            "size" : 46
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "跟单订单号校验",
        "time" : {
          "start" : 1758017421754,
          "stop" : 1758017421755,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单号数据正确",
          "time" : {
            "start" : 1758017421754,
            "stop" : 1758017421755,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "c5926ab82150d6b9",
            "name" : "订单号详情",
            "source" : "c5926ab82150d6b9.attach",
            "type" : "text/plain",
            "size" : 46
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 1
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 1
      }, {
        "name" : "手数校验-订阅关系是按比例1:1",
        "time" : {
          "start" : 1758017421755,
          "stop" : 1758017421764,
          "duration" : 9
        },
        "status" : "broken",
        "statusMessage" : "TypeError: float() argument must be a string or a number, not 'NoneType'\n",
        "statusTrace" : "  File \"D:\\pycharm_test\\template\\test_cloudTrader\\test_openandclose.py\", line 385, in test_query_openfollow_passid\n    expected_value=float(order_size),\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : true,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "924530d52c939a4e",
        "name" : "账号ID:2088767546查询结果",
        "source" : "924530d52c939a4e.attach",
        "type" : "text/plain",
        "size" : 103
      } ],
      "parameters" : [ ],
      "stepsCount" : 6,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    } ],
    "attachments" : [ {
      "uid" : "df534078e8fd2b6c",
      "name" : "log",
      "source" : "df534078e8fd2b6c.txt",
      "type" : "text/plain",
      "size" : 1143
    } ],
    "parameters" : [ ],
    "stepsCount" : 14,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 15
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1758017441633,
      "stop" : 1758017441634,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1758017441632,
      "stop" : 1758017441632,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1758017441633,
      "stop" : 1758017441633,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "账户管理-持仓订单"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_openandclose"
  }, {
    "name" : "subSuite",
    "value" : "Test_openandclouseall"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "39736-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_openandclose"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "3d78431d5fa1d402.json",
  "parameterValues" : [ ]
}