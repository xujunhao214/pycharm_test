{"name": "test_create_user", "status": "broken", "statusDetails": {"message": "ValueError: api_session did not yield a value", "trace": "cls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x000002BD1985C0D0>\nwhen = 'setup'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        \"\"\"Call func, wrapping the result in a CallInfo.\n    \n        :param func:\n            The function to call. Called without arguments.\n        :param when:\n            The phase in which the function is called.\n        :param reraise:\n            Exception or exceptions that shall propagate if raised by the\n            function, instead of being wrapped in the CallInfo.\n        \"\"\"\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n..\\.venv\\lib\\site-packages\\_pytest\\runner.py:341: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\.venv\\lib\\site-packages\\_pytest\\runner.py:262: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n..\\.venv\\lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n..\\.venv\\lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\.venv\\lib\\site-packages\\_pytest\\runner.py:157: in pytest_runtest_setup\n    item.session._setupstate.setup(item)\n..\\.venv\\lib\\site-packages\\_pytest\\runner.py:497: in setup\n    raise exc\n..\\.venv\\lib\\site-packages\\_pytest\\runner.py:494: in setup\n    col.setup()\n..\\.venv\\lib\\site-packages\\_pytest\\python.py:1795: in setup\n    self._request._fillfixtures()\n..\\.venv\\lib\\site-packages\\_pytest\\fixtures.py:566: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\n..\\.venv\\lib\\site-packages\\_pytest\\fixtures.py:585: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n..\\.venv\\lib\\site-packages\\_pytest\\fixtures.py:607: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\n..\\.venv\\lib\\site-packages\\_pytest\\fixtures.py:693: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\n..\\.venv\\lib\\site-packages\\_pytest\\fixtures.py:1069: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n..\\.venv\\lib\\site-packages\\pluggy\\_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n..\\.venv\\lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n..\\.venv\\lib\\site-packages\\_pytest\\fixtures.py:1123: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfixturefunc = <function api_session at 0x000002BD1983B670>\nrequest = <SubRequest 'api_session' for <Function test_create_user>>\nkwargs = {'environment': <Environment.TEST: 'test'>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n>               raise ValueError(f\"{request.fixturename} did not yield a value\") from None\nE               ValueError: api_session did not yield a value\n\n..\\.venv\\lib\\site-packages\\_pytest\\fixtures.py:897: ValueError"}, "description": "测试新增用户接口并验证数据库", "attachments": [{"name": "log", "source": "4c80fc7b-8c7b-48b7-9ced-0cabcac0ce2c-attachment.txt", "type": "text/plain"}], "start": 1750665033337, "stop": 1750665033337, "uuid": "64f1b036-b5c2-429c-a4c7-3a10104413b5", "historyId": "64ffb195f23ef4836e6e046f6553d0c3", "testCaseId": "64ffb195f23ef4836e6e046f6553d0c3", "fullName": "tests.test_api.TestUser#test_create_user", "labels": [{"name": "feature", "value": "账号管理"}, {"name": "story", "value": "账号管理-新增单个用户"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestUser"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "24300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}