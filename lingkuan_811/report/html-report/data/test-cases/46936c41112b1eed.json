{
  "uid" : "46936c41112b1eed",
  "name" : "数据库-获取跟单账号净值",
  "fullName" : "test_vps.test_vps_scene.TestVPSOrderSend_Scence#test_dbvps_addsalve_euqit",
  "historyId" : "083480cb1c680a880c04c0d7f6486697",
  "time" : {
    "start" : 1755071416985,
    "stop" : 1755071417034,
    "duration" : 49
  },
  "status" : "broken",
  "statusMessage" : "pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s' at line 1\")",
  "statusTrace" : "self = <lingkuan_811.test_vps.test_vps_scene.TestVPSOrderSend_Scence object at 0x00000199BB206EE0>\nvar_manager = <lingkuan_811.commons.variable_manager.VariableManager object at 0x00000199BB5EECD0>\ndb_transaction = <pymysql.connections.Connection object at 0x00000199BB1AAD90>\n\n    @allure.title(\"数据库-获取跟单账号净值\")\n    def test_dbvps_addsalve_euqit(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取跟单账号净值\"):\n            vps_addslave_ids_3 = var_manager.get_variable(\"vps_addslave_ids_3\")\n    \n            sql = f\"\"\"\n                    SELECT * FROM follow_trader WHERE id = %s\n                    \"\"\"\n            params = (vps_addslave_ids_3)\n    \n            # 使用智能等待查询\n>           db_data = self.query_database(\n                db_transaction,\n                sql,\n                params,\n            )\n\ntest_vps\\test_vps_scene.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:303: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:563: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:825: in _read_query_result\n    result.read()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:1199: in read\n    first_packet = self.connection._read_packet()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:775: in _read_packet\n    packet.raise_for_error()\n..\\venv\\lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s' at line 1\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s' at line 1\")\n\n..\\venv\\lib\\site-packages\\pymysql\\err.py:150: ProgrammingError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1755071348127,
      "stop" : 1755071348127,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755070740597,
      "stop" : 1755070741006,
      "duration" : 409
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755070736575,
      "stop" : 1755070736575,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1755070740597,
      "stop" : 1755070740597,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755071416938,
      "stop" : 1755071416985,
      "duration" : 47
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s' at line 1\")",
    "statusTrace" : "self = <lingkuan_811.test_vps.test_vps_scene.TestVPSOrderSend_Scence object at 0x00000199BB206EE0>\nvar_manager = <lingkuan_811.commons.variable_manager.VariableManager object at 0x00000199BB5EECD0>\ndb_transaction = <pymysql.connections.Connection object at 0x00000199BB1AAD90>\n\n    @allure.title(\"数据库-获取跟单账号净值\")\n    def test_dbvps_addsalve_euqit(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取跟单账号净值\"):\n            vps_addslave_ids_3 = var_manager.get_variable(\"vps_addslave_ids_3\")\n    \n            sql = f\"\"\"\n                    SELECT * FROM follow_trader WHERE id = %s\n                    \"\"\"\n            params = (vps_addslave_ids_3)\n    \n            # 使用智能等待查询\n>           db_data = self.query_database(\n                db_transaction,\n                sql,\n                params,\n            )\n\ntest_vps\\test_vps_scene.py:194: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:303: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:563: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:825: in _read_query_result\n    result.read()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:1199: in read\n    first_packet = self.connection._read_packet()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:775: in _read_packet\n    packet.raise_for_error()\n..\\venv\\lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff(\\x04#42000You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s' at line 1\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s' at line 1\")\n\n..\\venv\\lib\\site-packages\\pymysql\\err.py:150: ProgrammingError",
    "steps" : [ {
      "name" : "1. 获取跟单账号净值",
      "time" : {
        "start" : 1755071416985,
        "stop" : 1755071417033,
        "duration" : 48
      },
      "status" : "broken",
      "statusMessage" : "pymysql.err.ProgrammingError: (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '%s' at line 1\")\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_811\\test_vps\\test_vps_scene.py\", line 194, in test_dbvps_addsalve_euqit\n    db_data = self.query_database(\n  File \"D:\\pycharm_test\\lingkuan_811\\commons\\api_base.py\", line 303, in query_database\n    cursor.execute(final_sql, params)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 563, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 825, in _read_query_result\n    result.read()\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 1199, in read\n    first_packet = self.connection._read_packet()\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "b9772187071b0e79",
      "name" : "log",
      "source" : "b9772187071b0e79.txt",
      "type" : "text/plain",
      "size" : 1962
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755071873785,
      "stop" : 1755071873786,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755071873791,
      "stop" : 1755071873791,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755071417071,
      "stop" : 1755071417115,
      "duration" : 44
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略下单-跟单修改模式、品种"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend_Scence"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "17448-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "46936c41112b1eed.json",
  "parameterValues" : [ ]
}