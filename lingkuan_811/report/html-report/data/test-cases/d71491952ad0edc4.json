{
  "uid" : "d71491952ad0edc4",
  "name" : "VPS管理-VPS列表-新增vps",
  "fullName" : "test_vps.test_create.TestCreate#test_create_vps",
  "historyId" : "9b1fd60bf56aa19df1e72c89765a0760",
  "time" : {
    "start" : 1755070767170,
    "stop" : 1755070769725,
    "duration" : 2555
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/vps\nJSON路径: $.msg\n实际值: 重复名称或ip地址,请重新输入\n期望值: success",
  "statusTrace" : "self = <lingkuan_811.test_vps.test_create.TestCreate object at 0x00000199BB1EF9A0>\nlogged_session = <lingkuan_811.commons.session.EnvironmentSession object at 0x00000199BB3D8430>\nvar_manager = <lingkuan_811.commons.variable_manager.VariableManager object at 0x00000199BB1AA9D0>\n\n    @allure.title(\"VPS管理-VPS列表-新增vps\")\n    def test_create_vps(self, logged_session, var_manager):\n        # 1. 发送新增vps请求\n        add_VPS = var_manager.get_variable(\"add_VPS\")\n        vps_user_data = var_manager.get_variable(\"vps_user_data\")\n        vps_group_id = var_manager.get_variable(\"vps_group_id\")\n        data = {\n            \"ipAddress\": add_VPS[\"ipAddress\"],\n            \"name\": \"测试\",\n            \"expiryDate\": DATETIME_ENDTIME,\n            \"remark\": \"测试VPS\",\n            \"isOpen\": 1,\n            \"isActive\": 1,\n            \"roleList\": vps_user_data,\n            \"isSelectAccount\": 1,\n            \"isMonitorRepair\": 1,\n            \"isSpecializedRepair\": 1,\n            \"isAutoRepair\": 1,\n            \"groupId\": f\"{vps_group_id}\",\n            \"sort\": 1000\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/mascontrol/vps',\n            json_data=data,\n    \n        )\n    \n        # 2. 判断是否添加成功\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_create.py:357: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_811.test_vps.test_create.TestCreate object at 0x00000199BB1EF9A0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/vps\nE           JSON路径: $.msg\nE           实际值: 重复名称或ip地址,请重新输入\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "environment",
    "time" : {
      "start" : 1755070736575,
      "stop" : 1755070736575,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755070736576,
      "stop" : 1755070736576,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755070766142,
      "stop" : 1755070767170,
      "duration" : 1028
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1755070766142,
      "stop" : 1755070766142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://uat.atcp.top/api/mascontrol/vps\nJSON路径: $.msg\n实际值: 重复名称或ip地址,请重新输入\n期望值: success",
    "statusTrace" : "self = <lingkuan_811.test_vps.test_create.TestCreate object at 0x00000199BB1EF9A0>\nlogged_session = <lingkuan_811.commons.session.EnvironmentSession object at 0x00000199BB3D8430>\nvar_manager = <lingkuan_811.commons.variable_manager.VariableManager object at 0x00000199BB1AA9D0>\n\n    @allure.title(\"VPS管理-VPS列表-新增vps\")\n    def test_create_vps(self, logged_session, var_manager):\n        # 1. 发送新增vps请求\n        add_VPS = var_manager.get_variable(\"add_VPS\")\n        vps_user_data = var_manager.get_variable(\"vps_user_data\")\n        vps_group_id = var_manager.get_variable(\"vps_group_id\")\n        data = {\n            \"ipAddress\": add_VPS[\"ipAddress\"],\n            \"name\": \"测试\",\n            \"expiryDate\": DATETIME_ENDTIME,\n            \"remark\": \"测试VPS\",\n            \"isOpen\": 1,\n            \"isActive\": 1,\n            \"roleList\": vps_user_data,\n            \"isSelectAccount\": 1,\n            \"isMonitorRepair\": 1,\n            \"isSpecializedRepair\": 1,\n            \"isAutoRepair\": 1,\n            \"groupId\": f\"{vps_group_id}\",\n            \"sort\": 1000\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/mascontrol/vps',\n            json_data=data,\n    \n        )\n    \n        # 2. 判断是否添加成功\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_create.py:357: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_811.test_vps.test_create.TestCreate object at 0x00000199BB1EF9A0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://uat.atcp.top/api/mascontrol/vps\nE           JSON路径: $.msg\nE           实际值: 重复名称或ip地址,请重新输入\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
    "steps" : [ {
      "name" : "发送POST请求到 /mascontrol/vps",
      "time" : {
        "start" : 1755070767170,
        "stop" : 1755070769721,
        "duration" : 2551
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "2f53551d06c1c5f",
        "name" : "请求JSON数据",
        "source" : "2f53551d06c1c5f.json",
        "type" : "application/json",
        "size" : 358
      }, {
        "uid" : "4b552baed475d986",
        "name" : "请求URL",
        "source" : "4b552baed475d986.txt",
        "type" : "text/plain",
        "size" : 15
      }, {
        "uid" : "e9d6266b24b0e6cb",
        "name" : "响应结果",
        "source" : "e9d6266b24b0e6cb.txt",
        "type" : "text/plain",
        "size" : 95
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3
    } ],
    "attachments" : [ {
      "uid" : "1658346c4a95869e",
      "name" : "log",
      "source" : "1658346c4a95869e.txt",
      "type" : "text/plain",
      "size" : 2634
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 4
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755071873792,
      "stop" : 1755071873793,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755070769844,
      "stop" : 1755070769844,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755070769845,
      "stop" : 1755070769845,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "数据管理-创建数据-为VPS测试准备"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "17448-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d71491952ad0edc4.json",
  "parameterValues" : [ ]
}