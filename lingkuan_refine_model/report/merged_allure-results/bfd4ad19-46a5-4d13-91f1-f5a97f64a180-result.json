{"name": "跟单软件看板-VPS数据-策略平仓-平仓一个", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300151暂无可平仓订单\n期望值: success", "trace": "self = <lingkuan_refine_model.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609850>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DFD471C880>\nlogged_session = <lingkuan_refine_model.commons.session.EnvironmentSession object at 0x000001DFD4AD1CD0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-策略平仓-平仓一个\")\n    def test_trader_orderclose1(self, var_manager, logged_session):\n        with allure.step(\"1. 发送全平订单平仓请求\"):\n            # 1. 发送全平订单平仓请求\n            vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n            new_user = var_manager.get_variable(\"new_user\")\n            data = {\n                \"flag\": 0,\n                \"intervalTime\": 0,\n                \"num\": \"1\",\n                \"closeType\": 2,\n                \"remark\": \"\",\n                \"symbol\": new_user[\"symbol\"],\n                \"type\": 0,\n                \"traderId\": vps_trader_id,\n                \"account\": new_user[\"account\"]\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/subcontrol/trader/orderClose',\n                json_data=data,\n            )\n        with allure.step(\"2. 验证响应\"):\n            # 2. 验证响应\n            self.assert_response_status(\n                response,\n                200,\n                \"平仓失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_vps\\test_vps_orderclose.py:324: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_refine_model.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609850>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            # 处理列表结果（如果只有一个元素则取单个值）\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nE           JSON路径: $.msg\nE           实际值: 300151暂无可平仓订单\nE           期望值: success\n\n..\\lingkuan_817\\commons\\api_base.py:342: AssertionError"}, "description": "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 操作步骤：\n  1. 进行开仓，开仓订单数量控制为两个\n  2. 进行平仓，平仓一个\n  3. 进行平仓，平仓一个\n  4. 进行平仓，平仓一个，平仓失败，没有可平订单\n- 预期结果：平仓的订单数量功能正确\n", "steps": [{"name": "1. 发送全平订单平仓请求", "status": "passed", "steps": [{"name": "发送 POST 请求到 /subcontrol/trader/orderClose", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "a3a657c3-7771-415d-b5c3-9f4129111f99-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "31eafdf1-290e-4368-8922-85f5972c3a94-attachment.json", "type": "application/json"}, {"name": "请求体（JSON）", "source": "2ef50e33-d3b1-4faf-9e2a-1534e8598572-attachment.json", "type": "application/json"}], "start": 1755512472297, "stop": 1755512472298}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "bf21d403-6aca-4e47-9ae0-c1f4054cad31-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "e3640fdd-ed16-426a-8a9e-2c07a1c240e9-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "0a347cb9-5528-4405-bf54-89dcc2a6a942-attachment.json", "type": "application/json"}], "start": 1755512472638, "stop": 1755512472639}], "start": 1755512472297, "stop": 1755512473644}], "start": 1755512472297, "stop": 1755512473644}, {"name": "2. 验证响应", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300151暂无可平仓订单\n期望值: success\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_refine_model\\test_vps\\test_vps_orderclose.py\", line 324, in test_trader_orderclose1\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_817\\commons\\api_base.py\", line 342, in assert_json_value\n    assert actual_value == expected_value, (\n"}, "start": 1755512473644, "stop": 1755512473648}], "attachments": [{"name": "log", "source": "585c629b-38a5-4034-a3b4-f1dfd3931f67-attachment.txt", "type": "text/plain"}], "start": 1755512472297, "stop": 1755512473648, "uuid": "bca9cbc8-7c98-4473-804c-79ebde4c9f20", "historyId": "ce422c21594e561889c35125ff4b1626", "testCaseId": "ce422c21594e561889c35125ff4b1626", "fullName": "test_vps.test_vps_orderclose.TestVPSOrderSend2#test_trader_orderclose1", "labels": [{"name": "tag", "value": "url('vps')"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_vps_orderclose"}, {"name": "subSuite", "value": "TestVPSOrderSend2"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "6824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_vps_orderclose"}]}