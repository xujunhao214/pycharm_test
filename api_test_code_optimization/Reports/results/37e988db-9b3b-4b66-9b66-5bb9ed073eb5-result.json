{"name": "登录", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/auth/login", "trace": "@allure.epic(\"客服后台-全部订单-查询校验\")\n    @allure.title(\"登录\")\n    def test_auth_login():\n        global token_auth, ak\n    \n        # 初始化API工具类\n        ak = ApiKey(logger)\n    \n        # 准备请求数据\n        body = {\n            \"userName\": config[\"USERNAME\"],\n            \"password\": config[\"PASSWD\"]\n        }\n    \n        timestamp = get_current_timestamp()\n        sign_str = generate_sign(\n            config[\"app_key\"],\n            config[\"TOKEN_WEIXIU\"],\n            config[\"platform\"],\n            timestamp,\n            body,\n            config[\"secret\"]\n        )\n    \n        headers = {\n            \"Authorization\": config[\"TOKEN_WEIXIU\"],\n            \"AppKey\": config[\"app_key\"],\n            \"Platform\": config[\"platform\"],\n            \"Timestamp\": timestamp,\n            \"Sign\": sign_str,\n            \"Content-Type\": \"application/json\",\n            \"city\": \"0755\"\n        }\n    \n        with allure.step(\"1. 客服管理后台登录\"):\n            url = config[\"PROJCET_URL\"] + \"/support/auth/login\"\n>           r1 = ak.post(url=url, json=body, headers=headers)\n\ntestcases\\test_customer_orders.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\api_key.py:62: in post\n    response.raise_for_status()  # 自动检查HTTP状态码\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [500]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/auth/login\n\nD:\\python_tools\\python\\lib\\site-packages\\requests\\models.py:943: HTTPError"}, "steps": [{"name": "1. 客服管理后台登录", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/auth/login\n", "trace": "  File \"D:\\pycharm_test\\api_test_code_optimization\\testcases\\test_customer_orders.py\", line 60, in test_auth_login\n    r1 = ak.post(url=url, json=body, headers=headers)\n  File \"D:\\python_tools\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"D:\\pycharm_test\\api_test_code_optimization\\common\\api_key.py\", line 62, in post\n    response.raise_for_status()  # 自动检查HTTP状态码\n  File \"D:\\python_tools\\python\\lib\\site-packages\\requests\\models.py\", line 943, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n"}, "steps": [{"name": "发送POST请求", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/auth/login\n", "trace": "  File \"D:\\python_tools\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"D:\\pycharm_test\\api_test_code_optimization\\common\\api_key.py\", line 62, in post\n    response.raise_for_status()  # 自动检查HTTP状态码\n  File \"D:\\python_tools\\python\\lib\\site-packages\\requests\\models.py\", line 943, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n"}, "attachments": [{"name": "请求异常", "source": "e66a7a60-cbd6-41f2-8bcf-62001cd21bf3-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'https://api-c.ebk365.com:26887/b/support/auth/login'"}, {"name": "headers", "value": "{'Authorization': 'eyJhbGciOiJIUzM4NCJ9.eyJyYW5kb21LZXkiOiJmYWI0MTJlMS0wYjk3LTRmMmMtOGM3Ni02MzAzNzk5NDQ4ZTkiLCJyZXBhaXJlcklkIjo2LCJleHBpcmVUaW1lIjoxNzIwNzc3MDA1MDUyLCJsb2dpblRpbWUiOjE3MTgxODUwMDUwNTIsIm5pY2tuYW1lIjoi5rWL6K-VODE4MyIsImlhdCI6MTcxODE4NTAwNX0.zMV9Pgp6roZaMc_p_7w3dxDF1xEHpInXR6Bl4WeAzqOQKcEhiXOotuhgFaKsMj2T', 'AppKey': 'apiFox', 'Platform': 'apiFox', 'Timestamp': '1749117689985', 'Sign': 'e872229684b03e2c00a565cff97209a8', 'Content-Type': 'application/json', 'city': '0755'}"}, {"name": "data", "value": "None"}, {"name": "json", "value": "{'userName': 'ebike', 'password': 'c33367701511b4f6020ec61ded352059'}"}], "start": 1749117689985, "stop": 1749117690289}], "start": 1749117689985, "stop": 1749117690290}], "attachments": [{"name": "log", "source": "75c58b95-fec8-41d0-8c77-fcb969a7ad13-attachment.txt", "type": "text/plain"}], "start": 1749117689985, "stop": 1749117690291, "uuid": "ee523b89-5256-4898-8455-c7a5f5a58e18", "historyId": "ec9b9d08d6a1e7bd497c681ed1732107", "testCaseId": "ec9b9d08d6a1e7bd497c681ed1732107", "fullName": "testcases.test_customer_orders#test_auth_login", "labels": [{"name": "epic", "value": "客服后台-全部订单-查询校验"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_customer_orders"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "20476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_customer_orders"}]}