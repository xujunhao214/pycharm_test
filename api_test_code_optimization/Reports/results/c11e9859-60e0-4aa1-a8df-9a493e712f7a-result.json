{"name": "全部订单", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/order/order-list", "trace": "@allure.epic(\"客服后台-全部订单-查询校验\")\n    @allure.title(\"全部订单\")\n    def test_order_list():\n        global reOrderId, shopName, maintainerId\n    \n        # 获取今日时间范围\n        start_time, end_time = get_today_start_end_timestamp()\n    \n        body = {\n            \"shopName\": \"\",\n            \"status\": \"\",\n            \"faultName\": \"\",\n            \"phone\": \"\",\n            \"orderId\": \"\",\n            \"time\": [],\n            \"startTime\": start_time,\n            \"endTime\": end_time,\n            \"maintainerId\": \"\",\n            \"page\": 1,\n            \"limit\": 20\n        }\n    \n        timestamp = get_current_timestamp()\n        sign_str = generate_sign(\n            config[\"app_key\"],\n            token_auth,\n            config[\"platform\"],\n            timestamp,\n            body,\n            config[\"secret\"]\n        )\n    \n        headers = {\n            \"Authorization\": token_auth,\n            \"AppKey\": config[\"app_key\"],\n            \"Platform\": config[\"platform\"],\n            \"Timestamp\": timestamp,\n            \"Sign\": sign_str,\n            \"Content-Type\": \"application/json\",\n            \"city\": \"0755\"\n        }\n    \n        with allure.step(\"1. 全部订单的全部列表数据展示\"):\n            url = config[\"PROJCET_URL\"] + \"/support/order/order-list\"\n>           r1 = ak.post(url=url, json=body, headers=headers)\n\ntestcases\\test_customer_orders.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\api_key.py:62: in post\n    response.raise_for_status()  # 自动检查HTTP状态码\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Response [500]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = ''\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode('utf-8')\n            except UnicodeDecodeError:\n                reason = self.reason.decode('iso-8859-1')\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = u'%s Client Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = u'%s Server Error: %s for url: %s' % (self.status_code, reason, self.url)\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/order/order-list\n\nD:\\python_tools\\python\\lib\\site-packages\\requests\\models.py:943: HTTPError"}, "steps": [{"name": "1. 全部订单的全部列表数据展示", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/order/order-list\n", "trace": "  File \"D:\\pycharm_test\\api_test_code_optimization\\testcases\\test_customer_orders.py\", line 115, in test_order_list\n    r1 = ak.post(url=url, json=body, headers=headers)\n  File \"D:\\python_tools\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"D:\\pycharm_test\\api_test_code_optimization\\common\\api_key.py\", line 62, in post\n    response.raise_for_status()  # 自动检查HTTP状态码\n  File \"D:\\python_tools\\python\\lib\\site-packages\\requests\\models.py\", line 943, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n"}, "steps": [{"name": "发送POST请求", "status": "broken", "statusDetails": {"message": "requests.exceptions.HTTPError: 500 Server Error:  for url: https://api-c.ebk365.com:26887/b/support/order/order-list\n", "trace": "  File \"D:\\python_tools\\python\\lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"D:\\pycharm_test\\api_test_code_optimization\\common\\api_key.py\", line 62, in post\n    response.raise_for_status()  # 自动检查HTTP状态码\n  File \"D:\\python_tools\\python\\lib\\site-packages\\requests\\models.py\", line 943, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n"}, "attachments": [{"name": "请求异常", "source": "cf55267b-b0e2-47c5-b3cb-9eee1cb57f32-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'https://api-c.ebk365.com:26887/b/support/order/order-list'"}, {"name": "headers", "value": "{'Authorization': None, 'AppKey': 'apiFox', 'Platform': 'apiFox', 'Timestamp': '1749117690389', 'Sign': '8899cbc46fee4fbf85165b3303b81245', 'Content-Type': 'application/json', 'city': '0755'}"}, {"name": "data", "value": "None"}, {"name": "json", "value": "{'shopName': '', 'status': '', 'faultName': '', 'phone': '', 'orderId': '', 'time': [], 'startTime': 1749052800000, 'endTime': 1749139199000, 'maintainerId': '', 'page': 1, 'limit': 20}"}], "start": 1749117690389, "stop": 1749117690425}], "start": 1749117690389, "stop": 1749117690426}], "attachments": [{"name": "log", "source": "9d31acf0-98ba-45fa-b0b6-5fcde437e3cf-attachment.txt", "type": "text/plain"}], "start": 1749117690389, "stop": 1749117690426, "uuid": "33677c6b-443b-401c-b4f5-ce73ad4edc66", "historyId": "ab567675fe499c9ad3456701facdb00f", "testCaseId": "ab567675fe499c9ad3456701facdb00f", "fullName": "testcases.test_customer_orders#test_order_list", "labels": [{"name": "epic", "value": "客服后台-全部订单-查询校验"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_customer_orders"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "20476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_customer_orders"}]}