{
  "uid" : "6bd258edd0d8415f",
  "name" : "数据库校验-复制下单数据",
  "fullName" : "test_cloudTrader.test_cloudOrderSend2.TestMasOrderSend2#test_copy_verify_db",
  "historyId" : "85ee8c6ca462c1ca254107d8a5937de8",
  "time" : {
    "start" : 1756430762370,
    "stop" : 1756430769785,
    "duration" : 7415
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n      2. 校验权重，优先满足手数范围，然后是总手数\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：权重正确，优先满足手数范围，然后是总手数\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有云策略和云跟单\n  1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n  2. 校验权重，优先满足手数范围，然后是总手数\n  3. 进行平仓\n  4. 校验账号的数据是否正确\n- 预期结果：权重正确，优先满足手数范围，然后是总手数\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.7\n操作: ==\n预期: 5",
  "statusTrace" : "self = <lingkuan_828.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x0000012EF60E37F0>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000012EF64A3E20>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF6442E50>\n\n    @pytest.mark.retry(n=3, delay=5)\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情手数\"):\n                size = [record[\"size\"] for record in db_data]\n                for i in size:\n                    self.verify_data(\n                        actual_value=float(i),\n                        expected_value=0.3,\n                        op=CompareOp.GT,\n                        message=\"实际手数符合预期\",\n                        attachment_name=\"实际手数\"\n                    )\n                logging.info(f\"实际手数: {size}\")\n    \n            with allure.step(\"验证订单数量\"):\n                total_orders = db_data[0][\"total_orders\"]\n                self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=total_orders,\n                    op=CompareOp.NE,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n                logging.info(f\"实际订单数量: {len(db_data)}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend2.py:417: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x0000012EF60E37F0>\nactual_value = 5.7, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 5.7\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1756430761944,
      "stop" : 1756430762369,
      "duration" : 425
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756430762369,
      "stop" : 1756430762369,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.3-1，总订单数量1，总手数5\n      2. 校验权重，优先满足手数范围，然后是总手数\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：权重正确，优先满足手数范围，然后是总手数\n    ",
    "status" : "failed",
    "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.7\n操作: ==\n预期: 5",
    "statusTrace" : "self = <lingkuan_828.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x0000012EF60E37F0>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000012EF64A3E20>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF6442E50>\n\n    @pytest.mark.retry(n=3, delay=5)\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情手数\"):\n                size = [record[\"size\"] for record in db_data]\n                for i in size:\n                    self.verify_data(\n                        actual_value=float(i),\n                        expected_value=0.3,\n                        op=CompareOp.GT,\n                        message=\"实际手数符合预期\",\n                        attachment_name=\"实际手数\"\n                    )\n                logging.info(f\"实际手数: {size}\")\n    \n            with allure.step(\"验证订单数量\"):\n                total_orders = db_data[0][\"total_orders\"]\n                self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=total_orders,\n                    op=CompareOp.NE,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n                logging.info(f\"实际订单数量: {len(db_data)}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend2.py:417: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloudOrderSend2.TestCloudStrategyOrder.TestMasOrderSend2 object at 0x0000012EF60E37F0>\nactual_value = 5.7, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 5.7\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed",
    "steps" : [ {
      "name" : "查询复制订单详情数据",
      "time" : {
        "start" : 1756430762370,
        "stop" : 1756430769774,
        "duration" : 7404
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（时区+05:00，超时30秒）",
        "time" : {
          "start" : 1756430762370,
          "stop" : 1756430769774,
          "duration" : 7404
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756430762417,
            "stop" : 1756430763457,
            "duration" : 1040
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756430762417,
              "stop" : 1756430763457,
              "duration" : 1040
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "9c9c1cb86475a4a6",
              "name" : "执行SQL",
              "source" : "9c9c1cb86475a4a6.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "5aa3e0d0f23327ec",
              "name" : "SQL参数",
              "source" : "5aa3e0d0f23327ec.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false
          } ],
          "attachments" : [ {
            "uid" : "2723feee36a54ecc",
            "name" : "时区处理",
            "source" : "2723feee36a54ecc.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "轮询中（已等待1.1秒）",
          "time" : {
            "start" : 1756430763457,
            "stop" : 1756430763457,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b0a3c7e949965c0d",
            "name" : "当前状态",
            "source" : "b0a3c7e949965c0d.txt",
            "type" : "text/plain",
            "size" : 16
          }, {
            "uid" : "e1395ad00921ff02",
            "name" : "超时倒计时",
            "source" : "e1395ad00921ff02.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756430763457,
            "stop" : 1756430763458,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "da19699026fd22d3",
            "name" : "判断结果",
            "source" : "da19699026fd22d3.txt",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "数据发生变化",
          "time" : {
            "start" : 1756430763458,
            "stop" : 1756430763458,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "c1bddd5dff2e5863",
            "name" : "状态说明",
            "source" : "c1bddd5dff2e5863.txt",
            "type" : "text/plain",
            "size" : 24
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756430765513,
            "stop" : 1756430766557,
            "duration" : 1044
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756430765514,
              "stop" : 1756430766556,
              "duration" : 1042
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "60f67e8b3cbb7c26",
              "name" : "执行SQL",
              "source" : "60f67e8b3cbb7c26.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "b3915ebba48f9555",
              "name" : "SQL参数",
              "source" : "b3915ebba48f9555.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false
          } ],
          "attachments" : [ {
            "uid" : "7eb52df96f9b48ef",
            "name" : "时区处理",
            "source" : "7eb52df96f9b48ef.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "轮询中（已等待4.2秒）",
          "time" : {
            "start" : 1756430766557,
            "stop" : 1756430766558,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "54bc55f188b04efe",
            "name" : "当前状态",
            "source" : "54bc55f188b04efe.txt",
            "type" : "text/plain",
            "size" : 16
          }, {
            "uid" : "879264345c811b09",
            "name" : "超时倒计时",
            "source" : "879264345c811b09.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756430766558,
            "stop" : 1756430766558,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "9a49b43b114e49d4",
            "name" : "判断结果",
            "source" : "9a49b43b114e49d4.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "数据首次稳定",
          "time" : {
            "start" : 1756430766558,
            "stop" : 1756430766558,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "52c8a280c723d917",
            "name" : "状态说明",
            "source" : "52c8a280c723d917.txt",
            "type" : "text/plain",
            "size" : 40
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "带时区转换查询（目标时区: +05:00）",
          "time" : {
            "start" : 1756430768618,
            "stop" : 1756430769771,
            "duration" : 1153
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756430768619,
              "stop" : 1756430769771,
              "duration" : 1152
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "4a11f26f45dd8f20",
              "name" : "执行SQL",
              "source" : "4a11f26f45dd8f20.txt",
              "type" : "text/plain",
              "size" : 1134
            }, {
              "uid" : "ec090b559ab452e2",
              "name" : "SQL参数",
              "source" : "ec090b559ab452e2.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false
          } ],
          "attachments" : [ {
            "uid" : "b3b8831720e14893",
            "name" : "时区处理",
            "source" : "b3b8831720e14893.txt",
            "type" : "text/plain",
            "size" : 50
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "轮询中（已等待7.4秒）",
          "time" : {
            "start" : 1756430769771,
            "stop" : 1756430769772,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "e011711a28f72410",
            "name" : "当前状态",
            "source" : "e011711a28f72410.txt",
            "type" : "text/plain",
            "size" : 16
          }, {
            "uid" : "c175917c5516cfed",
            "name" : "超时倒计时",
            "source" : "c175917c5516cfed.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756430769772,
            "stop" : 1756430769772,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "7b246a3bfd6508e",
            "name" : "判断结果",
            "source" : "7b246a3bfd6508e.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "数据稳定达标",
          "time" : {
            "start" : 1756430769772,
            "stop" : 1756430769773,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "87b12fc11b1234ab",
            "name" : "结果说明",
            "source" : "87b12fc11b1234ab.txt",
            "type" : "text/plain",
            "size" : 34
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "带时区查询最终结果",
          "time" : {
            "start" : 1756430769773,
            "stop" : 1756430769774,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "d0021a5d47620fa2",
            "name" : "结果预览",
            "source" : "d0021a5d47620fa2.json",
            "type" : "application/json",
            "size" : 3998
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ {
          "uid" : "1a92b982818d68f1",
          "name" : "执行SQL",
          "source" : "1a92b982818d68f1.txt",
          "type" : "text/plain",
          "size" : 990
        }, {
          "uid" : "b93dd52233a6f6f",
          "name" : "SQL参数",
          "source" : "b93dd52233a6f6f.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "8c67874da110c884",
          "name" : "时区偏移量（小时）",
          "source" : "8c67874da110c884.txt",
          "type" : "text/plain",
          "size" : 1
        } ],
        "parameters" : [ ],
        "stepsCount" : 16,
        "hasContent" : true,
        "attachmentsCount" : 25,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "hasContent" : true,
      "attachmentsCount" : 25,
      "shouldDisplayMessage" : false
    }, {
      "name" : "执行复制下单数据校验",
      "time" : {
        "start" : 1756430769774,
        "stop" : 1756430769784,
        "duration" : 10
      },
      "status" : "failed",
      "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.7\n操作: ==\n预期: 5\n\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderSend2.py\", line 417, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ {
        "name" : "验证订单状态",
        "time" : {
          "start" : 1756430769774,
          "stop" : 1756430769775,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单状态应为0或1",
          "time" : {
            "start" : 1756430769774,
            "stop" : 1756430769775,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "5bd838033895b0f9",
            "name" : "订单状态详情",
            "source" : "5bd838033895b0f9.attach",
            "type" : "text/plain",
            "size" : 37
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false
      }, {
        "name" : "验证详情手数",
        "time" : {
          "start" : 1756430769775,
          "stop" : 1756430769782,
          "duration" : 7
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769775,
            "stop" : 1756430769776,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b041bb499cc04e3d",
            "name" : "实际手数",
            "source" : "b041bb499cc04e3d.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769776,
            "stop" : 1756430769777,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "48b48ccc7e464586",
            "name" : "实际手数",
            "source" : "48b48ccc7e464586.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769777,
            "stop" : 1756430769778,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "85c744cc4ff88910",
            "name" : "实际手数",
            "source" : "85c744cc4ff88910.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769778,
            "stop" : 1756430769778,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "94d9a815951c08a8",
            "name" : "实际手数",
            "source" : "94d9a815951c08a8.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769778,
            "stop" : 1756430769779,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "2fed7e0d35331c6b",
            "name" : "实际手数",
            "source" : "2fed7e0d35331c6b.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769779,
            "stop" : 1756430769779,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "bcc55afd3ccd1c29",
            "name" : "实际手数",
            "source" : "bcc55afd3ccd1c29.attach",
            "type" : "text/plain",
            "size" : 35
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769779,
            "stop" : 1756430769780,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "8c6a414537ca993e",
            "name" : "实际手数",
            "source" : "8c6a414537ca993e.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769780,
            "stop" : 1756430769781,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b016293b14a5f361",
            "name" : "实际手数",
            "source" : "b016293b14a5f361.attach",
            "type" : "text/plain",
            "size" : 35
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769781,
            "stop" : 1756430769781,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "4327190b3b64e58f",
            "name" : "实际手数",
            "source" : "4327190b3b64e58f.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "校验: 实际手数符合预期",
          "time" : {
            "start" : 1756430769781,
            "stop" : 1756430769782,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "6ec65d95293e2421",
            "name" : "实际手数",
            "source" : "6ec65d95293e2421.attach",
            "type" : "text/plain",
            "size" : 35
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 10,
        "hasContent" : true,
        "attachmentsCount" : 10,
        "shouldDisplayMessage" : false
      }, {
        "name" : "验证订单数量",
        "time" : {
          "start" : 1756430769782,
          "stop" : 1756430769783,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "校验: 订单数量符合预期",
          "time" : {
            "start" : 1756430769782,
            "stop" : 1756430769783,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "b8ea61f532ce96d2",
            "name" : "订单数量",
            "source" : "b8ea61f532ce96d2.attach",
            "type" : "text/plain",
            "size" : 33
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false
      }, {
        "name" : "验证详情总手数",
        "time" : {
          "start" : 1756430769783,
          "stop" : 1756430769784,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.7\n操作: ==\n预期: 5\n\n",
        "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderSend2.py\", line 417, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
        "steps" : [ {
          "name" : "校验: 详情总手数符合预期",
          "time" : {
            "start" : 1756430769783,
            "stop" : 1756430769783,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "Failed: 校验失败: 详情总手数符合预期\n\n实际: 5.7\n操作: ==\n预期: 5\n\n",
          "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "2b3a79465e8a2233",
            "name" : "详情总手数",
            "source" : "2b3a79465e8a2233.attach",
            "type" : "text/plain",
            "size" : 34
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "hasContent" : true,
      "attachmentsCount" : 13,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "422a0b6081af5265",
      "name" : "log",
      "source" : "422a0b6081af5265.txt",
      "type" : "text/plain",
      "size" : 32255
    } ],
    "parameters" : [ ],
    "stepsCount" : 36,
    "hasContent" : true,
    "attachmentsCount" : 39,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1756430769815,
      "stop" : 1756430769815,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756430769814,
      "stop" : 1756430769814,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略复制下单-开仓的场景校验2"
  }, {
    "name" : "story",
    "value" : "场景2：复制下单-手数范围0.3-1，总订单数量1，总手数5"
  }, {
    "name" : "tag",
    "value" : "retry(n=3, delay=5)"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudOrderSend2"
  }, {
    "name" : "subSuite",
    "value" : "TestCloudStrategyOrder"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "21760-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudOrderSend2"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "retry(n=3, delay=5)" ]
  },
  "source" : "6bd258edd0d8415f.json",
  "parameterValues" : [ ]
}