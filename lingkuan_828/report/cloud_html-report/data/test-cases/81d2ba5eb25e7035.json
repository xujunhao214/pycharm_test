{
  "uid" : "81d2ba5eb25e7035",
  "name" : "数据库校验-云跟单账号策略平仓-跟单账号固定手数",
  "fullName" : "test_cloudTrader.test_cloudtrader_money_scene.Testcloudtrader_Scence#test_dbclose_followParam5",
  "historyId" : "9ef4356d56d09b96a7c662ee33532db5",
  "time" : {
    "start" : 1756437679030,
    "stop" : 1756437685875,
    "duration" : 6845
  },
  "description" : "\n    ### 用例说明\n    - 前置条件：有云策略和云跟单\n    - 操作步骤：\n      1. 有三个账号，分别修改三个账号：固定手数 品种 净值比例\n      2. 进行开仓\n      3. 判断三个账号的手数是否正确\n      4. 进行平仓\n      5. 判断三个账号的手数是否正确\n    - 预期结果：三个账号的手数正确\n    ",
  "descriptionHtml" : "<pre><code>### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 有三个账号，分别修改三个账号：固定手数 品种 净值比例\n  2. 进行开仓\n  3. 判断三个账号的手数是否正确\n  4. 进行平仓\n  5. 判断三个账号的手数是否正确\n- 预期结果：三个账号的手数正确\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 5.0\n操作: ==\n预期: 3.0",
  "statusTrace" : "self = <lingkuan_828.test_cloudTrader.test_cloudtrader_money_scene.Testcloudtrader_moneyandscene.Testcloudtrader_Scence object at 0x0000019F21336E20>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000019F21480940>\ndb_transaction = <pymysql.connections.Connection object at 0x0000019F21432E20>\n\n    @allure.title(\"数据库校验-云跟单账号策略平仓-跟单账号固定手数\")\n    def test_dbclose_followParam5(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情表账号数据\"):\n            cloudTrader_user_accounts_5 = var_manager.get_variable(\"cloudTrader_user_accounts_5\")\n            sql = f\"\"\"\n                    SELECT\n                        fod.size,\n                        fod.close_no,\n                        fod.order_no,\n                        foi.true_total_lots,\n                        foi.order_no,\n                        foi.operation_type,\n                        foi.create_time,\n                        foi.status\n                    FROM\n                        follow_order_detail fod\n                    INNER JOIN\n                        follow_order_instruct foi\n                    ON\n                        foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                    WHERE foi.operation_type=%s\n                        AND fod.account = %s\n                        \"\"\"\n            params = (\n                '1',\n                cloudTrader_user_accounts_5,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=float(3),\n                    op=CompareOp.EQ,\n                    message=\"详情总手数应符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudtrader_money_scene.py:964: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloudtrader_money_scene.Testcloudtrader_moneyandscene.Testcloudtrader_Scence object at 0x0000019F21336E20>\nactual_value = 5.0, expected_value = 3.0, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数应符合预期', attachment_name = '详情总手数'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数应符合预期\nE               \nE               实际: 5.0\nE               操作: ==\nE               预期: 3.0\n\ncommons\\api_base.py:1305: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_config",
    "time" : {
      "start" : 1756437544081,
      "stop" : 1756437544081,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756437679029,
      "stop" : 1756437679029,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1756437678598,
      "stop" : 1756437679029,
      "duration" : 431
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1756437531313,
      "stop" : 1756437531313,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1756437531313,
      "stop" : 1756437531313,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1756437555562,
      "stop" : 1756437555563,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n    ### 用例说明\n    - 前置条件：有云策略和云跟单\n    - 操作步骤：\n      1. 有三个账号，分别修改三个账号：固定手数 品种 净值比例\n      2. 进行开仓\n      3. 判断三个账号的手数是否正确\n      4. 进行平仓\n      5. 判断三个账号的手数是否正确\n    - 预期结果：三个账号的手数正确\n    ",
    "status" : "failed",
    "statusMessage" : "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 5.0\n操作: ==\n预期: 3.0",
    "statusTrace" : "self = <lingkuan_828.test_cloudTrader.test_cloudtrader_money_scene.Testcloudtrader_moneyandscene.Testcloudtrader_Scence object at 0x0000019F21336E20>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000019F21480940>\ndb_transaction = <pymysql.connections.Connection object at 0x0000019F21432E20>\n\n    @allure.title(\"数据库校验-云跟单账号策略平仓-跟单账号固定手数\")\n    def test_dbclose_followParam5(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情表账号数据\"):\n            cloudTrader_user_accounts_5 = var_manager.get_variable(\"cloudTrader_user_accounts_5\")\n            sql = f\"\"\"\n                    SELECT\n                        fod.size,\n                        fod.close_no,\n                        fod.order_no,\n                        foi.true_total_lots,\n                        foi.order_no,\n                        foi.operation_type,\n                        foi.create_time,\n                        foi.status\n                    FROM\n                        follow_order_detail fod\n                    INNER JOIN\n                        follow_order_instruct foi\n                    ON\n                        foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                    WHERE foi.operation_type=%s\n                        AND fod.account = %s\n                        \"\"\"\n            params = (\n                '1',\n                cloudTrader_user_accounts_5,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=float(3),\n                    op=CompareOp.EQ,\n                    message=\"详情总手数应符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudtrader_money_scene.py:964: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloudtrader_money_scene.Testcloudtrader_moneyandscene.Testcloudtrader_Scence object at 0x0000019F21336E20>\nactual_value = 5.0, expected_value = 3.0, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数应符合预期', attachment_name = '详情总手数'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数应符合预期\nE               \nE               实际: 5.0\nE               操作: ==\nE               预期: 3.0\n\ncommons\\api_base.py:1305: Failed",
    "steps" : [ {
      "name" : "1. 获取订单详情表账号数据",
      "time" : {
        "start" : 1756437679030,
        "stop" : 1756437685874,
        "duration" : 6844
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（超时: 30秒，稳定期: 2秒）",
        "time" : {
          "start" : 1756437679030,
          "stop" : 1756437685874,
          "duration" : 6844
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "执行单次数据库查询",
          "time" : {
            "start" : 1756437679080,
            "stop" : 1756437679982,
            "duration" : 902
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756437679080,
              "stop" : 1756437679982,
              "duration" : 902
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "4bfc05dbb257fe40",
              "name" : "执行SQL",
              "source" : "4bfc05dbb257fe40.txt",
              "type" : "text/plain",
              "size" : 905
            }, {
              "uid" : "9bec23f58db887a8",
              "name" : "SQL参数",
              "source" : "9bec23f58db887a8.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false
          } ],
          "attachments" : [ {
            "uid" : "9bc250b06e90b438",
            "name" : "查询条件",
            "source" : "9bc250b06e90b438.txt",
            "type" : "text/plain",
            "size" : 47
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "轮询中（已等待1.0秒）",
          "time" : {
            "start" : 1756437679982,
            "stop" : 1756437679983,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "63dc8b3f09ee8e16",
            "name" : "当前状态",
            "source" : "63dc8b3f09ee8e16.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "2c6943fbbb9058b1",
            "name" : "超时倒计时",
            "source" : "2c6943fbbb9058b1.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756437679983,
            "stop" : 1756437679984,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "4d1c259ceb185cfa",
            "name" : "判断结果",
            "source" : "4d1c259ceb185cfa.txt",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "数据发生变化",
          "time" : {
            "start" : 1756437679984,
            "stop" : 1756437679984,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "8557b4875f4626b9",
            "name" : "状态说明",
            "source" : "8557b4875f4626b9.txt",
            "type" : "text/plain",
            "size" : 24
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "执行单次数据库查询",
          "time" : {
            "start" : 1756437682037,
            "stop" : 1756437682942,
            "duration" : 905
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756437682038,
              "stop" : 1756437682942,
              "duration" : 904
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "b51b9940859bbfca",
              "name" : "执行SQL",
              "source" : "b51b9940859bbfca.txt",
              "type" : "text/plain",
              "size" : 905
            }, {
              "uid" : "f392d243c7692f1f",
              "name" : "SQL参数",
              "source" : "f392d243c7692f1f.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false
          } ],
          "attachments" : [ {
            "uid" : "689adce4ae72aef6",
            "name" : "查询条件",
            "source" : "689adce4ae72aef6.txt",
            "type" : "text/plain",
            "size" : 47
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "轮询中（已等待3.9秒）",
          "time" : {
            "start" : 1756437682942,
            "stop" : 1756437682943,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "29b69cf7391648bd",
            "name" : "当前状态",
            "source" : "29b69cf7391648bd.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "43518edc49042d10",
            "name" : "超时倒计时",
            "source" : "43518edc49042d10.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756437682943,
            "stop" : 1756437682943,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "125bcf00a71e09c8",
            "name" : "判断结果",
            "source" : "125bcf00a71e09c8.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "数据首次稳定",
          "time" : {
            "start" : 1756437682943,
            "stop" : 1756437682943,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "cfa8ff718269e431",
            "name" : "状态说明",
            "source" : "cfa8ff718269e431.txt",
            "type" : "text/plain",
            "size" : 40
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "执行单次数据库查询",
          "time" : {
            "start" : 1756437684995,
            "stop" : 1756437685872,
            "duration" : 877
          },
          "status" : "passed",
          "steps" : [ {
            "name" : "执行数据库查询",
            "time" : {
              "start" : 1756437684996,
              "stop" : 1756437685872,
              "duration" : 876
            },
            "status" : "passed",
            "steps" : [ ],
            "attachments" : [ {
              "uid" : "2b54844e8c0d62b7",
              "name" : "执行SQL",
              "source" : "2b54844e8c0d62b7.txt",
              "type" : "text/plain",
              "size" : 905
            }, {
              "uid" : "f7c9d2ac03a5724d",
              "name" : "SQL参数",
              "source" : "f7c9d2ac03a5724d.txt",
              "type" : "text/plain",
              "size" : 21
            } ],
            "parameters" : [ ],
            "stepsCount" : 0,
            "hasContent" : true,
            "attachmentsCount" : 2,
            "shouldDisplayMessage" : false
          } ],
          "attachments" : [ {
            "uid" : "341704db8c7d4606",
            "name" : "查询条件",
            "source" : "341704db8c7d4606.txt",
            "type" : "text/plain",
            "size" : 47
          } ],
          "parameters" : [ ],
          "stepsCount" : 1,
          "hasContent" : true,
          "attachmentsCount" : 3,
          "shouldDisplayMessage" : false
        }, {
          "name" : "轮询中（已等待6.8秒）",
          "time" : {
            "start" : 1756437685872,
            "stop" : 1756437685873,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "5118a384907cffa6",
            "name" : "当前状态",
            "source" : "5118a384907cffa6.txt",
            "type" : "text/plain",
            "size" : 15
          }, {
            "uid" : "ec4f16dec418b940",
            "name" : "超时倒计时",
            "source" : "ec4f16dec418b940.txt",
            "type" : "text/plain",
            "size" : 21
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 2,
          "shouldDisplayMessage" : false
        }, {
          "name" : "判断结果稳定性",
          "time" : {
            "start" : 1756437685873,
            "stop" : 1756437685873,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "55340fdf58a4cf59",
            "name" : "判断结果",
            "source" : "55340fdf58a4cf59.txt",
            "type" : "text/plain",
            "size" : 42
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "数据稳定达标",
          "time" : {
            "start" : 1756437685873,
            "stop" : 1756437685874,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "7c4f14fbc97b0556",
            "name" : "结果说明",
            "source" : "7c4f14fbc97b0556.txt",
            "type" : "text/plain",
            "size" : 34
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        }, {
          "name" : "数据库查询结果（最终稳定结果）",
          "time" : {
            "start" : 1756437685874,
            "stop" : 1756437685874,
            "duration" : 0
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "2705bde3a18d5b26",
            "name" : "查询结果（共1条，显示前50条）",
            "source" : "2705bde3a18d5b26.json",
            "type" : "application/json",
            "size" : 234
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : false
        } ],
        "attachments" : [ {
          "uid" : "f60a57cbead86929",
          "name" : "执行SQL",
          "source" : "f60a57cbead86929.txt",
          "type" : "text/plain",
          "size" : 791
        }, {
          "uid" : "340a3e2c91dae21e",
          "name" : "SQL参数",
          "source" : "340a3e2c91dae21e.txt",
          "type" : "text/plain",
          "size" : 15
        }, {
          "uid" : "d59119405d4462a",
          "name" : "时间范围",
          "source" : "d59119405d4462a.txt",
          "type" : "text/plain",
          "size" : 7
        } ],
        "parameters" : [ ],
        "stepsCount" : 16,
        "hasContent" : true,
        "attachmentsCount" : 25,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 17,
      "hasContent" : true,
      "attachmentsCount" : 25,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 校验数据",
      "time" : {
        "start" : 1756437685874,
        "stop" : 1756437685875,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 5.0\n操作: ==\n预期: 3.0\n\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudtrader_money_scene.py\", line 964, in test_dbclose_followParam5\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ {
        "name" : "验证详情总手数",
        "time" : {
          "start" : 1756437685874,
          "stop" : 1756437685875,
          "duration" : 1
        },
        "status" : "failed",
        "statusMessage" : "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 5.0\n操作: ==\n预期: 3.0\n\n",
        "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudtrader_money_scene.py\", line 964, in test_dbclose_followParam5\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
        "steps" : [ {
          "name" : "校验: 详情总手数应符合预期",
          "time" : {
            "start" : 1756437685874,
            "stop" : 1756437685874,
            "duration" : 0
          },
          "status" : "failed",
          "statusMessage" : "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 5.0\n操作: ==\n预期: 3.0\n\n",
          "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "ee357662acd1502b",
            "name" : "详情总手数",
            "source" : "ee357662acd1502b.attach",
            "type" : "text/plain",
            "size" : 36
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "attachmentsCount" : 1,
          "shouldDisplayMessage" : true
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 1,
        "hasContent" : true,
        "attachmentsCount" : 1,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "1a4296f4153ec836",
      "name" : "log",
      "source" : "1a4296f4153ec836.txt",
      "type" : "text/plain",
      "size" : 4527
    } ],
    "parameters" : [ ],
    "stepsCount" : 21,
    "hasContent" : true,
    "attachmentsCount" : 27,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756437685991,
      "stop" : 1756437685991,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1756437685992,
      "stop" : 1756437685992,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1756437725617,
      "stop" : 1756437725618,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "场景2：云策略策略下单-跟单修改模式、品种"
  }, {
    "name" : "feature",
    "value" : "云策略-云策略列表-修改跟单账号"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudtrader_money_scene"
  }, {
    "name" : "subSuite",
    "value" : "Testcloudtrader_moneyandscene"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "5264-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudtrader_money_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "81d2ba5eb25e7035.json",
  "parameterValues" : [ ]
}