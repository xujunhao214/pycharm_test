{"name": "数据库校验-复制下单平仓数据-数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 4\n操作: ==\n预期: 2", "trace": "self = <lingkuan_828.test_cloudTrader.test_cloudOrderClose.TestCloudClose.TestMasOrderSend11 object at 0x0000012EF6114190>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000012EF6214280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF63B4BE0>\n\n    @allure.title(\"数据库校验-复制下单平仓数据-数据校验\")\n    def test_copy_verify_close_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                           SELECT\n                               fod.size,\n                               fod.close_no,\n                               fod.magical,\n                               fod.open_price,\n                               fod.symbol,\n                               fod.order_no,\n                               foi.true_total_lots,\n                               foi.order_no,\n                               foi.operation_type,\n                               foi.create_time,\n                               foi.status,\n                               foi.min_lot_size,\n                               foi.max_lot_size,\n                               foi.total_lots,\n                               foi.master_order,\n                               foi.total_orders\n                           FROM\n                               follow_order_detail fod\n                           INNER JOIN\n                               follow_order_instruct foi\n                           ON\n                               foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                           WHERE foi.operation_type = %s\n                               AND fod.account = %s\n                               AND fod.trader_id = %s\n                       \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验-2个订单\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单数量\"):\n>               self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=2,\n                    op=CompareOp.EQ,\n                    message=f\"平仓的订单数量应该是2\",\n                    attachment_name=\"订单数量详情\"\n                )\n\ntest_cloudTrader\\test_cloudOrderClose.py:2721: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloudOrderClose.TestCloudClose.TestMasOrderSend11 object at 0x0000012EF6114190>\nactual_value = 4, expected_value = 2, op = <CompareOp.EQ: '=='>\nmessage = '平仓的订单数量应该是2', attachment_name = '订单数量详情'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 平仓的订单数量应该是2\nE               \nE               实际: 4\nE               操作: ==\nE               预期: 2\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n        ### 测试说明\n        - 前置条件：有云策略和云跟单\n          1. 进行开仓，手数范围0.1-1，总订单数量2\n          2. 平仓-全平策略\n          3. 校验订单数据是否正确\n        - 预期结果：平仓的功能校验-全平订单功能正确\n        ", "steps": [{"name": "查询复制平仓订单数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "2e9ea8f0-4525-4f86-9d7f-4e6297372c9e-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "286fb7bf-2d3a-4992-99ff-2460179087f7-attachment.txt", "type": "text/plain"}], "start": 1756431482048, "stop": 1756431482109}], "attachments": [{"name": "时区处理", "source": "d27f6d0a-f76f-4a17-b95a-0a3d8098b2ae-attachment.txt", "type": "text/plain"}], "start": 1756431482048, "stop": 1756431482109}, {"name": "轮询中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "f285ab06-33e2-4aa7-851e-756e2a73e72b-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "cfdd6f07-9da5-4840-984f-4afffffa7a1e-attachment.txt", "type": "text/plain"}], "start": 1756431482109, "stop": 1756431482109}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "d437ea02-0391-4651-876a-30846f61dbdb-attachment.txt", "type": "text/plain"}], "start": 1756431482109, "stop": 1756431482109}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "9897800b-cb76-42cb-bcbd-7cf8fc030d35-attachment.txt", "type": "text/plain"}], "start": 1756431482109, "stop": 1756431482110}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "fbc344c6-eb4b-49f5-b0d3-db9bada5ace8-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "c8b2aa03-662c-4844-97df-2038f2f1b596-attachment.txt", "type": "text/plain"}], "start": 1756431484170, "stop": 1756431484225}], "attachments": [{"name": "时区处理", "source": "9b7b4bcf-608e-4b12-96e9-e4137136db38-attachment.txt", "type": "text/plain"}], "start": 1756431484169, "stop": 1756431484225}, {"name": "轮询中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "52e278f3-062a-4f38-b150-ada7f2ff3354-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "3608f732-7016-4d5d-b7fc-77965dd9705e-attachment.txt", "type": "text/plain"}], "start": 1756431484225, "stop": 1756431484226}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "f0032f3a-25d2-4ded-ba83-d6047b10d781-attachment.txt", "type": "text/plain"}], "start": 1756431484226, "stop": 1756431484227}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "e1c13c58-21ed-41fb-b614-092796e7ebc4-attachment.txt", "type": "text/plain"}], "start": 1756431484227, "stop": 1756431484227}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "d7fb9fab-fbf4-4f19-89a6-e081c3aaa401-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "0c8a2adf-370c-4d96-af78-9b270f27bccd-attachment.txt", "type": "text/plain"}], "start": 1756431486282, "stop": 1756431486335}], "attachments": [{"name": "时区处理", "source": "6638a401-3d15-4a2e-bcd3-cec6c17d9d5b-attachment.txt", "type": "text/plain"}], "start": 1756431486282, "stop": 1756431486335}, {"name": "轮询中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "d0c54ec1-b8dd-4459-a5f0-c9919ce3a08b-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "6b0a3fd5-04af-4a0c-b5ff-d1f5b3658c8d-attachment.txt", "type": "text/plain"}], "start": 1756431486335, "stop": 1756431486337}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "e1103280-b59d-441f-87ed-ef852396632c-attachment.txt", "type": "text/plain"}], "start": 1756431486337, "stop": 1756431486337}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "5e380ce4-9b73-4777-a35a-44f96663af80-attachment.txt", "type": "text/plain"}], "start": 1756431486337, "stop": 1756431486338}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "d856c727-3d96-44ae-ade6-977d6516f127-attachment.json", "type": "application/json"}], "start": 1756431486338, "stop": 1756431486338}], "attachments": [{"name": "执行SQL", "source": "fa6ed537-9af7-4ee6-b882-43792c94c4cb-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "06a5b82c-19dc-449b-ae54-e1e74aff5b04-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "e70e8617-36b4-4181-8a83-f8fa1f132cc8-attachment.txt", "type": "text/plain"}], "start": 1756431482001, "stop": 1756431486338}], "start": 1756431482001, "stop": 1756431486338}, {"name": "执行复制平仓数据校验-2个订单", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 4\n操作: ==\n预期: 2\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderClose.py\", line 2721, in test_copy_verify_close_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单数量", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 4\n操作: ==\n预期: 2\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderClose.py\", line 2721, in test_copy_verify_close_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 平仓的订单数量应该是2", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 4\n操作: ==\n预期: 2\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "订单数量详情", "source": "3f69e1bf-78fb-4b88-9e57-c521f53fe33a-attachment.attach", "type": "text/plain"}], "start": 1756431486338, "stop": 1756431486339}], "start": 1756431486338, "stop": 1756431486339}], "start": 1756431486338, "stop": 1756431486340}], "attachments": [{"name": "log", "source": "d875f3e0-cfe6-4db3-8366-f447d8f7a2c8-attachment.txt", "type": "text/plain"}], "start": 1756431482000, "stop": 1756431486341, "uuid": "14c2871a-9ae0-4e61-8918-a7a1a0a08668", "historyId": "669441f1a6ab35071715dccf054b4e9e", "testCaseId": "669441f1a6ab35071715dccf054b4e9e", "fullName": "test_cloudTrader.test_cloudOrderClose.TestMasOrderSend11#test_copy_verify_close_db", "labels": [{"name": "feature", "value": "云策略复制下单-平仓的功能校验"}, {"name": "story", "value": "场景11：平仓的功能校验-全平订单"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderClose"}, {"name": "subSuite", "value": "TestCloudClose"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderClose"}]}