{"name": "数据库校验-交易下单-跟单指令及订单详情数据检查", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 指令总手数应符合预期\n\n实际: 0.93\n操作: ==\n预期: 5.0", "trace": "self = <lingkuan_828.test_cloudTrader.test_cloud_masOrderSend.TestCloudMasOrdersend.TestCloudtradingOrders5 object at 0x0000012EF628E400>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000012EF755F730>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF64A31F0>\n\n    @allure.title(\"数据库校验-交易下单-跟单指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSend(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情表账号数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = f\"\"\"\n                   SELECT\n                       fod.size,\n                       fod.send_no,\n                       fod.magical,\n                       fod.open_price,\n                       fod.symbol,\n                       fod.order_no,\n                       foi.true_total_lots,\n                       foi.order_no,\n                       foi.operation_type,\n                       foi.create_time,\n                       foi.status,\n                       foi.total_lots,\n                       foi.total_orders\n                   FROM\n                       follow_order_detail fod\n                   INNER JOIN\n                       follow_order_instruct foi\n                   ON\n                       foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                   WHERE foi.operation_type = %s\n                       AND fod.account = %s\n                       \"\"\"\n            params = (\n                '0',\n                cloudTrader_user_accounts_4,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"2. 数据校验\"):\n            with allure.step(\"验证指令总手数\"):\n                total_lots = db_data[0][\"total_lots\"]\n>               self.verify_data(\n                    actual_value=float(total_lots),\n                    expected_value=float(5),\n                    op=CompareOp.EQ,\n                    message=\"指令总手数应符合预期\",\n                    attachment_name=\"指令总手数详情\"\n                )\n\ntest_cloudTrader\\test_cloud_masOrderSend.py:1768: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloud_masOrderSend.TestCloudMasOrdersend.TestCloudtradingOrders5 object at 0x0000012EF628E400>\nactual_value = 0.93, expected_value = 5.0, op = <CompareOp.EQ: '=='>\nmessage = '指令总手数应符合预期', attachment_name = '指令总手数详情'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 指令总手数应符合预期\nE               \nE               实际: 0.93\nE               操作: ==\nE               预期: 5.0\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总手数5\n      2. 校验账号的数据是否正确\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：账号的数据正确\n    ", "steps": [{"name": "1. 获取订单详情表账号数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "505faf12-7664-4891-ad3c-a660951d62d2-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "bd47f78b-452d-4894-9cbe-1d27121af94f-attachment.txt", "type": "text/plain"}], "start": 1756432043216, "stop": 1756432044261}], "attachments": [{"name": "时区处理", "source": "4109d053-85bf-4314-9af7-9b1d506ef4d0-attachment.txt", "type": "text/plain"}], "start": 1756432043214, "stop": 1756432044261}, {"name": "轮询中（已等待1.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "e7710a8e-9f5a-4d72-8c46-190ea3b76229-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "36c60684-39a4-4da9-8553-2c8441380091-attachment.txt", "type": "text/plain"}], "start": 1756432044261, "stop": 1756432044262}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "81f9c1f2-62f7-449c-8383-2e0e05d47e26-attachment.txt", "type": "text/plain"}], "start": 1756432044262, "stop": 1756432044262}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "f1185e80-6563-4342-aea6-2cd8422fb843-attachment.txt", "type": "text/plain"}], "start": 1756432044262, "stop": 1756432044263}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "9b393d5c-9a84-491e-95fc-a946c91edcdd-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "c0b5ff8c-0dc4-4415-8c32-9f6f120e7d80-attachment.txt", "type": "text/plain"}], "start": 1756432046320, "stop": 1756432047363}], "attachments": [{"name": "时区处理", "source": "94666a0c-b37d-4151-8fcc-ab356ad2237e-attachment.txt", "type": "text/plain"}], "start": 1756432046319, "stop": 1756432047364}, {"name": "轮询中（已等待4.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "9b4dc3f4-eb02-4d03-9308-896f753e7219-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "6e44054f-5c4c-472b-9776-6e2162c0907c-attachment.txt", "type": "text/plain"}], "start": 1756432047364, "stop": 1756432047364}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "5915f25b-a994-4831-8eb9-acc51b5f6957-attachment.txt", "type": "text/plain"}], "start": 1756432047364, "stop": 1756432047364}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "be48b21f-5eba-4b50-83a1-0f2845c60493-attachment.txt", "type": "text/plain"}], "start": 1756432047364, "stop": 1756432047364}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "f99d8320-aa18-4feb-9eba-1ae7747ac0f6-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "e90f94ff-bb4b-4f89-a5d9-6bb64022d558-attachment.txt", "type": "text/plain"}], "start": 1756432049428, "stop": 1756432050539}], "attachments": [{"name": "时区处理", "source": "db83420f-f4b8-48c3-8965-5e89cec6a833-attachment.txt", "type": "text/plain"}], "start": 1756432049427, "stop": 1756432050539}, {"name": "轮询中（已等待7.4秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "99a64350-c5a0-4c7f-baa4-c167d14176c2-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "effa4b2a-fc86-4f0c-a33a-a644dd220df1-attachment.txt", "type": "text/plain"}], "start": 1756432050539, "stop": 1756432050539}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "600d4aeb-3d3d-45a3-a319-56aabfa6074a-attachment.txt", "type": "text/plain"}], "start": 1756432050539, "stop": 1756432050540}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "8e84e7ca-9bef-4ef9-92bf-a996643be9cd-attachment.txt", "type": "text/plain"}], "start": 1756432050540, "stop": 1756432050540}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "75cbb520-834a-4615-aa89-443c0ea14aa9-attachment.json", "type": "application/json"}], "start": 1756432050540, "stop": 1756432050541}], "attachments": [{"name": "执行SQL", "source": "de4c46f2-ea8d-448a-9c4a-77cef4a7c24e-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "5b0d5a07-ce1f-4193-bae6-d1246c57859f-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "d3d58538-f620-4abe-92a6-294c6235d538-attachment.txt", "type": "text/plain"}], "start": 1756432043167, "stop": 1756432050541}], "start": 1756432043167, "stop": 1756432050541}, {"name": "2. 数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 指令总手数应符合预期\n\n实际: 0.93\n操作: ==\n预期: 5.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloud_masOrderSend.py\", line 1768, in test_dbquery_addsalve_orderSend\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证指令总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 指令总手数应符合预期\n\n实际: 0.93\n操作: ==\n预期: 5.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloud_masOrderSend.py\", line 1768, in test_dbquery_addsalve_orderSend\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 指令总手数应符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 指令总手数应符合预期\n\n实际: 0.93\n操作: ==\n预期: 5.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "指令总手数详情", "source": "fdece7a4-a8f4-4485-9335-f40538a2e992-attachment.attach", "type": "text/plain"}], "start": 1756432050541, "stop": 1756432050541}], "start": 1756432050541, "stop": 1756432050541}], "start": 1756432050541, "stop": 1756432050542}], "attachments": [{"name": "log", "source": "cf761d4a-7259-4303-a8ff-aa1d0cefa35e-attachment.txt", "type": "text/plain"}], "start": 1756432043167, "stop": 1756432050542, "uuid": "ca868227-4b3a-4f8e-9625-a9ad63a031f6", "historyId": "6a16f26a3aee4104f067db58f5da4b6c", "testCaseId": "6a16f26a3aee4104f067db58f5da4b6c", "fullName": "test_cloudTrader.test_cloud_masOrderSend.TestCloudtradingOrders5#test_dbquery_addsalve_orderSend", "labels": [{"name": "story", "value": "场景5：复制下单-手数0.1-1，总手数5"}, {"name": "feature", "value": "云策略-策略账号交易下单-开仓的场景校验"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloud_masOrderSend"}, {"name": "subSuite", "value": "TestCloudMasOrdersend"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloud_masOrderSend"}]}