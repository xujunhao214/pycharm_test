{"name": "数据库校验-分配下单数据", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 1.5\n操作: ==\n预期: 1.0", "trace": "self = <lingkuan_828.test_cloudTrader.test_cloudOrderSend.TestCloudStrategyOrder.TestMasOrderSend6 object at 0x0000012EF60A99D0>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000012EF60C3280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF755CEB0>\n\n    @allure.title(\"数据库校验-分配下单数据\")\n    def test_allocation_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证分配下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                    SELECT\n                        fod.size,\n                        fod.send_no,\n                        fod.magical,\n                        fod.open_price,\n                        fod.symbol,\n                        fod.order_no,\n                        foi.true_total_lots,\n                        foi.order_no,\n                        foi.operation_type,\n                        foi.create_time,\n                        foi.status,\n                        foi.min_lot_size,\n                        foi.max_lot_size,\n                        foi.total_lots,\n                        foi.total_orders\n                    FROM\n                        follow_order_detail fod\n                    INNER JOIN\n                        follow_order_instruct foi\n                    ON\n                        foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                    WHERE foi.operation_type = %s\n                        AND fod.account = %s\n                \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证手数范围-开始手数\"):\n                max_lot_size = db_data[0][\"max_lot_size\"]\n                self.verify_data(\n                    actual_value=float(max_lot_size),\n                    expected_value=float(0.1),\n                    op=CompareOp.EQ,\n                    message=\"开始手数应符合预期\",\n                    attachment_name=\"开始手数详情\"\n                )\n                logging.info(f\"开始手数验证通过: {max_lot_size}\")\n    \n            with allure.step(\"验证手数范围-结束手数\"):\n                min_lot_size = db_data[0][\"min_lot_size\"]\n                self.verify_data(\n                    actual_value=float(min_lot_size),\n                    expected_value=float(trader_ordersend[\"endSize\"]),\n                    op=CompareOp.EQ,\n                    message=\"结束手数应符合预期\",\n                    attachment_name=\"结束手数详情\"\n                )\n                logging.info(f\"结束手数验证通过: {min_lot_size}\")\n    \n            with allure.step(\"验证指令总手数\"):\n                total_lots = db_data[0][\"total_lots\"]\n                totalSzie = trader_ordersend[\"totalSzie\"]\n                self.verify_data(\n                    actual_value=float(total_lots),\n                    expected_value=float(totalSzie),\n                    op=CompareOp.EQ,\n                    message=\"指令总手数应符合预期\",\n                    attachment_name=\"指令总手数详情\"\n                )\n                logging.info(f\"指令总手数验证通过: {total_lots}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                totalSzie = trader_ordersend[\"totalSzie\"]\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=float(totalSzie),\n                    op=CompareOp.EQ,\n                    message=\"详情总手数应符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend.py:1388: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloudOrderSend.TestCloudStrategyOrder.TestMasOrderSend6 object at 0x0000012EF60A99D0>\nactual_value = 1.5, expected_value = 1.0, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数应符合预期', attachment_name = '详情总手数'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数应符合预期\nE               \nE               实际: 1.5\nE               操作: ==\nE               预期: 1.0\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总手数1\n      2. 校验账号的数据是否正确\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：云策略分配下单功能正确\n    ", "steps": [{"name": "查询订单详情数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "31f8fff8-f12a-4ce1-a745-9b36a8d08ce8-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "58a5b336-9594-47fe-b232-fca0293cdcbd-attachment.txt", "type": "text/plain"}], "start": 1756430655374, "stop": 1756430656483}], "attachments": [{"name": "时区处理", "source": "09dd743d-1a4b-4ef3-b3ca-cec3a29f73bb-attachment.txt", "type": "text/plain"}], "start": 1756430655373, "stop": 1756430656483}, {"name": "轮询中（已等待1.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "5637e9fd-d341-492c-a841-37d491536a2f-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "e13c6962-96cc-4b79-a074-e49528245f6c-attachment.txt", "type": "text/plain"}], "start": 1756430656483, "stop": 1756430656484}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "3126039f-f4c9-4007-a1ea-af398996fdf0-attachment.txt", "type": "text/plain"}], "start": 1756430656484, "stop": 1756430656484}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "61292273-a03b-4c45-9d20-94448c80458e-attachment.txt", "type": "text/plain"}], "start": 1756430656484, "stop": 1756430656485}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "693b1560-7309-4954-9adc-243a3795b907-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "92295c67-7317-441c-98be-99445d2f49ba-attachment.txt", "type": "text/plain"}], "start": 1756430658534, "stop": 1756430659610}], "attachments": [{"name": "时区处理", "source": "0300fd42-a69f-4f69-89a5-974e57d03070-attachment.txt", "type": "text/plain"}], "start": 1756430658534, "stop": 1756430659610}, {"name": "轮询中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "98f2bf42-85ba-44cc-b5c0-dc067cfd0cb7-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "15f317e0-4684-4814-b815-a9b30787f4cc-attachment.txt", "type": "text/plain"}], "start": 1756430659610, "stop": 1756430659610}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "36f4b5c1-a663-4348-aa77-604ac020ea59-attachment.txt", "type": "text/plain"}], "start": 1756430659610, "stop": 1756430659611}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "e738a382-45e7-4154-ace0-7ad7d332b854-attachment.txt", "type": "text/plain"}], "start": 1756430659611, "stop": 1756430659611}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "7040023b-b895-4e46-99af-5080f56457be-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "1485c19f-bbd4-406c-b803-4b128700d4dd-attachment.txt", "type": "text/plain"}], "start": 1756430661662, "stop": 1756430662721}], "attachments": [{"name": "时区处理", "source": "a9d86922-ef62-4cab-80f5-cd72ae3abf02-attachment.txt", "type": "text/plain"}], "start": 1756430661661, "stop": 1756430662721}, {"name": "轮询中（已等待7.4秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "5f84c8c2-8d1f-4479-b162-7b2634d7c39d-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "c7660650-55d3-4edd-a5ad-81515453a314-attachment.txt", "type": "text/plain"}], "start": 1756430662722, "stop": 1756430662723}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "29aee2b8-dc12-4fb4-ac3b-db794e4b2dac-attachment.txt", "type": "text/plain"}], "start": 1756430662723, "stop": 1756430662724}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "31a47635-996d-4bde-9ae9-5ec433be4e96-attachment.txt", "type": "text/plain"}], "start": 1756430662724, "stop": 1756430662724}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "70c48b34-7744-4529-990f-122384b195e1-attachment.json", "type": "application/json"}], "start": 1756430662724, "stop": 1756430662725}], "attachments": [{"name": "执行SQL", "source": "d2207e7d-a034-4b65-bc84-30ba04e83f1c-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "f4d55bd8-082e-452c-84c5-07b6314e1b50-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "7d745d78-8250-4b64-823b-cf19febe2740-attachment.txt", "type": "text/plain"}], "start": 1756430655323, "stop": 1756430662725}], "start": 1756430655323, "stop": 1756430662725}, {"name": "执行数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 1.5\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderSend.py\", line 1388, in test_allocation_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单状态", "status": "passed", "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "d610bac3-bf4c-4ad4-9a7a-65ad06d03198-attachment.attach", "type": "text/plain"}], "start": 1756430662725, "stop": 1756430662726}], "start": 1756430662725, "stop": 1756430662726}, {"name": "验证手数范围-开始手数", "status": "passed", "steps": [{"name": "校验: 开始手数应符合预期", "status": "passed", "attachments": [{"name": "开始手数详情", "source": "daf55813-72b7-4d76-8dc8-11c65e813e62-attachment.attach", "type": "text/plain"}], "start": 1756430662726, "stop": 1756430662727}], "start": 1756430662726, "stop": 1756430662727}, {"name": "验证手数范围-结束手数", "status": "passed", "steps": [{"name": "校验: 结束手数应符合预期", "status": "passed", "attachments": [{"name": "结束手数详情", "source": "7579fbe5-4b99-4247-bf89-b3ae1997c05c-attachment.attach", "type": "text/plain"}], "start": 1756430662727, "stop": 1756430662727}], "start": 1756430662727, "stop": 1756430662727}, {"name": "验证指令总手数", "status": "passed", "steps": [{"name": "校验: 指令总手数应符合预期", "status": "passed", "attachments": [{"name": "指令总手数详情", "source": "bb5383c1-077d-4de6-b7b7-8702496c4879-attachment.attach", "type": "text/plain"}], "start": 1756430662727, "stop": 1756430662727}], "start": 1756430662727, "stop": 1756430662728}, {"name": "验证详情总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 1.5\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderSend.py\", line 1388, in test_allocation_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 详情总手数应符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 1.5\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "详情总手数", "source": "9e372130-e5c0-4138-b2f9-eff5f38ab5af-attachment.attach", "type": "text/plain"}], "start": 1756430662728, "stop": 1756430662728}], "start": 1756430662728, "stop": 1756430662729}], "start": 1756430662725, "stop": 1756430662729}], "attachments": [{"name": "log", "source": "093a6409-4875-4c07-839a-109d5d1e86aa-attachment.txt", "type": "text/plain"}], "start": 1756430655323, "stop": 1756430662730, "uuid": "291031db-ea6f-427c-aa90-5060ff70ef94", "historyId": "a2a62fbc2f26f67d797067e5be3c2252", "testCaseId": "a2a62fbc2f26f67d797067e5be3c2252", "fullName": "test_cloudTrader.test_cloudOrderSend.TestMasOrderSend6#test_allocation_verify_db", "labels": [{"name": "story", "value": "场景6：分配下单-手数0.1-1，总手数1"}, {"name": "feature", "value": "云策略复制下单-开仓的场景校验"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderSend"}, {"name": "subSuite", "value": "TestCloudStrategyOrder"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderSend"}]}