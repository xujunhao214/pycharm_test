{"name": "数据库校验-复制下单平仓数据-数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.79\n操作: ==\n预期: 1.0", "trace": "self = <lingkuan_828.test_cloudTrader.test_cloudOrderClose.TestCloudFollowDirection.TestMasOrderSend2 object at 0x0000012EF626F760>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000012EF6214280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF63BA7C0>\n\n    @allure.title(\"数据库校验-复制下单平仓数据-数据校验\")\n    def test_copy_verify_close_db2(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                           SELECT\n                               fod.size,\n                               fod.close_no,\n                               fod.magical,\n                               fod.open_price,\n                               fod.symbol,\n                               fod.order_no,\n                               foi.true_total_lots,\n                               foi.order_no,\n                               foi.operation_type,\n                               foi.create_time,\n                               foi.status,\n                               foi.min_lot_size,\n                               foi.max_lot_size,\n                               foi.total_lots,\n                               foi.master_order,\n                               foi.total_orders\n                           FROM\n                               follow_order_detail fod\n                           INNER JOIN\n                               follow_order_instruct foi\n                           ON\n                               foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                           WHERE foi.operation_type = %s\n                               AND fod.account = %s\n                               AND fod.trader_id = %s\n                       \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验-有订单\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制平仓校验\")\n    \n            with allure.step(\"验证详情总手数\"):\n                totalSzie = trader_ordersend[\"totalSzie\"]\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=float(totalSzie),\n                    op=CompareOp.EQ,\n                    message=\"详情总手数应符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderClose.py:540: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloudOrderClose.TestCloudFollowDirection.TestMasOrderSend2 object at 0x0000012EF626F760>\nactual_value = 2.79, expected_value = 1.0, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数应符合预期', attachment_name = '详情总手数'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数应符合预期\nE               \nE               实际: 2.79\nE               操作: ==\nE               预期: 1.0\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总订单3，总手数1\n      2. 平仓-订单方向-sell，平仓失败\n      3. 校验数据库是否有平仓订单-应该没有\n      4. 平仓-订单方向-buy，平仓成功\n      5. 校验订单数据是否正确\n    - 预期结果：平仓的订单方向功能正确\n    ", "steps": [{"name": "查询复制平仓订单数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "c94cb37a-b9cd-46b9-bcfc-289e19b5de7c-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "b965ab10-b2fd-47d9-baab-3186b702ecb5-attachment.txt", "type": "text/plain"}], "start": 1756430919952, "stop": 1756430920006}], "attachments": [{"name": "时区处理", "source": "7c52968e-f78a-4d38-bb08-70daa80b1e83-attachment.txt", "type": "text/plain"}], "start": 1756430919951, "stop": 1756430920006}, {"name": "轮询中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "205da3cc-3a7c-407d-853d-056f25eacdd8-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "ff87d532-a700-438b-a606-7f9065672c90-attachment.txt", "type": "text/plain"}], "start": 1756430920007, "stop": 1756430920008}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "3a206eac-9dbd-4434-b132-bb1966277f87-attachment.txt", "type": "text/plain"}], "start": 1756430920008, "stop": 1756430920008}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "420dec52-02db-45b0-a244-e23cb40957f2-attachment.txt", "type": "text/plain"}], "start": 1756430920008, "stop": 1756430920009}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "5ea925dc-c538-4ad1-8997-b0e1e9c63e02-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "45dc5375-8884-478f-a7e9-24405ed8dbee-attachment.txt", "type": "text/plain"}], "start": 1756430922058, "stop": 1756430922110}], "attachments": [{"name": "时区处理", "source": "dba8411a-b441-4f12-841c-bbd554215fce-attachment.txt", "type": "text/plain"}], "start": 1756430922057, "stop": 1756430922110}, {"name": "轮询中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "a12886ab-969b-4701-87ef-edfbaee8af56-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "e2dc0652-0a1a-43a1-a2e7-768981041c5b-attachment.txt", "type": "text/plain"}], "start": 1756430922110, "stop": 1756430922111}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "98982027-c020-428c-8662-9819faa78688-attachment.txt", "type": "text/plain"}], "start": 1756430922111, "stop": 1756430922111}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "913224d4-ee6d-4ec0-ac88-03b33bdfaa91-attachment.txt", "type": "text/plain"}], "start": 1756430922111, "stop": 1756430922112}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "0bc08a23-4404-4ed0-b461-6c7cbbf5bfe1-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "d5bf3837-d317-4bcd-a7f6-cb084484ca9e-attachment.txt", "type": "text/plain"}], "start": 1756430924168, "stop": 1756430924225}], "attachments": [{"name": "时区处理", "source": "f0c77d4a-baa4-4e53-a91a-4fbf83ddbdf8-attachment.txt", "type": "text/plain"}], "start": 1756430924166, "stop": 1756430924225}, {"name": "轮询中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "9c703790-024d-4dfc-a479-771c799ffe70-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "e9a33c76-a9cf-43d7-893c-58ff9f16d86e-attachment.txt", "type": "text/plain"}], "start": 1756430924225, "stop": 1756430924226}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "682628ea-a595-4947-abbb-8c7ee43471f7-attachment.txt", "type": "text/plain"}], "start": 1756430924226, "stop": 1756430924227}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "0de95715-6daf-40de-b53f-8c561a124c86-attachment.txt", "type": "text/plain"}], "start": 1756430924227, "stop": 1756430924227}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "6dd225b9-71c2-45d1-bc1d-cfa7a443e055-attachment.json", "type": "application/json"}], "start": 1756430924227, "stop": 1756430924228}], "attachments": [{"name": "执行SQL", "source": "c6210d74-249a-48b7-92f0-ea448bc7d9ec-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "b358baf6-2bbd-40c0-a812-a5456a73bf4b-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "5ed257ab-2104-48c0-97c0-9c055e522af0-attachment.txt", "type": "text/plain"}], "start": 1756430919905, "stop": 1756430924228}], "start": 1756430919904, "stop": 1756430924228}, {"name": "执行复制平仓数据校验-有订单", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.79\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderClose.py\", line 540, in test_copy_verify_close_db2\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证详情总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.79\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloudOrderClose.py\", line 540, in test_copy_verify_close_db2\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 详情总手数应符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.79\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "详情总手数", "source": "1fef5e6a-caa8-4f69-831e-7765f4e216d1-attachment.attach", "type": "text/plain"}], "start": 1756430924228, "stop": 1756430924228}], "start": 1756430924228, "stop": 1756430924228}], "start": 1756430924228, "stop": 1756430924228}], "attachments": [{"name": "log", "source": "785f63a0-fe8f-4751-9877-5b567b29a998-attachment.txt", "type": "text/plain"}], "start": 1756430919904, "stop": 1756430924229, "uuid": "708af407-bd94-49a1-98b0-2ed1ab2e4947", "historyId": "385cd132bf4ef0c16e8311685ec6db29", "testCaseId": "385cd132bf4ef0c16e8311685ec6db29", "fullName": "test_cloudTrader.test_cloudOrderClose.TestMasOrderSend2#test_copy_verify_close_db2", "labels": [{"name": "feature", "value": "云策略复制下单-平仓的功能校验"}, {"name": "story", "value": "场景2：平仓的订单方向功能校验-sell"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderClose"}, {"name": "subSuite", "value": "TestCloudFollowDirection"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderClose"}]}