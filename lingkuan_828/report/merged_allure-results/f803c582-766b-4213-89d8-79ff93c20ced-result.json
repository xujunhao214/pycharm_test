{"name": "数据库校验-交易平仓-跟单指令及订单详情数据检查", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 1.0\n操作: ==\n预期: 5", "trace": "self = <lingkuan_828.test_cloudTrader.test_cloud_masOrderSend.TestCloudMasOrdersend.TestCloudtradingOrders2 object at 0x0000012EF626B1F0>\nvar_manager = <lingkuan_828.commons.variable_manager.VariableManager object at 0x0000012EF755F730>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF645EE50>\n\n    @allure.title(\"数据库校验-交易平仓-跟单指令及订单详情数据检查\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情表账号数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n            sql = f\"\"\"\n                    SELECT\n                        fod.size,\n                        fod.close_no,\n                        fod.magical,\n                        fod.open_price,\n                        fod.symbol,\n                        fod.order_no,\n                        foi.true_total_lots,\n                        foi.order_no,\n                        foi.operation_type,\n                        foi.create_time,\n                        foi.status,\n                        foi.min_lot_size,\n                        foi.max_lot_size,\n                        foi.total_lots,\n                        foi.master_order,\n                        foi.total_orders\n                    FROM\n                        follow_order_detail fod\n                    INNER JOIN\n                        follow_order_instruct foi\n                    ON\n                        foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                    WHERE foi.operation_type = %s\n                        AND fod.account = %s\n                        AND fod.trader_id = %s\n                        \"\"\"\n            params = (\n                '1',\n                cloudTrader_user_accounts_4,\n                cloudTrader_vps_ids_3,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=5,\n                    op=CompareOp.EQ,\n                    message=\"详情总手数符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloud_masOrderSend.py:803: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_828.test_cloudTrader.test_cloud_masOrderSend.TestCloudMasOrdersend.TestCloudtradingOrders2 object at 0x0000012EF626B1F0>\nactual_value = 1.0, expected_value = 5, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数符合预期', attachment_name = '详情总手数', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数符合预期\nE               \nE               实际: 1.0\nE               操作: ==\nE               预期: 5\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总订单3，总手数1\n      2. 校验账号的数据是否正确\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：账号的数据正确\n    ", "steps": [{"name": "1. 获取订单详情表账号数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "0e3c5554-fc5d-4d9b-90dd-b52e5ab2efb3-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "cd783912-5762-498b-8f3b-4d3fc8bddb18-attachment.txt", "type": "text/plain"}], "start": 1756431791275, "stop": 1756431791327}], "attachments": [{"name": "时区处理", "source": "02b9e10b-23d0-4dc9-bf92-896b0ef0a9d0-attachment.txt", "type": "text/plain"}], "start": 1756431791274, "stop": 1756431791327}, {"name": "轮询中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "791176bf-3d1a-4039-99e2-f084f87ffef3-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "e1810d3b-4f48-473c-91c6-042c650c1642-attachment.txt", "type": "text/plain"}], "start": 1756431791327, "stop": 1756431791328}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "185581ad-05df-422c-b0db-180d2f7a50ed-attachment.txt", "type": "text/plain"}], "start": 1756431791328, "stop": 1756431791328}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "bb41aebb-d077-43ea-a07f-5a3f8736b60e-attachment.txt", "type": "text/plain"}], "start": 1756431791328, "stop": 1756431791329}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "84bb1579-74de-4d58-87f2-633782460b0f-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "5262d4d5-3b59-4987-ab65-d10d4de1c19d-attachment.txt", "type": "text/plain"}], "start": 1756431793375, "stop": 1756431793430}], "attachments": [{"name": "时区处理", "source": "536e974d-ca46-43b6-8e4f-ca18757dc4de-attachment.txt", "type": "text/plain"}], "start": 1756431793375, "stop": 1756431793430}, {"name": "轮询中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "3ad1b801-8740-404e-ade2-a7eddb01da29-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "bfe688b5-b37e-4aad-9f6a-95c6faa1ce32-attachment.txt", "type": "text/plain"}], "start": 1756431793430, "stop": 1756431793431}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "13c262bf-2dba-4391-9853-c1e5f430e0f3-attachment.txt", "type": "text/plain"}], "start": 1756431793431, "stop": 1756431793431}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "a3630da5-fa60-467d-9b85-a4c27c707e04-attachment.txt", "type": "text/plain"}], "start": 1756431793431, "stop": 1756431793431}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "732ab882-dff0-4a4c-a405-fcba428ca40d-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "8f3aaa33-eb51-44fc-a9fa-4510c6464bf9-attachment.txt", "type": "text/plain"}], "start": 1756431795493, "stop": 1756431795548}], "attachments": [{"name": "时区处理", "source": "2f4b1412-a18a-4726-9ff1-333c17a60f6c-attachment.txt", "type": "text/plain"}], "start": 1756431795490, "stop": 1756431795548}, {"name": "轮询中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "8cd0ece5-700d-4379-8299-22660adfecb5-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "6cfb80f1-64c1-4745-8ba5-b12253373717-attachment.txt", "type": "text/plain"}], "start": 1756431795548, "stop": 1756431795549}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "11e64330-131a-4184-9de7-baea1d39200d-attachment.txt", "type": "text/plain"}], "start": 1756431795549, "stop": 1756431795550}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "166b12a6-385b-4ec1-bdf5-739b65646a3a-attachment.txt", "type": "text/plain"}], "start": 1756431795550, "stop": 1756431795550}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "6f9ac9d2-e8bc-4902-bfdc-d240eccfc58e-attachment.json", "type": "application/json"}], "start": 1756431795550, "stop": 1756431795550}], "attachments": [{"name": "执行SQL", "source": "80dbf5ff-f496-462e-890b-627a851cef49-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "abac4eb6-c82b-4e19-8a18-be986e7ef92d-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "a46bd85e-ebf7-4160-a03a-543c4a51b1f3-attachment.txt", "type": "text/plain"}], "start": 1756431791228, "stop": 1756431795550}], "start": 1756431791228, "stop": 1756431795550}, {"name": "2. 数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 1.0\n操作: ==\n预期: 5\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloud_masOrderSend.py\", line 803, in test_dbquery_addsalve_orderSendclose\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单状态", "status": "passed", "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "7a71eb3b-83e1-4a89-9187-8936d1382a4d-attachment.attach", "type": "text/plain"}], "start": 1756431795550, "stop": 1756431795551}], "start": 1756431795550, "stop": 1756431795551}, {"name": "验证详情总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 1.0\n操作: ==\n预期: 5\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\test_cloudTrader\\test_cloud_masOrderSend.py\", line 803, in test_dbquery_addsalve_orderSendclose\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 详情总手数符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数符合预期\n\n实际: 1.0\n操作: ==\n预期: 5\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_828\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "详情总手数", "source": "93c8860a-d591-4277-99a9-d2566b9aeee4-attachment.attach", "type": "text/plain"}], "start": 1756431795551, "stop": 1756431795551}], "start": 1756431795551, "stop": 1756431795551}], "start": 1756431795550, "stop": 1756431795551}], "attachments": [{"name": "log", "source": "69030f88-e171-42e2-9a6f-4cbd8b09e170-attachment.txt", "type": "text/plain"}], "start": 1756431791228, "stop": 1756431795553, "uuid": "14263ee8-8ddc-48a6-a50d-c065f7782070", "historyId": "37ccb5bf2f70031b3463911523dcc536", "testCaseId": "37ccb5bf2f70031b3463911523dcc536", "fullName": "test_cloudTrader.test_cloud_masOrderSend.TestCloudtradingOrders2#test_dbquery_addsalve_orderSendclose", "labels": [{"name": "feature", "value": "云策略-策略账号交易下单-开仓的场景校验"}, {"name": "story", "value": "场景2：复制下单-手数0.1-1，总订单3，总手数1"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloud_masOrderSend"}, {"name": "subSuite", "value": "TestCloudMasOrdersend"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloud_masOrderSend"}]}