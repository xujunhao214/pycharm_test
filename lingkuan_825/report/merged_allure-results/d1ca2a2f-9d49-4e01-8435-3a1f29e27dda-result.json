{"name": "数据库校验-策略开仓-主指令及订单详情数据检查", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 订单数量符合预期\n\n实际: 2\n操作: ==\n预期: 1", "trace": "self = <lingkuan_825.test_vps.test_vps_ordersend2.TestVPSOrderSend_newScenarios.TestVPSOrderSend1 object at 0x000001FA57606DF0>\nvar_manager = <lingkuan_825.commons.variable_manager.VariableManager object at 0x000001FA58AF5A60>\ndb_transaction = <pymysql.connections.Connection object at 0x000001FA577166D0>\n\n    @pytest.mark.retry(n=3, delay=5)\n    @allure.title(\"数据库校验-策略开仓-主指令及订单详情数据检查\")\n    def test_dbquery_orderSend(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情表账号数据\"):\n            new_user = var_manager.get_variable(\"new_user\")\n            sql = f\"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    \"\"\"\n            params = (\n                '0',\n                new_user[\"account\"],\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证手数范围-开始手数\"):\n                max_lot_size = db_data[0][\"max_lot_size\"]\n                self.verify_data(\n                    actual_value=float(max_lot_size),\n                    expected_value=float(0.6),\n                    op=CompareOp.EQ,\n                    message=\"开始手数应符合预期\",\n                    attachment_name=\"开始手数详情\"\n                )\n                logging.info(f\"开始手数验证通过: {max_lot_size}\")\n    \n            with allure.step(\"验证手数范围-结束手数\"):\n                min_lot_size = db_data[0][\"min_lot_size\"]\n                self.verify_data(\n                    actual_value=float(min_lot_size),\n                    expected_value=float(trader_ordersend[\"endSize\"]),\n                    op=CompareOp.EQ,\n                    message=\"结束手数应符合预期\",\n                    attachment_name=\"结束手数详情\"\n                )\n                logging.info(f\"结束手数验证通过: {min_lot_size}\")\n    \n            with allure.step(\"验证订单数量\"):\n>               self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=1,\n                    op=CompareOp.EQ,\n                    message=\"订单数量符合预期\",\n                    attachment_name=\"订单数量\"\n                )\n\ntest_vps\\test_vps_ordersend2.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_825.test_vps.test_vps_ordersend2.TestVPSOrderSend_newScenarios.TestVPSOrderSend1 object at 0x000001FA57606DF0>\nactual_value = 2, expected_value = 1, op = <CompareOp.EQ: '=='>\nmessage = '订单数量符合预期', attachment_name = '订单数量', attachment_type = 'text/plain'\nuse_isclose = True, rel_tol = 1e-09, abs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 订单数量符合预期\nE               \nE               实际: 2\nE               操作: ==\nE               预期: 1\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 场景校验：手数范围>总手数>订单数量\n    - 前置条件：有vps策略和vps跟单\n      1. 进行开仓，手数范围0.6-1，总手数1\n      2. 校验手数范围限制是否生效，只有一个订单，订单手数大于0.6\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：账号的数据正确，权重正确\n    ", "steps": [{"name": "1. 获取订单详情表账号数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "9c783bb9-8c56-40e2-8380-c331c533cc4b-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "0da9c560-cbc8-4aba-8adf-e05cf9247387-attachment.txt", "type": "text/plain"}], "start": 1756430566566, "stop": 1756430567678}], "attachments": [{"name": "时区处理", "source": "74eeaf36-a955-4ecc-ab1d-3c02e221cb25-attachment.txt", "type": "text/plain"}], "start": 1756430566565, "stop": 1756430567678}, {"name": "轮询中（已等待1.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "8a916e1c-14bb-4944-addf-953e55a8f385-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "f43adb01-f7d2-49a0-a6b5-6699b5085bcd-attachment.txt", "type": "text/plain"}], "start": 1756430567678, "stop": 1756430567679}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "9ddcf976-3705-4533-94e3-e0ff461dedbd-attachment.txt", "type": "text/plain"}], "start": 1756430567679, "stop": 1756430567679}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "bc9076db-ae34-401e-96e0-e05d05a42c68-attachment.txt", "type": "text/plain"}], "start": 1756430567679, "stop": 1756430567680}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "1175965c-38a6-44f7-928e-cbe3e0e88051-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "ada58b30-c773-4d20-8ff5-739adb1a3c2a-attachment.txt", "type": "text/plain"}], "start": 1756430569744, "stop": 1756430570870}], "attachments": [{"name": "时区处理", "source": "43a1fe36-900b-4d02-baab-bd07055ef7c1-attachment.txt", "type": "text/plain"}], "start": 1756430569743, "stop": 1756430570870}, {"name": "轮询中（已等待4.4秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "b274508f-d403-496b-ba83-9cbd4cfb3ff8-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "f4bc2291-a25e-494b-bed9-4d98c1d9fd9b-attachment.txt", "type": "text/plain"}], "start": 1756430570870, "stop": 1756430570871}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "0b97de64-ae1e-462c-83dd-b496b7eed822-attachment.txt", "type": "text/plain"}], "start": 1756430570871, "stop": 1756430570872}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "4cdc12e7-ee84-4a61-b810-9f6b51155be3-attachment.txt", "type": "text/plain"}], "start": 1756430570872, "stop": 1756430570872}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "a5a970c7-4b5c-426a-9ecc-3424bbbd4f94-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "ae417347-0fad-45a5-ae45-245f6d68c412-attachment.txt", "type": "text/plain"}], "start": 1756430572930, "stop": 1756430573970}], "attachments": [{"name": "时区处理", "source": "25b2928f-d9f6-4e06-b7ff-5597d08094f6-attachment.txt", "type": "text/plain"}], "start": 1756430572930, "stop": 1756430573970}, {"name": "轮询中（已等待7.5秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "bfaee258-3634-4c21-b576-014dd4f078ce-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "0c4de99c-9de7-4ab0-9111-a3eff57e1b75-attachment.txt", "type": "text/plain"}], "start": 1756430573970, "stop": 1756430573972}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "23d60ca6-54ce-4cab-a915-8a29a3642f8e-attachment.txt", "type": "text/plain"}], "start": 1756430573972, "stop": 1756430573972}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "3165d321-cc81-4710-b424-6892b38f2f2a-attachment.txt", "type": "text/plain"}], "start": 1756430573972, "stop": 1756430573973}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "5c3b11d4-6348-4fab-98e8-db2e2b53e97a-attachment.json", "type": "application/json"}], "start": 1756430573973, "stop": 1756430573974}], "attachments": [{"name": "执行SQL", "source": "dad71c7f-f68b-4835-99a2-91186311353a-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "57a5617f-2026-4396-9cb6-3927df7ddca7-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "7f31814e-9260-4257-a7e1-279c1312d42a-attachment.txt", "type": "text/plain"}], "start": 1756430566514, "stop": 1756430573974}], "start": 1756430566514, "stop": 1756430573974}, {"name": "2. 数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 订单数量符合预期\n\n实际: 2\n操作: ==\n预期: 1\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_vps\\test_vps_ordersend2.py\", line 145, in test_dbquery_orderSend\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单状态", "status": "passed", "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "51af944a-c3ab-4c78-a018-32d60a1340c3-attachment.attach", "type": "text/plain"}], "start": 1756430573974, "stop": 1756430573974}], "start": 1756430573974, "stop": 1756430573974}, {"name": "验证手数范围-开始手数", "status": "passed", "steps": [{"name": "校验: 开始手数应符合预期", "status": "passed", "attachments": [{"name": "开始手数详情", "source": "84ee6309-bd3b-4aaa-9194-958e57d1d99d-attachment.attach", "type": "text/plain"}], "start": 1756430573974, "stop": 1756430573975}], "start": 1756430573974, "stop": 1756430573975}, {"name": "验证手数范围-结束手数", "status": "passed", "steps": [{"name": "校验: 结束手数应符合预期", "status": "passed", "attachments": [{"name": "结束手数详情", "source": "f1a05beb-ede1-46bc-a5e9-8427d1686dbb-attachment.attach", "type": "text/plain"}], "start": 1756430573975, "stop": 1756430573976}], "start": 1756430573975, "stop": 1756430573976}, {"name": "验证订单数量", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 订单数量符合预期\n\n实际: 2\n操作: ==\n预期: 1\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_vps\\test_vps_ordersend2.py\", line 145, in test_dbquery_orderSend\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 订单数量符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 订单数量符合预期\n\n实际: 2\n操作: ==\n预期: 1\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "订单数量", "source": "8a420096-574a-4c4e-9911-74fd049f59ad-attachment.attach", "type": "text/plain"}], "start": 1756430573976, "stop": 1756430573977}], "start": 1756430573976, "stop": 1756430573977}], "start": 1756430573974, "stop": 1756430573978}], "attachments": [{"name": "log", "source": "1a92eac5-09a5-481d-9bef-e6722c23419f-attachment.txt", "type": "text/plain"}], "start": 1756430566514, "stop": 1756430573978, "uuid": "af9d0161-3f10-485c-b235-6aff54f73be0", "historyId": "e652c0a9a76dd12bc6189fc848450752", "testCaseId": "e652c0a9a76dd12bc6189fc848450752", "fullName": "test_vps.test_vps_ordersend2.TestVPSOrderSend1#test_dbquery_orderSend", "labels": [{"name": "feature", "value": "VPS策略下单-开仓的场景校验2"}, {"name": "story", "value": "场景1：VPS策略下单-手数范围0.6-1，总手数1"}, {"name": "tag", "value": "retry(n=3, delay=5)"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_vps_ordersend2"}, {"name": "subSuite", "value": "TestVPSOrderSend_newScenarios"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "48340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_vps_ordersend2"}]}