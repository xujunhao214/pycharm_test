{"name": "数据库校验-复制下单平仓数据", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0", "trace": "self = <lingkuan_825.test_cloudTrader.test_cloudOrderSend.TestCloudStrategyOrder.TestMasOrderSend1 object at 0x0000012EF61AE490>\nvar_manager = <lingkuan_825.commons.variable_manager.VariableManager object at 0x0000012EF60C3280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF62B01C0>\n\n    @allure.title(\"数据库校验-复制下单平仓数据\")\n    def test_copy_verify_close_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n            \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制平仓校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                totalSzie = trader_ordersend[\"totalSzie\"]\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=float(totalSzie),\n                    op=CompareOp.EQ,\n                    message=\"详情总手数应符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend.py:274: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_825.test_cloudTrader.test_cloudOrderSend.TestCloudStrategyOrder.TestMasOrderSend1 object at 0x0000012EF61AE490>\nactual_value = 2.0, expected_value = 1.0, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数应符合预期', attachment_name = '详情总手数'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数应符合预期\nE               \nE               实际: 2.0\nE               操作: ==\nE               预期: 1.0\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总订单3，总手数1\n      2. 校验账号的数据是否正确\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：账号的数据正确\n    ", "steps": [{"name": "查询复制平仓订单数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "d7ef688e-feca-4756-970d-9d68b91725f5-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "e73f352b-9f0e-410d-8cd2-20340e04976d-attachment.txt", "type": "text/plain"}], "start": 1756430391565, "stop": 1756430391623}], "attachments": [{"name": "时区处理", "source": "568a299f-6b29-4e37-a416-8dca2db0b7d8-attachment.txt", "type": "text/plain"}], "start": 1756430391565, "stop": 1756430391623}, {"name": "轮询中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "f052fc1f-06c4-48a3-b40c-64cd9dc900a0-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "1d45f622-9a44-4959-938b-92f1bced42b2-attachment.txt", "type": "text/plain"}], "start": 1756430391623, "stop": 1756430391624}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "58dd601a-d755-4836-ba40-ea3520aaac95-attachment.txt", "type": "text/plain"}], "start": 1756430391624, "stop": 1756430391625}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "0c70b306-8717-4e4e-b90a-21a3f042c5c9-attachment.txt", "type": "text/plain"}], "start": 1756430391625, "stop": 1756430391625}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "8d542fc9-aaf5-467e-80e3-205cdce0f6c9-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "69bd6912-fa05-4d74-b464-2ef4e7cd83c7-attachment.txt", "type": "text/plain"}], "start": 1756430393686, "stop": 1756430393748}], "attachments": [{"name": "时区处理", "source": "cb889976-8bd2-49c6-971c-a2adce165e83-attachment.txt", "type": "text/plain"}], "start": 1756430393685, "stop": 1756430393748}, {"name": "轮询中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "797fa646-6860-4f8a-ac2b-9bf39429976c-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "8599a7f2-d04f-4515-91d5-168f0dff4fa9-attachment.txt", "type": "text/plain"}], "start": 1756430393748, "stop": 1756430393749}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "ece104d6-8d04-44df-b430-590a1211e2e9-attachment.txt", "type": "text/plain"}], "start": 1756430393749, "stop": 1756430393750}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "cdd9fabb-1c15-4d98-ab30-82b88e03c0d4-attachment.txt", "type": "text/plain"}], "start": 1756430393750, "stop": 1756430393751}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "53af16ac-264b-4acc-8bd0-0245079fe168-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "49f4059e-647a-46da-b14a-5a766e241815-attachment.txt", "type": "text/plain"}], "start": 1756430395809, "stop": 1756430395864}], "attachments": [{"name": "时区处理", "source": "496cdd5c-5d79-420c-a06f-c2e1d2e450d7-attachment.txt", "type": "text/plain"}], "start": 1756430395809, "stop": 1756430395864}, {"name": "轮询中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "084edbe7-03da-49a1-b3ae-690676f30216-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "3902ba57-af9d-4f38-9105-26f644abb3f8-attachment.txt", "type": "text/plain"}], "start": 1756430395864, "stop": 1756430395865}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "abb6fba6-f3cb-4252-9b24-6665163bc55d-attachment.txt", "type": "text/plain"}], "start": 1756430395865, "stop": 1756430395865}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "da2f692c-e7e4-4598-a3ce-e0100a9f2f65-attachment.txt", "type": "text/plain"}], "start": 1756430395865, "stop": 1756430395865}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "83c7fe41-75ec-4abe-bcbf-b38604d99a88-attachment.json", "type": "application/json"}], "start": 1756430395865, "stop": 1756430395867}], "attachments": [{"name": "执行SQL", "source": "e63b1619-5c30-4c37-a2fd-8d4912d2ee9a-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "2c34b9d4-c67e-4971-8ad9-6747579df927-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "8b56e3f1-7d38-4b78-b221-d721618cb271-attachment.txt", "type": "text/plain"}], "start": 1756430391516, "stop": 1756430395867}], "start": 1756430391516, "stop": 1756430395867}, {"name": "执行复制平仓数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderSend.py\", line 274, in test_copy_verify_close_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单状态", "status": "passed", "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "17db9857-c7d4-41b6-b68d-051f092f2faf-attachment.attach", "type": "text/plain"}], "start": 1756430395867, "stop": 1756430395867}], "start": 1756430395867, "stop": 1756430395867}, {"name": "验证详情总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderSend.py\", line 274, in test_copy_verify_close_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 详情总手数应符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "详情总手数", "source": "79927481-305d-4cb2-8435-8712a57a487d-attachment.attach", "type": "text/plain"}], "start": 1756430395867, "stop": 1756430395868}], "start": 1756430395867, "stop": 1756430395868}], "start": 1756430395867, "stop": 1756430395868}], "attachments": [{"name": "log", "source": "0ac9dbdf-f4a4-469c-8f63-34b0d98a9d57-attachment.txt", "type": "text/plain"}], "start": 1756430391516, "stop": 1756430395868, "uuid": "681e7b29-169b-4c9d-8fb7-ce039f9d0ff3", "historyId": "04e23b0866699352304e5b4e910bf5b1", "testCaseId": "04e23b0866699352304e5b4e910bf5b1", "fullName": "test_cloudTrader.test_cloudOrderSend.TestMasOrderSend1#test_copy_verify_close_db", "labels": [{"name": "story", "value": "场景1：复制下单-手数0.1-1，总订单3，总手数1"}, {"name": "feature", "value": "云策略复制下单-开仓的场景校验"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderSend"}, {"name": "subSuite", "value": "TestCloudStrategyOrder"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderSend"}]}