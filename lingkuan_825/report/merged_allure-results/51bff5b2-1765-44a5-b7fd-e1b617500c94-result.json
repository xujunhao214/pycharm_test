{"name": "数据库校验-复制下单平仓数据-数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0", "trace": "self = <lingkuan_825.test_cloudTrader.test_cloudOrderClose.TestCloudFollowDirection.TestMasOrderSend3 object at 0x0000012EF60EECA0>\nvar_manager = <lingkuan_825.commons.variable_manager.VariableManager object at 0x0000012EF6214280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF771A6D0>\n\n    @allure.title(\"数据库校验-复制下单平仓数据-数据校验\")\n    def test_copy_verify_close_db2(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                               SELECT\n                                   fod.size,\n                                   fod.close_no,\n                                   fod.magical,\n                                   fod.open_price,\n                                   fod.symbol,\n                                   fod.order_no,\n                                   foi.true_total_lots,\n                                   foi.order_no,\n                                   foi.operation_type,\n                                   foi.create_time,\n                                   foi.status,\n                                   foi.min_lot_size,\n                                   foi.max_lot_size,\n                                   foi.total_lots,\n                                   foi.master_order,\n                                   foi.total_orders\n                               FROM\n                                   follow_order_detail fod\n                               INNER JOIN\n                                   follow_order_instruct foi\n                               ON\n                                   foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                               WHERE foi.operation_type = %s\n                                   AND fod.account = %s\n                                   AND fod.trader_id = %s\n                           \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验-有订单\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制平仓校验\")\n    \n            with allure.step(\"验证详情总手数\"):\n                totalSzie = trader_ordersend[\"totalSzie\"]\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=float(totalSzie),\n                    op=CompareOp.EQ,\n                    message=\"详情总手数应符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderClose.py:776: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_825.test_cloudTrader.test_cloudOrderClose.TestCloudFollowDirection.TestMasOrderSend3 object at 0x0000012EF60EECA0>\nactual_value = 2.0, expected_value = 1.0, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数应符合预期', attachment_name = '详情总手数'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数应符合预期\nE               \nE               实际: 2.0\nE               操作: ==\nE               预期: 1.0\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n        ### 测试说明\n        - 前置条件：有云策略和云跟单\n          1. 进行开仓，手数范围0.1-1，总订单3，总手数1\n          2. 平仓-订单方向-sell，平仓失败\n          3. 校验数据库是否有平仓订单-应该没有\n          4. 平仓-订单方向-buy sell，平仓成功\n          5. 校验订单数据是否正确\n        - 预期结果：平仓的订单方向功能正确\n        ", "steps": [{"name": "查询复制平仓订单数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "c3c0cdc1-43b6-4fcb-80f6-c2bf8794003c-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "ec23ce7c-84f6-4f2a-924f-e312078fea7e-attachment.txt", "type": "text/plain"}], "start": 1756430945915, "stop": 1756430945970}], "attachments": [{"name": "时区处理", "source": "e75a9d34-2a18-40b3-a245-61ea7453cc7b-attachment.txt", "type": "text/plain"}], "start": 1756430945914, "stop": 1756430945970}, {"name": "轮询中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "e1ceb15b-7475-4fa8-9ad3-79bd3a243df8-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "f7bb554d-3079-4106-a812-244136bb2426-attachment.txt", "type": "text/plain"}], "start": 1756430945970, "stop": 1756430945971}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "280844c7-17d0-4c63-a755-1fe7711a9f1c-attachment.txt", "type": "text/plain"}], "start": 1756430945971, "stop": 1756430945972}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "ee033076-0cc3-4184-9dc7-a8c4b2f09202-attachment.txt", "type": "text/plain"}], "start": 1756430945972, "stop": 1756430945972}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "1886cc96-33af-431b-a289-aa3df87c8127-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "c77d1ce7-ff06-437f-9776-6b910010d2c7-attachment.txt", "type": "text/plain"}], "start": 1756430948026, "stop": 1756430948083}], "attachments": [{"name": "时区处理", "source": "4fd0de5e-02b1-45ec-9f8a-5dd322503117-attachment.txt", "type": "text/plain"}], "start": 1756430948025, "stop": 1756430948083}, {"name": "轮询中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "5f79a702-fa8a-499b-818a-498a9ea6cd8e-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "08e5985f-0db7-4425-84b0-b34b84b56080-attachment.txt", "type": "text/plain"}], "start": 1756430948083, "stop": 1756430948084}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "7b87ef9b-8654-4695-884c-64acbafd0e60-attachment.txt", "type": "text/plain"}], "start": 1756430948084, "stop": 1756430948084}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "d2ab7ebd-513d-4032-b102-deec673b68b4-attachment.txt", "type": "text/plain"}], "start": 1756430948084, "stop": 1756430948085}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "c3770b5d-e1c1-4504-b4cb-6e7c7b11c960-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "774789e7-b178-4e44-b46d-68e53b648e7a-attachment.txt", "type": "text/plain"}], "start": 1756430950143, "stop": 1756430950199}], "attachments": [{"name": "时区处理", "source": "6e015706-b71f-40bc-b16b-11eb8ee8ba24-attachment.txt", "type": "text/plain"}], "start": 1756430950142, "stop": 1756430950199}, {"name": "轮询中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "762aa4f0-8fc2-45d9-983a-e8b923362c04-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "61381057-3761-4b98-995b-0304a1cb8927-attachment.txt", "type": "text/plain"}], "start": 1756430950199, "stop": 1756430950200}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "137f6b0e-b634-42e1-b96c-08641ac55a5c-attachment.txt", "type": "text/plain"}], "start": 1756430950200, "stop": 1756430950201}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "c7e75ceb-a5d6-4114-85da-2f3895b69e86-attachment.txt", "type": "text/plain"}], "start": 1756430950201, "stop": 1756430950202}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "27fc6029-5b9b-49de-a98b-087a54e20208-attachment.json", "type": "application/json"}], "start": 1756430950202, "stop": 1756430950202}], "attachments": [{"name": "执行SQL", "source": "e43159d5-501a-4685-a391-7fe85e64c9e7-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "48e0d152-b747-477a-9dd6-9505f4cdbb65-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "976ffe25-68a1-434b-8e53-c81e0057d9f3-attachment.txt", "type": "text/plain"}], "start": 1756430945865, "stop": 1756430950202}], "start": 1756430945865, "stop": 1756430950202}, {"name": "执行复制平仓数据校验-有订单", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderClose.py\", line 776, in test_copy_verify_close_db2\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证详情总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderClose.py\", line 776, in test_copy_verify_close_db2\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 详情总手数应符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "详情总手数", "source": "2e38a608-66ad-411e-9cee-17ea16526951-attachment.attach", "type": "text/plain"}], "start": 1756430950202, "stop": 1756430950203}], "start": 1756430950202, "stop": 1756430950203}], "start": 1756430950202, "stop": 1756430950204}], "attachments": [{"name": "log", "source": "b98866b5-a7ee-4447-a308-c801aefb88e1-attachment.txt", "type": "text/plain"}], "start": 1756430945865, "stop": 1756430950204, "uuid": "05343e96-8d26-4dd2-9f6d-086747260fe7", "historyId": "63ead32e25f6f37275c8189550ac3b61", "testCaseId": "63ead32e25f6f37275c8189550ac3b61", "fullName": "test_cloudTrader.test_cloudOrderClose.TestMasOrderSend3#test_copy_verify_close_db2", "labels": [{"name": "feature", "value": "云策略复制下单-平仓的功能校验"}, {"name": "story", "value": "场景3：平仓的订单方向功能校验-buy sell"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderClose"}, {"name": "subSuite", "value": "TestCloudFollowDirection"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderClose"}]}