{"name": "数据库校验-主指令开仓数据", "status": "failed", "statusDetails": {"message": "AssertionError: 详情总手数不符: 预期1, 实际2.0\nassert False\n +  where False = <built-in function isclose>(1.0, 2.0, rel_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   1.0 = float('1')\n +    and   2.0 = float(2.0)", "trace": "self = <lingkuan_825.test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios object at 0x000001FA57529850>\nvar_manager = <lingkuan_825.commons.variable_manager.VariableManager object at 0x000001FA576995B0>\ndb_transaction = <pymysql.connections.Connection object at 0x000001FA577253A0>\n\n    @allure.story(\"场景1：手数范围0.1-1，总订单3，总手数1\")\n    @allure.title(\"数据库校验-主指令开仓数据\")\n    def test_scenario1_dbquery_master_open(self, var_manager, db_transaction):\n        test_params = {\n            \"totalNum\": \"3\",\n            \"totalSzie\": \"1\",\n            \"startSize\": \"0.1\",\n            \"endSize\": \"1\",\n            \"intervalTime\": \"100\"\n        }\n>       self._verify_open_order_master(var_manager, db_transaction, test_params)\n\ntest_vps\\test_vps_ordersend.py:447: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_825.test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios object at 0x000001FA57529850>\nvar_manager = <lingkuan_825.commons.variable_manager.VariableManager object at 0x000001FA576995B0>\ndb_transaction = <pymysql.connections.Connection object at 0x000001FA577253A0>\ntest_params = {'endSize': '1', 'intervalTime': '100', 'startSize': '0.1', 'totalNum': '3', ...}\n\n    def _verify_open_order_master(self, var_manager, db_transaction, test_params):\n        \"\"\"验证主指令开仓数据（公共方法）\"\"\"\n        new_user = var_manager.get_variable(\"new_user\")\n    \n        # 1. 获取订单数据\n        with allure.step(\"1. 获取主指令开仓数据\"):\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', new_user[\"account\"])\n    \n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        # 2. 数据校验\n        with allure.step(\"2. 验证主指令开仓数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            # 验证手数范围\n            if test_params[\"startSize\"]:\n                max_lot_size = db_data[0][\"max_lot_size\"]\n                assert math.isclose(\n                    float(test_params[\"startSize\"]),\n                    float(max_lot_size),\n                    rel_tol=1e-9\n                ), f'开始手数不符: 预期{test_params[\"startSize\"]}, 实际{max_lot_size}'\n                logger.info(f\"开始手数验证通过: {test_params['startSize']}\")\n    \n            if test_params[\"endSize\"]:\n                min_lot_size = db_data[0][\"min_lot_size\"]\n                assert math.isclose(\n                    float(test_params[\"endSize\"]),\n                    float(min_lot_size),\n                    rel_tol=1e-9\n                ), f'结束手数不符: 预期{test_params[\"endSize\"]}, 实际{min_lot_size}'\n                logger.info(f\"结束手数验证通过: {test_params['endSize']}\")\n    \n            # 验证总订单数\n            if test_params[\"totalNum\"]:\n                total_orders = db_data[0][\"total_orders\"]\n                assert math.isclose(\n                    float(test_params[\"totalNum\"]),\n                    float(total_orders),\n                    rel_tol=1e-9\n                ), f'总订单数不符: 预期{test_params[\"totalNum\"]}, 实际{total_orders}'\n                logger.info(f\"总订单数验证通过: {test_params['totalNum']}\")\n    \n            # 验证总手数\n            if test_params[\"totalSzie\"]:\n                total_lots = db_data[0][\"total_lots\"]\n                assert math.isclose(\n                    float(test_params[\"totalSzie\"]),\n                    float(total_lots),\n                    rel_tol=1e-9\n                ), f'总手数不符: 预期{test_params[\"totalSzie\"]}, 实际{total_lots}'\n                logger.info(f\"总手数验证通过: {test_params['totalSzie']}\")\n    \n                # 验证详情总手数\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               assert math.isclose(\n                    float(test_params[\"totalSzie\"]),\n                    float(total),\n                    rel_tol=1e-9\n                ), f'详情总手数不符: 预期{test_params[\"totalSzie\"]}, 实际{total}'\nE               AssertionError: 详情总手数不符: 预期1, 实际2.0\nE               assert False\nE                +  where False = <built-in function isclose>(1.0, 2.0, rel_tol=1e-09)\nE                +    where <built-in function isclose> = math.isclose\nE                +    and   1.0 = float('1')\nE                +    and   2.0 = float(2.0)\n\ntest_vps\\test_vps_ordersend.py:194: AssertionError"}, "description": "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 包含五种开仓场景，验证不同参数组合下的订单数据正确性\n- 场景1：手数范围0.1-1，总订单3，总手数1\n- 场景2：手数范围0.01-0.01，总手数0.01\n- 场景3：手数范围0.1-1，总手数5\n- 场景4：手数范围0.01-1，总订单10\n- 场景5：手数范围0.1-1，总手数1-停止功能\n", "steps": [{"name": "1. 获取主指令开仓数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "422e2478-ecd4-4076-8888-5cdba13a4427-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "387de431-aef3-421e-9049-5162c86a8b5e-attachment.txt", "type": "text/plain"}], "start": 1756430240976, "stop": 1756430242033}], "attachments": [{"name": "时区处理", "source": "9f2621fa-cceb-4061-a9ff-8f1bd8c0a595-attachment.txt", "type": "text/plain"}], "start": 1756430240975, "stop": 1756430242033}, {"name": "轮询中（已等待1.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "b4e63c9a-acdc-4c6c-9506-22520ee6f70f-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "f0f7356f-15c0-4a38-afdc-e683774e0cf8-attachment.txt", "type": "text/plain"}], "start": 1756430242034, "stop": 1756430242034}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "e8f7c61e-0911-4d6b-bbff-83cbc79bad24-attachment.txt", "type": "text/plain"}], "start": 1756430242034, "stop": 1756430242034}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "b4bdcd7b-b81f-44d2-8d61-9edbd56472f0-attachment.txt", "type": "text/plain"}], "start": 1756430242034, "stop": 1756430242035}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "d286f6d7-579d-448a-828a-37bd9cdb709a-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "1b91d284-c776-4665-8ea6-67c7cc067ee0-attachment.txt", "type": "text/plain"}], "start": 1756430244085, "stop": 1756430245153}], "attachments": [{"name": "时区处理", "source": "700b8de8-70d0-43b3-a92b-d8d8c58ca54d-attachment.txt", "type": "text/plain"}], "start": 1756430244084, "stop": 1756430245153}, {"name": "轮询中（已等待4.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "63c47f3a-2846-47a5-85f3-1c82c4a41e0e-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "94447cb1-0764-4b8a-9301-fe12c13bb495-attachment.txt", "type": "text/plain"}], "start": 1756430245153, "stop": 1756430245154}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "8151d196-e2e6-4a8b-8fad-281e802b9f57-attachment.txt", "type": "text/plain"}], "start": 1756430245154, "stop": 1756430245155}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "7648c18d-dc72-4331-beec-25e7bec33760-attachment.txt", "type": "text/plain"}], "start": 1756430245155, "stop": 1756430245156}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "900c7420-7e48-4644-b2ea-4032ab2ede92-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "0a49161e-3a07-40ef-87b3-a199412c6c01-attachment.txt", "type": "text/plain"}], "start": 1756430247205, "stop": 1756430248263}], "attachments": [{"name": "时区处理", "source": "fa506537-b5ce-40b5-a6d7-7f3416864312-attachment.txt", "type": "text/plain"}], "start": 1756430247204, "stop": 1756430248263}, {"name": "轮询中（已等待7.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "e7b7c822-6952-4c96-b3aa-ddb16569dcb1-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "9aa410f1-dc13-46f3-a820-c1d848a9a0e0-attachment.txt", "type": "text/plain"}], "start": 1756430248263, "stop": 1756430248264}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "e501a184-2634-4292-a73e-692cc2857418-attachment.txt", "type": "text/plain"}], "start": 1756430248264, "stop": 1756430248264}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "fd6fd41f-e151-4ba6-82ba-68a486c37e74-attachment.txt", "type": "text/plain"}], "start": 1756430248264, "stop": 1756430248265}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "5ebc0906-cd7e-4046-816b-2d51c37f1fef-attachment.json", "type": "application/json"}], "start": 1756430248265, "stop": 1756430248265}], "attachments": [{"name": "执行SQL", "source": "c689afb8-e449-4c51-9fc4-16763b1cd977-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "cc8b23ee-91ea-4230-ae38-b713bc1434a5-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "ebb0da40-2c03-4f76-b2d2-8d7f1c0a846f-attachment.txt", "type": "text/plain"}], "start": 1756430240926, "stop": 1756430248265}], "start": 1756430240925, "stop": 1756430248265}, {"name": "2. 验证主指令开仓数据", "status": "failed", "statusDetails": {"message": "AssertionError: 详情总手数不符: 预期1, 实际2.0\nassert False\n +  where False = <built-in function isclose>(1.0, 2.0, rel_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   1.0 = float('1')\n +    and   2.0 = float(2.0)\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_vps\\test_vps_ordersend.py\", line 194, in _verify_open_order_master\n    assert math.isclose(\n"}, "steps": [{"name": "验证订单状态", "status": "passed", "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "07f2baef-c8ba-46d0-b3ee-682d263d41b9-attachment.attach", "type": "text/plain"}], "start": 1756430248265, "stop": 1756430248266}], "start": 1756430248265, "stop": 1756430248266}], "start": 1756430248265, "stop": 1756430248266}], "attachments": [{"name": "log", "source": "1ea2e883-122d-4f87-9ec2-e287c4daeae5-attachment.txt", "type": "text/plain"}], "start": 1756430240925, "stop": 1756430248266, "uuid": "e143638c-eaba-48bc-b642-d5190ca8c995", "historyId": "5e6b1fc6df4af01e44dffec66babaa44", "testCaseId": "5e6b1fc6df4af01e44dffec66babaa44", "fullName": "test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios#test_scenario1_dbquery_master_open", "labels": [{"name": "feature", "value": "VPS策略下单-开仓的场景校验"}, {"name": "story", "value": "场景1：手数范围0.1-1，总订单3，总手数1"}, {"name": "parentSuite", "value": "test_vps"}, {"name": "suite", "value": "test_vps_ordersend"}, {"name": "subSuite", "value": "TestVPSOrderSend_AllScenarios"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "48340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_vps.test_vps_ordersend"}]}