{"name": "数据库校验-复制下单数据", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0", "trace": "self = <lingkuan_825.test_cloudTrader.test_cloudOrderSend.TestCloudStrategyOrder.TestMasOrderSend1 object at 0x0000012EF603DD60>\nvar_manager = <lingkuan_825.commons.variable_manager.VariableManager object at 0x0000012EF60C3280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF64D8E50>\n\n    @pytest.mark.retry(n=3, delay=5)\n    @allure.title(\"数据库校验-复制下单数据\")\n    def test_copy_verify_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制订单详情数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.send_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.open_time\"\n            )\n    \n        with allure.step(\"执行复制下单数据校验\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单状态\"):\n                status = db_data[0][\"status\"]\n                self.verify_data(\n                    actual_value=status,\n                    expected_value=(0, 1),\n                    op=CompareOp.IN,\n                    message=\"订单状态应为0或1\",\n                    attachment_name=\"订单状态详情\"\n                )\n                logging.info(f\"订单状态验证通过: {status}\")\n    \n            with allure.step(\"验证手数范围-开始手数\"):\n                max_lot_size = db_data[0][\"max_lot_size\"]\n                self.verify_data(\n                    actual_value=float(max_lot_size),\n                    expected_value=float(0.10),\n                    op=CompareOp.EQ,\n                    message=\"开始手数应符合预期\",\n                    attachment_name=\"开始手数详情\"\n                )\n                logging.info(f\"开始手数验证通过: {trader_ordersend['startSize']}\")\n    \n            with allure.step(\"验证手数范围-结束手数\"):\n                min_lot_size = db_data[0][\"min_lot_size\"]\n                self.verify_data(\n                    actual_value=float(min_lot_size),\n                    expected_value=float(trader_ordersend[\"endSize\"]),\n                    op=CompareOp.EQ,\n                    message=\"结束手数应符合预期\",\n                    attachment_name=\"结束手数详情\"\n                )\n                logging.info(f\"结束手数验证通过: {trader_ordersend['endSize']}\")\n    \n            with allure.step(\"总订单数量校验\"):\n                total_orders = db_data[0][\"total_orders\"]\n                totalNum = trader_ordersend[\"totalNum\"]\n                self.verify_data(\n                    actual_value=float(total_orders),\n                    expected_value=float(totalNum),\n                    op=CompareOp.EQ,\n                    message=\"总订单数量应符合预期\",\n                    attachment_name=\"总订单数量详情\"\n                )\n                logging.info(f\"总订单数量验证通过: {total_orders}\")\n    \n            with allure.step(\"验证指令总手数\"):\n                total_lots = db_data[0][\"total_lots\"]\n                totalSzie = trader_ordersend[\"totalSzie\"]\n                self.verify_data(\n                    actual_value=float(total_lots),\n                    expected_value=float(totalSzie),\n                    op=CompareOp.EQ,\n                    message=\"指令总手数应符合预期\",\n                    attachment_name=\"指令总手数详情\"\n                )\n                logging.info(f\"指令总手数验证通过: {total_lots}\")\n    \n            with allure.step(\"验证详情总手数\"):\n                totalSzie = trader_ordersend[\"totalSzie\"]\n                size = [record[\"size\"] for record in db_data]\n                total = sum(size)\n>               self.verify_data(\n                    actual_value=float(total),\n                    expected_value=float(totalSzie),\n                    op=CompareOp.EQ,\n                    message=\"详情总手数应符合预期\",\n                    attachment_name=\"详情总手数\"\n                )\n\ntest_cloudTrader\\test_cloudOrderSend.py:172: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_825.test_cloudTrader.test_cloudOrderSend.TestCloudStrategyOrder.TestMasOrderSend1 object at 0x0000012EF603DD60>\nactual_value = 2.0, expected_value = 1.0, op = <CompareOp.EQ: '=='>\nmessage = '详情总手数应符合预期', attachment_name = '详情总手数'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 详情总手数应符合预期\nE               \nE               实际: 2.0\nE               操作: ==\nE               预期: 1.0\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总订单3，总手数1\n      2. 校验账号的数据是否正确\n      3. 进行平仓\n      4. 校验账号的数据是否正确\n    - 预期结果：账号的数据正确\n    ", "steps": [{"name": "查询复制订单详情数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "faeeb44f-6ee5-497d-bd21-e49b814a6f99-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "7b47ac64-2fb7-4488-86d0-fa30ae34af9a-attachment.txt", "type": "text/plain"}], "start": 1756430361836, "stop": 1756430362867}], "attachments": [{"name": "时区处理", "source": "ba376f45-7b83-4f70-ab0b-ca5635ee8b1b-attachment.txt", "type": "text/plain"}], "start": 1756430361835, "stop": 1756430362867}, {"name": "轮询中（已等待1.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "d4d2f0ed-03bc-4c6e-b05b-07734c59a88b-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "f5d36570-46b6-4fbd-bbd5-b9f63871a48e-attachment.txt", "type": "text/plain"}], "start": 1756430362867, "stop": 1756430362869}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "09596995-756c-48ee-ac79-32276c8a7279-attachment.txt", "type": "text/plain"}], "start": 1756430362869, "stop": 1756430362869}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "ca775b39-86a6-404d-b3d1-884e77b2adef-attachment.txt", "type": "text/plain"}], "start": 1756430362869, "stop": 1756430362870}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "69f16265-8f2d-4429-98fe-acdd126a3131-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "3f969b05-d126-4b08-bbd2-b9bfba28d691-attachment.txt", "type": "text/plain"}], "start": 1756430364922, "stop": 1756430365974}], "attachments": [{"name": "时区处理", "source": "fe76ee32-e161-4e31-8f25-2473fa32d3e4-attachment.txt", "type": "text/plain"}], "start": 1756430364921, "stop": 1756430365974}, {"name": "轮询中（已等待4.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "2c864be0-9f91-470f-a5dd-2f6e4f3f482e-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "54f06b92-0028-48e7-a175-7a218e96e80e-attachment.txt", "type": "text/plain"}], "start": 1756430365974, "stop": 1756430365975}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "d050920c-4ed8-4f47-bd13-71cbf5df8b35-attachment.txt", "type": "text/plain"}], "start": 1756430365976, "stop": 1756430365976}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "907dd44b-58ca-4a6f-bec6-a37d8ebc71da-attachment.txt", "type": "text/plain"}], "start": 1756430365976, "stop": 1756430365976}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "51c4d2c7-8022-49c2-8448-d5f53b8577d5-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "c861c373-d99c-44c0-8617-f1ba55be625c-attachment.txt", "type": "text/plain"}], "start": 1756430368031, "stop": 1756430369196}], "attachments": [{"name": "时区处理", "source": "09d0eee6-a09e-495a-ac51-2395d4a81299-attachment.txt", "type": "text/plain"}], "start": 1756430368030, "stop": 1756430369196}, {"name": "轮询中（已等待7.4秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "a3d5b914-717c-4f4f-92ec-aeb6a8872679-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "46c8a6af-2283-48a3-9fc2-8e124b194c00-attachment.txt", "type": "text/plain"}], "start": 1756430369196, "stop": 1756430369197}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "d350578a-cafa-417d-b4e6-ba3449b44b25-attachment.txt", "type": "text/plain"}], "start": 1756430369197, "stop": 1756430369197}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "219c6e9d-abbe-4f5c-bf8b-4677885304c7-attachment.txt", "type": "text/plain"}], "start": 1756430369197, "stop": 1756430369198}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "f722a2ee-6e6b-4902-bd35-8f27bc453bc3-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "529bade9-d474-4e5d-a289-fbfb0c2d4058-attachment.txt", "type": "text/plain"}], "start": 1756430371289, "stop": 1756430372332}], "attachments": [{"name": "时区处理", "source": "74e7ca38-19b2-417a-9236-528b065fb1b7-attachment.txt", "type": "text/plain"}], "start": 1756430371288, "stop": 1756430372332}, {"name": "轮询中（已等待10.5秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "c3a39db7-83c0-49e8-8167-c780798aed15-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "c1bde1ef-8454-4c54-9546-f00b6b686fcc-attachment.txt", "type": "text/plain"}], "start": 1756430372332, "stop": 1756430372333}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "5ece1c0a-bfb4-4ffe-8899-78d01ad204b4-attachment.txt", "type": "text/plain"}], "start": 1756430372333, "stop": 1756430372334}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "aa3dc195-2d07-434a-abd8-ce86ee58b827-attachment.txt", "type": "text/plain"}], "start": 1756430372334, "stop": 1756430372334}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "8932ef2a-062b-48ff-acda-7a5522d81520-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "ec0dd5b5-c831-4f6e-8d7b-885717c8d549-attachment.txt", "type": "text/plain"}], "start": 1756430374381, "stop": 1756430375418}], "attachments": [{"name": "时区处理", "source": "c8460847-aa5c-4574-bf86-20bb79acb680-attachment.txt", "type": "text/plain"}], "start": 1756430374381, "stop": 1756430375418}, {"name": "轮询中（已等待13.6秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "4100661f-d123-4176-9c7c-a2966a5980d0-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "b9b6e66f-0a2d-4d90-89c1-8e3b5b8fd9d7-attachment.txt", "type": "text/plain"}], "start": 1756430375418, "stop": 1756430375419}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "70f48855-a216-4992-9476-8f2dae42fe42-attachment.txt", "type": "text/plain"}], "start": 1756430375419, "stop": 1756430375419}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "38f7f5b8-2a6e-4a68-840d-004a4f6322b2-attachment.txt", "type": "text/plain"}], "start": 1756430375419, "stop": 1756430375420}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "487dc133-3401-4416-944f-6f2d22a5b364-attachment.json", "type": "application/json"}], "start": 1756430375420, "stop": 1756430375420}], "attachments": [{"name": "执行SQL", "source": "688345c7-6e5a-4eb3-bbfb-a282fab77c5f-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "0f9010ee-ea6e-4f9b-9681-b78ecd1cd475-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "b8d95564-3591-4f30-a7e1-739ac898e9d6-attachment.txt", "type": "text/plain"}], "start": 1756430361788, "stop": 1756430375420}], "start": 1756430361787, "stop": 1756430375420}, {"name": "执行复制下单数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderSend.py\", line 172, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单状态", "status": "passed", "steps": [{"name": "校验: 订单状态应为0或1", "status": "passed", "attachments": [{"name": "订单状态详情", "source": "94a602c2-c9f9-4e19-b79d-b7ff805c605b-attachment.attach", "type": "text/plain"}], "start": 1756430375420, "stop": 1756430375420}], "start": 1756430375420, "stop": 1756430375420}, {"name": "验证手数范围-开始手数", "status": "passed", "steps": [{"name": "校验: 开始手数应符合预期", "status": "passed", "attachments": [{"name": "开始手数详情", "source": "c9577980-5ee8-4cf3-8035-e61f89b8d26c-attachment.attach", "type": "text/plain"}], "start": 1756430375421, "stop": 1756430375421}], "start": 1756430375421, "stop": 1756430375421}, {"name": "验证手数范围-结束手数", "status": "passed", "steps": [{"name": "校验: 结束手数应符合预期", "status": "passed", "attachments": [{"name": "结束手数详情", "source": "d91443ce-c2fe-45e1-a4bf-f662df59e343-attachment.attach", "type": "text/plain"}], "start": 1756430375421, "stop": 1756430375421}], "start": 1756430375421, "stop": 1756430375422}, {"name": "总订单数量校验", "status": "passed", "steps": [{"name": "校验: 总订单数量应符合预期", "status": "passed", "attachments": [{"name": "总订单数量详情", "source": "254eec84-1511-40b8-bdcb-0d6f5d0011cf-attachment.attach", "type": "text/plain"}], "start": 1756430375422, "stop": 1756430375422}], "start": 1756430375422, "stop": 1756430375423}, {"name": "验证指令总手数", "status": "passed", "steps": [{"name": "校验: 指令总手数应符合预期", "status": "passed", "attachments": [{"name": "指令总手数详情", "source": "91e44838-0b17-4226-8193-d34b0ed4a0a4-attachment.attach", "type": "text/plain"}], "start": 1756430375423, "stop": 1756430375424}], "start": 1756430375423, "stop": 1756430375424}, {"name": "验证详情总手数", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderSend.py\", line 172, in test_copy_verify_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 详情总手数应符合预期", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 详情总手数应符合预期\n\n实际: 2.0\n操作: ==\n预期: 1.0\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "详情总手数", "source": "200800ac-677c-4e57-84cc-3985f919f948-attachment.attach", "type": "text/plain"}], "start": 1756430375424, "stop": 1756430375425}], "start": 1756430375424, "stop": 1756430375425}], "start": 1756430375420, "stop": 1756430375426}], "attachments": [{"name": "log", "source": "430e31a7-dca8-4e10-a79e-c6063f7a2081-attachment.txt", "type": "text/plain"}], "start": 1756430361787, "stop": 1756430375426, "uuid": "af70983a-dece-4d67-959d-e18120b42860", "historyId": "6f2233fe9df7e7f1166fee34cf782b0b", "testCaseId": "6f2233fe9df7e7f1166fee34cf782b0b", "fullName": "test_cloudTrader.test_cloudOrderSend.TestMasOrderSend1#test_copy_verify_db", "labels": [{"name": "story", "value": "场景1：复制下单-手数0.1-1，总订单3，总手数1"}, {"name": "feature", "value": "云策略复制下单-开仓的场景校验"}, {"name": "tag", "value": "retry(n=3, delay=5)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderSend"}, {"name": "subSuite", "value": "TestCloudStrategyOrder"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderSend"}]}