{"name": "数据库校验-复制下单平仓数据-数据校验", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 3\n操作: ==\n预期: 2", "trace": "self = <lingkuan_825.test_cloudTrader.test_cloudOrderClose.TestCloudClose.TestMasOrderSend11 object at 0x0000012EF6114190>\nvar_manager = <lingkuan_825.commons.variable_manager.VariableManager object at 0x0000012EF6214280>\ndb_transaction = <pymysql.connections.Connection object at 0x0000012EF6198B50>\n\n    @allure.title(\"数据库校验-复制下单平仓数据-数据校验\")\n    def test_copy_verify_close_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                           SELECT\n                               fod.size,\n                               fod.close_no,\n                               fod.magical,\n                               fod.open_price,\n                               fod.symbol,\n                               fod.order_no,\n                               foi.true_total_lots,\n                               foi.order_no,\n                               foi.operation_type,\n                               foi.create_time,\n                               foi.status,\n                               foi.min_lot_size,\n                               foi.max_lot_size,\n                               foi.total_lots,\n                               foi.master_order,\n                               foi.total_orders\n                           FROM\n                               follow_order_detail fod\n                           INNER JOIN\n                               follow_order_instruct foi\n                           ON\n                               foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                           WHERE foi.operation_type = %s\n                               AND fod.account = %s\n                               AND fod.trader_id = %s\n                       \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验-2个订单\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制下单校验\")\n    \n            with allure.step(\"验证订单数量\"):\n>               self.verify_data(\n                    actual_value=len(db_data),\n                    expected_value=2,\n                    op=CompareOp.EQ,\n                    message=f\"平仓的订单数量应该是2\",\n                    attachment_name=\"订单数量详情\"\n                )\n\ntest_cloudTrader\\test_cloudOrderClose.py:2721: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_825.test_cloudTrader.test_cloudOrderClose.TestCloudClose.TestMasOrderSend11 object at 0x0000012EF6114190>\nactual_value = 3, expected_value = 2, op = <CompareOp.EQ: '=='>\nmessage = '平仓的订单数量应该是2', attachment_name = '订单数量详情'\nattachment_type = 'text/plain', use_isclose = True, rel_tol = 1e-09\nabs_tol = 0.0\n\n    def verify_data(\n            self,\n            actual_value,\n            expected_value,\n            op: CompareOp,\n            message: str,\n            attachment_name: str,\n            attachment_type=\"text/plain\",\n            use_isclose=True,  # 新增参数：是否启用math.isclose容错（默认启用）\n            rel_tol=1e-9,  # 相对容差（仅当use_isclose=True时生效）\n            abs_tol=0.0  # 绝对容差（仅当use_isclose=True时生效）\n    ):\n        \"\"\"\n        通用数据校验函数，支持浮点容错比较\n        :param actual_value: 实际值\n        :param expected_value: 预期值\n        :param op: 比较操作，CompareOp 枚举\n        :param message: 校验失败时的提示信息\n        :param attachment_name: Allure 附件名称\n        :param attachment_type: Allure 附件类型，默认文本\n        :param use_isclose: 是否使用math.isclose进行浮点容错比较\n        :param rel_tol: 相对容差（默认1e-9）\n        :param abs_tol: 绝对容差（默认0.0）\n        其他参数同前\n        \"\"\"\n        with allure.step(f\"校验: {message}\"):\n            result = False\n            try:\n                # 处理浮点容错比较（仅对EQ/NE操作生效）\n                if use_isclose and op in (CompareOp.EQ, CompareOp.NE):\n                    if not (isinstance(actual_value, (int, float)) and\n                            isinstance(expected_value, (int, float))):\n                        # 非数字类型自动禁用isclose，避免报错\n                        use_isclose = False\n                        logging.warning(f\"自动禁用isclose：非数字类型比较（实际值类型：{type(actual_value)}）\")\n    \n                    # 计算isclose结果\n                    is_close = math.isclose(\n                        actual_value,\n                        expected_value,\n                        rel_tol=rel_tol,\n                        abs_tol=abs_tol\n                    )\n                    # 根据操作类型取反\n                    result = is_close if op == CompareOp.EQ else not is_close\n    \n                # 普通比较逻辑\n                else:\n                    if op == CompareOp.EQ:\n                        result = actual_value == expected_value\n                    elif op == CompareOp.NE:\n                        result = actual_value != expected_value\n                    elif op == CompareOp.GT:\n                        result = actual_value > expected_value\n                    elif op == CompareOp.LT:\n                        result = actual_value < expected_value\n                    elif op == CompareOp.GE:\n                        result = actual_value >= expected_value\n                    elif op == CompareOp.LE:\n                        result = actual_value <= expected_value\n                    elif op == CompareOp.IN:\n                        result = actual_value in expected_value\n                    elif op == CompareOp.NOT_IN:\n                        result = actual_value not in expected_value\n    \n            except TypeError as e:\n                pytest.fail(\n                    f\"校验类型错误: {str(e)}\\n实际值类型: {type(actual_value)}, 预期值类型: {type(expected_value)}\")\n    \n            # 生成详细提示信息（包含容差参数）\n            detail_msg = (\n                f\"\\n实际: {actual_value}\\n\"\n                f\"操作: {op.value}\\n\"\n                f\"预期: {expected_value}\\n\"\n            )\n    \n            # 添加allure.attach，将信息写入报告\n            allure.attach(\n                detail_msg,  # 附件内容\n                name=attachment_name,  # 附件名称（来自参数）\n                attachment_type=attachment_type  # 附件类型\n            )\n    \n            if not result:\n>               pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\nE               Failed: 校验失败: 平仓的订单数量应该是2\nE               \nE               实际: 3\nE               操作: ==\nE               预期: 2\n\ncommons\\api_base.py:1305: Failed"}, "description": "\n        ### 测试说明\n        - 前置条件：有云策略和云跟单\n          1. 进行开仓，手数范围0.1-1，总订单数量2\n          2. 平仓-全平策略\n          3. 校验订单数据是否正确\n        - 预期结果：平仓的功能校验-全平订单功能正确\n        ", "steps": [{"name": "查询复制平仓订单数据", "status": "passed", "steps": [{"name": "轮询等待数据稳定（时区+05:00，超时30秒）", "status": "passed", "steps": [{"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "d281bdfc-209c-47b0-aada-4f1ba21a374f-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "94c07511-e48c-4426-95a2-a376436ffaa9-attachment.txt", "type": "text/plain"}], "start": 1756431491895, "stop": 1756431491949}], "attachments": [{"name": "时区处理", "source": "0ba624b7-cf30-4908-a962-4e13b341e8dd-attachment.txt", "type": "text/plain"}], "start": 1756431491894, "stop": 1756431491949}, {"name": "轮询中（已等待0.1秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "04d8e2f5-8ae2-4cde-a9b6-ac0394d2d27e-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "c3e2571b-d97e-4e77-87d2-d7c9468bf9ea-attachment.txt", "type": "text/plain"}], "start": 1756431491949, "stop": 1756431491950}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "ae7c4ecb-7320-40fb-8c65-b6b8385351bc-attachment.txt", "type": "text/plain"}], "start": 1756431491950, "stop": 1756431491950}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "f3207cac-43c8-4424-a1e5-033647f1e859-attachment.txt", "type": "text/plain"}], "start": 1756431491950, "stop": 1756431491950}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "7fa5c4d6-631a-41da-b7eb-a56293563d84-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "f025d0a5-8e7b-47b3-8339-5622022e71d9-attachment.txt", "type": "text/plain"}], "start": 1756431494010, "stop": 1756431494066}], "attachments": [{"name": "时区处理", "source": "de560add-b677-4749-83aa-1c1a7b7646e7-attachment.txt", "type": "text/plain"}], "start": 1756431494009, "stop": 1756431494066}, {"name": "轮询中（已等待2.2秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "03594d21-4fac-4d6a-85a1-57a231bda499-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "5db1d7f9-a6b6-49ca-acdf-b90b1dcbbbe3-attachment.txt", "type": "text/plain"}], "start": 1756431494066, "stop": 1756431494066}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "36f53b28-408a-4396-83e2-8e08d317cc4d-attachment.txt", "type": "text/plain"}], "start": 1756431494066, "stop": 1756431494066}, {"name": "数据发生变化", "status": "passed", "attachments": [{"name": "状态说明", "source": "9fe01eba-9993-4a2c-85c4-a2ff170021ad-attachment.txt", "type": "text/plain"}], "start": 1756431494066, "stop": 1756431494067}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "0988f4c5-ce2d-4035-9a84-5e8af83fcb16-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "1753a84a-2fc4-4d07-9845-a64cf894afde-attachment.txt", "type": "text/plain"}], "start": 1756431496134, "stop": 1756431496190}], "attachments": [{"name": "时区处理", "source": "acdf4ab9-898e-4d53-b9a1-c64b80270728-attachment.txt", "type": "text/plain"}], "start": 1756431496133, "stop": 1756431496190}, {"name": "轮询中（已等待4.3秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "05a86e7e-0d6e-46b0-9690-be4c19e29013-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "38ce7964-f17b-483d-bc3d-e356effe9dc2-attachment.txt", "type": "text/plain"}], "start": 1756431496191, "stop": 1756431496192}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "7b5295cd-ec14-4e32-b817-33141f4fb29a-attachment.txt", "type": "text/plain"}], "start": 1756431496192, "stop": 1756431496193}, {"name": "数据首次稳定", "status": "passed", "attachments": [{"name": "状态说明", "source": "52f78025-199e-429a-a731-f10f571a2f2a-attachment.txt", "type": "text/plain"}], "start": 1756431496193, "stop": 1756431496193}, {"name": "带时区转换查询（目标时区: +05:00）", "status": "passed", "steps": [{"name": "执行数据库查询", "status": "passed", "attachments": [{"name": "执行SQL", "source": "71c9f397-ed37-4ab1-b0a5-61470af5f2e3-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "db3f1289-623c-4835-9482-e96bb67d4969-attachment.txt", "type": "text/plain"}], "start": 1756431498254, "stop": 1756431498308}], "attachments": [{"name": "时区处理", "source": "a46ab9e8-ed37-4a5c-8a1a-090776e0edd4-attachment.txt", "type": "text/plain"}], "start": 1756431498253, "stop": 1756431498308}, {"name": "轮询中（已等待6.5秒）", "status": "passed", "attachments": [{"name": "当前状态", "source": "8a453f7d-6e5b-4d81-9a2e-1e4ff8a928b0-attachment.txt", "type": "text/plain"}, {"name": "超时倒计时", "source": "181ae1cd-51fd-4497-a2fa-c95d9ebdde84-attachment.txt", "type": "text/plain"}], "start": 1756431498308, "stop": 1756431498308}, {"name": "判断结果稳定性", "status": "passed", "attachments": [{"name": "判断结果", "source": "56b986d5-91ff-4dd7-846d-91ec3ad8d16b-attachment.txt", "type": "text/plain"}], "start": 1756431498308, "stop": 1756431498309}, {"name": "数据稳定达标", "status": "passed", "attachments": [{"name": "结果说明", "source": "8f3e3c82-815f-4555-8c80-9dfe964e5f15-attachment.txt", "type": "text/plain"}], "start": 1756431498309, "stop": 1756431498310}, {"name": "带时区查询最终结果", "status": "passed", "attachments": [{"name": "结果预览", "source": "b9e71a51-0cb9-4d15-b380-b25efe2957c6-attachment.json", "type": "application/json"}], "start": 1756431498310, "stop": 1756431498310}], "attachments": [{"name": "执行SQL", "source": "a6c98a0b-9020-46c8-98ce-99d3f9310297-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "d2afa131-3cd1-4b5d-b5c4-8c6ca4363cac-attachment.txt", "type": "text/plain"}, {"name": "时区偏移量（小时）", "source": "e1cd0649-a4ec-4e3f-b95c-16a1e8c0bff6-attachment.txt", "type": "text/plain"}], "start": 1756431491845, "stop": 1756431498310}], "start": 1756431491845, "stop": 1756431498310}, {"name": "执行复制平仓数据校验-2个订单", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 3\n操作: ==\n预期: 2\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderClose.py\", line 2721, in test_copy_verify_close_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "验证订单数量", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 3\n操作: ==\n预期: 2\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\test_cloudTrader\\test_cloudOrderClose.py\", line 2721, in test_copy_verify_close_db\n    self.verify_data(\n  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "steps": [{"name": "校验: 平仓的订单数量应该是2", "status": "failed", "statusDetails": {"message": "Failed: 校验失败: 平仓的订单数量应该是2\n\n实际: 3\n操作: ==\n预期: 2\n\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_825\\commons\\api_base.py\", line 1305, in verify_data\n    pytest.fail(f\"校验失败: {message}\\n{detail_msg}\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "订单数量详情", "source": "54155125-8aa4-4344-921d-fa556503073e-attachment.attach", "type": "text/plain"}], "start": 1756431498310, "stop": 1756431498310}], "start": 1756431498310, "stop": 1756431498310}], "start": 1756431498310, "stop": 1756431498310}], "attachments": [{"name": "log", "source": "9f61b6e2-4c8d-4463-bc79-8ec1d45d8240-attachment.txt", "type": "text/plain"}], "start": 1756431491845, "stop": 1756431498311, "uuid": "b3b8e0d6-aa7a-4606-82ab-6bf10ff25f91", "historyId": "669441f1a6ab35071715dccf054b4e9e", "testCaseId": "669441f1a6ab35071715dccf054b4e9e", "fullName": "test_cloudTrader.test_cloudOrderClose.TestMasOrderSend11#test_copy_verify_close_db", "labels": [{"name": "feature", "value": "云策略复制下单-平仓的功能校验"}, {"name": "story", "value": "场景11：平仓的功能校验-全平订单"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderClose"}, {"name": "subSuite", "value": "TestCloudClose"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "21760-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderClose"}]}