{
  "uid" : "47f2eb42cb98a1cf",
  "name" : "数据库校验-VPS下单-下单指令",
  "fullName" : "test_youhua.test_masOrderSend.TestMasordersend#test_dbbargain_masOrderSend",
  "historyId" : "f3f269284dc01cd9722b0a8f752b4091",
  "time" : {
    "start" : 1751252044814,
    "stop" : 1751252044955,
    "duration" : 141
  },
  "status" : "failed",
  "statusMessage" : "Failed: 下单失败status状态应该是1，实际状态为: 0",
  "statusTrace" : "self = <lingkuan_youhua9.test_youhua.test_masOrderSend.TestMasordersend object at 0x0000020D4251EFA0>\nvar_manager = <lingkuan_youhua9.commons.variable_manager.VariableManager object at 0x0000020D42536220>\ndb_transaction = <pymysql.connections.Connection object at 0x0000020D4259F5B0>\n\n    @allure.title(\"数据库校验-VPS下单-下单指令\")\n    def test_dbbargain_masOrderSend(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否有下单\"):\n            masOrderSend = var_manager.get_variable(\"masOrderSend\")\n            vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n    \n            table_name = masOrderSend[\"table\"]\n            symbol = masOrderSend[\"symbol\"]\n    \n            sql = f\"\"\"\n            SELECT *\n            FROM {table_name}\n            WHERE symbol LIKE %s\n              AND master_order_status = %s\n              AND type = %s\n              AND min_lot_size = %s\n              AND max_lot_size = %s\n              AND remark = %s\n              AND total_lots = %s\n              AND trader_id = %s\n            \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                \"0\",\n                masOrderSend[\"type\"],\n                masOrderSend[\"endSize\"],\n                masOrderSend[\"startSize\"],\n                masOrderSend[\"remark\"],\n                masOrderSend[\"totalSzie\"],\n                vps_trader_id\n            )\n    \n            db_data = self.wait_for_database_record(\n                db_transaction,\n                sql,\n                params,\n                time_field=\"create_time\",\n                time_range=MYSQL_TIME,\n                timeout=WAIT_TIMEOUT,\n                poll_interval=POLL_INTERVAL\n            )\n    \n        with allure.step(\"2. 判断是否下单成功\"):\n            # 定义验证函数\n            def verify_close_status():\n                if not db_data:\n                    pytest.fail(\"数据库查询结果为空，无法提取数据\")\n                order_no = db_data[0][\"order_no\"]\n                logging.info(f\"获取策略账号下单的订单号: {order_no}\")\n                var_manager.set_runtime_variable(\"order_no\", order_no)\n    \n                status = db_data[0][\"status\"]\n                if status != 1:\n                    pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\n    \n            # 执行验证\n            try:\n>               verify_close_status()\n\ntest_youhua\\test_masOrderSend.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def verify_close_status():\n        if not db_data:\n            pytest.fail(\"数据库查询结果为空，无法提取数据\")\n        order_no = db_data[0][\"order_no\"]\n        logging.info(f\"获取策略账号下单的订单号: {order_no}\")\n        var_manager.set_runtime_variable(\"order_no\", order_no)\n    \n        status = db_data[0][\"status\"]\n        if status != 1:\n>           pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\nE           Failed: 下单失败status状态应该是1，实际状态为: 0\n\ntest_youhua\\test_masOrderSend.py:101: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1751252044545,
      "stop" : 1751252044768,
      "duration" : 223
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1751252044768,
      "stop" : 1751252044813,
      "duration" : 45
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1751252044545,
      "stop" : 1751252044545,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1751252043738,
      "stop" : 1751252043739,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1751252043738,
      "stop" : 1751252043738,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Failed: 下单失败status状态应该是1，实际状态为: 0",
    "statusTrace" : "self = <lingkuan_youhua9.test_youhua.test_masOrderSend.TestMasordersend object at 0x0000020D4251EFA0>\nvar_manager = <lingkuan_youhua9.commons.variable_manager.VariableManager object at 0x0000020D42536220>\ndb_transaction = <pymysql.connections.Connection object at 0x0000020D4259F5B0>\n\n    @allure.title(\"数据库校验-VPS下单-下单指令\")\n    def test_dbbargain_masOrderSend(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否有下单\"):\n            masOrderSend = var_manager.get_variable(\"masOrderSend\")\n            vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n    \n            table_name = masOrderSend[\"table\"]\n            symbol = masOrderSend[\"symbol\"]\n    \n            sql = f\"\"\"\n            SELECT *\n            FROM {table_name}\n            WHERE symbol LIKE %s\n              AND master_order_status = %s\n              AND type = %s\n              AND min_lot_size = %s\n              AND max_lot_size = %s\n              AND remark = %s\n              AND total_lots = %s\n              AND trader_id = %s\n            \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                \"0\",\n                masOrderSend[\"type\"],\n                masOrderSend[\"endSize\"],\n                masOrderSend[\"startSize\"],\n                masOrderSend[\"remark\"],\n                masOrderSend[\"totalSzie\"],\n                vps_trader_id\n            )\n    \n            db_data = self.wait_for_database_record(\n                db_transaction,\n                sql,\n                params,\n                time_field=\"create_time\",\n                time_range=MYSQL_TIME,\n                timeout=WAIT_TIMEOUT,\n                poll_interval=POLL_INTERVAL\n            )\n    \n        with allure.step(\"2. 判断是否下单成功\"):\n            # 定义验证函数\n            def verify_close_status():\n                if not db_data:\n                    pytest.fail(\"数据库查询结果为空，无法提取数据\")\n                order_no = db_data[0][\"order_no\"]\n                logging.info(f\"获取策略账号下单的订单号: {order_no}\")\n                var_manager.set_runtime_variable(\"order_no\", order_no)\n    \n                status = db_data[0][\"status\"]\n                if status != 1:\n                    pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\n    \n            # 执行验证\n            try:\n>               verify_close_status()\n\ntest_youhua\\test_masOrderSend.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def verify_close_status():\n        if not db_data:\n            pytest.fail(\"数据库查询结果为空，无法提取数据\")\n        order_no = db_data[0][\"order_no\"]\n        logging.info(f\"获取策略账号下单的订单号: {order_no}\")\n        var_manager.set_runtime_variable(\"order_no\", order_no)\n    \n        status = db_data[0][\"status\"]\n        if status != 1:\n>           pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\nE           Failed: 下单失败status状态应该是1，实际状态为: 0\n\ntest_youhua\\test_masOrderSend.py:101: Failed",
    "steps" : [ {
      "name" : "1. 查询数据库验证是否有下单",
      "time" : {
        "start" : 1751252044814,
        "stop" : 1751252044953,
        "duration" : 139
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录出现",
        "time" : {
          "start" : 1751252044814,
          "stop" : 1751252044953,
          "duration" : 139
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "63a8a4232712ffa3",
          "name" : "条件检查日志",
          "source" : "63a8a4232712ffa3.txt",
          "type" : "text/plain",
          "size" : 850
        }, {
          "uid" : "1dc18db1ad27d0a0",
          "name" : "最终结果",
          "source" : "1dc18db1ad27d0a0.txt",
          "type" : "text/plain",
          "size" : 29
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 判断是否下单成功",
      "time" : {
        "start" : 1751252044953,
        "stop" : 1751252044954,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "Failed: 下单失败status状态应该是1，实际状态为: 0\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_youhua9\\test_youhua\\test_masOrderSend.py\", line 105, in test_dbbargain_masOrderSend\n    verify_close_status()\n  File \"D:\\pycharm_test\\lingkuan_youhua9\\test_youhua\\test_masOrderSend.py\", line 101, in verify_close_status\n    pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\n  File \"D:\\pycharm_test\\.venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 198, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "957a7c2b229ddb8",
      "name" : "log",
      "source" : "957a7c2b229ddb8.txt",
      "type" : "text/plain",
      "size" : 1083
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1751252048537,
      "stop" : 1751252048537,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1751252045047,
      "stop" : 1751252045112,
      "duration" : 65
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1751252048538,
      "stop" : 1751252048539,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS交易下单"
  }, {
    "name" : "parentSuite",
    "value" : "test_youhua"
  }, {
    "name" : "suite",
    "value" : "test_masOrderSend"
  }, {
    "name" : "subSuite",
    "value" : "TestMasordersend"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "6876-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_youhua.test_masOrderSend"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "47f2eb42cb98a1cf.json",
  "parameterValues" : [ ]
}