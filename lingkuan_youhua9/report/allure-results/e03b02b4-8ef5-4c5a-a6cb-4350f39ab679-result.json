{"name": "数据库校验-VPS下单-下单指令", "status": "failed", "statusDetails": {"message": "Failed: 下单失败status状态应该是1，实际状态为: 0", "trace": "self = <lingkuan_youhua9.test_youhua.test_masOrderSend.TestMasordersend object at 0x0000020EA6B2C8B0>\nvar_manager = <lingkuan_youhua9.commons.variable_manager.VariableManager object at 0x0000020EA6B431F0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000020EA6BAF6A0>\n\n    @allure.title(\"数据库校验-VPS下单-下单指令\")\n    def test_dbbargain_masOrderSend(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否有下单\"):\n            masOrderSend = var_manager.get_variable(\"masOrderSend\")\n            vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n    \n            table_name = masOrderSend[\"table\"]\n            symbol = masOrderSend[\"symbol\"]\n    \n            sql = f\"\"\"\n            SELECT *\n            FROM {table_name}\n            WHERE symbol LIKE %s\n              AND master_order_status = %s\n              AND type = %s\n              AND min_lot_size = %s\n              AND max_lot_size = %s\n              AND remark = %s\n              AND total_lots = %s\n              AND trader_id = %s\n            \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                \"0\",\n                masOrderSend[\"type\"],\n                masOrderSend[\"endSize\"],\n                masOrderSend[\"startSize\"],\n                masOrderSend[\"remark\"],\n                masOrderSend[\"totalSzie\"],\n                vps_trader_id\n            )\n    \n            db_data = self.wait_for_database_record(\n                db_transaction,\n                sql,\n                params,\n                time_field=\"create_time\",\n                time_range=MYSQL_TIME,\n                timeout=WAIT_TIMEOUT,\n                poll_interval=POLL_INTERVAL\n            )\n    \n        with allure.step(\"2. 判断是否下单成功\"):\n            # 定义验证函数\n            def verify_close_status():\n                if not db_data:\n                    pytest.fail(\"数据库查询结果为空，无法提取数据\")\n                order_no = db_data[0][\"order_no\"]\n                logging.info(f\"获取策略账号下单的订单号: {order_no}\")\n                var_manager.set_runtime_variable(\"order_no\", order_no)\n    \n                status = db_data[0][\"status\"]\n                if status != 1:\n                    pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\n    \n            # 执行验证\n            try:\n>               verify_close_status()\n\ntest_youhua\\test_masOrderSend.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def verify_close_status():\n        if not db_data:\n            pytest.fail(\"数据库查询结果为空，无法提取数据\")\n        order_no = db_data[0][\"order_no\"]\n        logging.info(f\"获取策略账号下单的订单号: {order_no}\")\n        var_manager.set_runtime_variable(\"order_no\", order_no)\n    \n        status = db_data[0][\"status\"]\n        if status != 1:\n>           pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\nE           Failed: 下单失败status状态应该是1，实际状态为: 0\n\ntest_youhua\\test_masOrderSend.py:101: Failed"}, "steps": [{"name": "1. 查询数据库验证是否有下单", "status": "passed", "steps": [{"name": "等待数据库记录出现", "status": "passed", "attachments": [{"name": "条件检查日志", "source": "342cb959-0555-42a7-9dc4-aa9e34f2db25-attachment.txt", "type": "text/plain"}, {"name": "最终结果", "source": "04eebe32-64b1-453f-a705-7fee41408009-attachment.txt", "type": "text/plain"}], "start": 1751025015814, "stop": 1751025015933}], "start": 1751025015814, "stop": 1751025015933}, {"name": "2. 判断是否下单成功", "status": "failed", "statusDetails": {"message": "Failed: 下单失败status状态应该是1，实际状态为: 0\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_youhua9\\test_youhua\\test_masOrderSend.py\", line 105, in test_dbbargain_masOrderSend\n    verify_close_status()\n  File \"D:\\pycharm_test\\lingkuan_youhua9\\test_youhua\\test_masOrderSend.py\", line 101, in verify_close_status\n    pytest.fail(f\"下单失败status状态应该是1，实际状态为: {status}\")\n  File \"D:\\pycharm_test\\.venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 198, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "start": 1751025015933, "stop": 1751025015934}], "attachments": [{"name": "log", "source": "40d7b16f-d0c9-4c15-8176-fb040a0da535-attachment.txt", "type": "text/plain"}], "start": 1751025015814, "stop": 1751025015935, "uuid": "9e4067ac-d902-412e-b68c-cf1ccb511c5e", "historyId": "f3f269284dc01cd9722b0a8f752b4091", "testCaseId": "f3f269284dc01cd9722b0a8f752b4091", "fullName": "test_youhua.test_masOrderSend.TestMasordersend#test_dbbargain_masOrderSend", "labels": [{"name": "feature", "value": "VPS交易下单"}, {"name": "parentSuite", "value": "test_youhua"}, {"name": "suite", "value": "test_masOrderSend"}, {"name": "subSuite", "value": "TestMasordersend"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "27744-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_youhua.test_masOrderSend"}]}