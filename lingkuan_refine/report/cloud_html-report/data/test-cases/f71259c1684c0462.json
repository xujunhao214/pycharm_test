{
  "uid" : "f71259c1684c0462",
  "name" : "数据库校验-云策略列表-修改云跟单账号是否成功",
  "fullName" : "test_cloudTrader.test_cloudOrderSend_level.TestcloudTrader_level#test_dbcloudTrader_cloudBatchUpdate",
  "historyId" : "fdf31b1b54154c7ba262015b80fde6aa",
  "time" : {
    "start" : 1755683048063,
    "stop" : 1755683054478,
    "duration" : 6415
  },
  "description" : "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 修改云跟单账号开仓-关闭\n  2. 进行开仓\n  3. 跟单账号开仓失败，有漏单数据，把redis数据和MySQL数据进行校验\n  4. 修改云跟单账号开仓-开启\n  5. 进行补单操作，然后平仓\n- 预期结果：云跟单账号开仓-关闭，有漏单数据\n",
  "descriptionHtml" : "<h3>用例说明</h3>\n<ul>\n<li>前置条件：有云策略和云跟单</li>\n<li>操作步骤：\n<ol>\n<li>修改云跟单账号开仓-关闭</li>\n<li>进行开仓</li>\n<li>跟单账号开仓失败，有漏单数据，把redis数据和MySQL数据进行校验</li>\n<li>修改云跟单账号开仓-开启</li>\n<li>进行补单操作，然后平仓</li>\n</ol>\n</li>\n<li>预期结果：云跟单账号开仓-关闭，有漏单数据</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: follow_close的状态应该是0，实际是：1\nassert 1 == 0",
  "statusTrace" : "self = <lingkuan_refine.test_cloudTrader.test_cloudOrderSend_level.TestcloudTrader_level object at 0x00000203D3FA5E20>\nvar_manager = <lingkuan_refine.commons.variable_manager.VariableManager object at 0x00000203D4336340>\ndb_transaction = <pymysql.connections.Connection object at 0x00000203D41D86D0>\n\n    @allure.title(\"数据库校验-云策略列表-修改云跟单账号是否成功\")\n    def test_dbcloudTrader_cloudBatchUpdate(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否修改成功\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = f\"SELECT * FROM follow_cloud_trader WHERE account = %s\"\n            params = (cloudTrader_user_accounts_4,)\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params\n            )\n        with allure.step(\"2. 对数据进行校验\"):\n            follow_close = db_data[0][\"follow_close\"]\n>           assert follow_close == 0, f\"follow_close的状态应该是0，实际是：{follow_close}\"\nE           AssertionError: follow_close的状态应该是0，实际是：1\nE           assert 1 == 0\n\ntest_cloudTrader\\test_cloudOrderSend_level.py:100: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1755683047631,
      "stop" : 1755683048062,
      "duration" : 431
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755683048062,
      "stop" : 1755683048062,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 修改云跟单账号开仓-关闭\n  2. 进行开仓\n  3. 跟单账号开仓失败，有漏单数据，把redis数据和MySQL数据进行校验\n  4. 修改云跟单账号开仓-开启\n  5. 进行补单操作，然后平仓\n- 预期结果：云跟单账号开仓-关闭，有漏单数据\n",
    "status" : "failed",
    "statusMessage" : "AssertionError: follow_close的状态应该是0，实际是：1\nassert 1 == 0",
    "statusTrace" : "self = <lingkuan_refine.test_cloudTrader.test_cloudOrderSend_level.TestcloudTrader_level object at 0x00000203D3FA5E20>\nvar_manager = <lingkuan_refine.commons.variable_manager.VariableManager object at 0x00000203D4336340>\ndb_transaction = <pymysql.connections.Connection object at 0x00000203D41D86D0>\n\n    @allure.title(\"数据库校验-云策略列表-修改云跟单账号是否成功\")\n    def test_dbcloudTrader_cloudBatchUpdate(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否修改成功\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = f\"SELECT * FROM follow_cloud_trader WHERE account = %s\"\n            params = (cloudTrader_user_accounts_4,)\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params\n            )\n        with allure.step(\"2. 对数据进行校验\"):\n            follow_close = db_data[0][\"follow_close\"]\n>           assert follow_close == 0, f\"follow_close的状态应该是0，实际是：{follow_close}\"\nE           AssertionError: follow_close的状态应该是0，实际是：1\nE           assert 1 == 0\n\ntest_cloudTrader\\test_cloudOrderSend_level.py:100: AssertionError",
    "steps" : [ {
      "name" : "1. 查询数据库验证是否修改成功",
      "time" : {
        "start" : 1755683048063,
        "stop" : 1755683054478,
        "duration" : 6415
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755683048063,
          "stop" : 1755683048063,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755683054476,
          "stop" : 1755683054477,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "980c5db7cfea8262",
          "name" : "执行SQL",
          "source" : "980c5db7cfea8262.txt",
          "type" : "text/plain",
          "size" : 52
        }, {
          "uid" : "6f171aca60ac3817",
          "name" : "SQL参数",
          "source" : "6f171aca60ac3817.txt",
          "type" : "text/plain",
          "size" : 11
        }, {
          "uid" : "b8eede5e94e6d846",
          "name" : "查询结果（共2条，显示前50条）",
          "source" : "b8eede5e94e6d846.json",
          "type" : "application/json",
          "size" : 1808
        } ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "af090a735bac724c",
        "name" : "等待结果",
        "source" : "af090a735bac724c.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "2. 对数据进行校验",
      "time" : {
        "start" : 1755683054478,
        "stop" : 1755683054478,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: follow_close的状态应该是0，实际是：1\nassert 1 == 0\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_refine\\test_cloudTrader\\test_cloudOrderSend_level.py\", line 100, in test_dbcloudTrader_cloudBatchUpdate\n    assert follow_close == 0, f\"follow_close的状态应该是0，实际是：{follow_close}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "524265621473c3da",
      "name" : "log",
      "source" : "524265621473c3da.txt",
      "type" : "text/plain",
      "size" : 12563
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 5,
    "hasContent" : true,
    "stepsCount" : 4
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1755683054483,
      "stop" : 1755683054483,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755683054482,
      "stop" : 1755683054483,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "交易下单-云策略复制下单-漏开"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudOrderSend_level"
  }, {
    "name" : "subSuite",
    "value" : "TestcloudTrader_level"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "46924-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudOrderSend_level"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f71259c1684c0462.json",
  "parameterValues" : [ ]
}