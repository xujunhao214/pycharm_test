{
  "uid" : "976692926e5c00d0",
  "name" : "数据库校验-批量挂靠VPS跟单（后9个账号）",
  "fullName" : "test_cloudTrader.test_create.TestCreate_cloudTrader#test_dbimport_addSlave",
  "historyId" : "9096540b4712077bc0bb74ca9894ee36",
  "time" : {
    "start" : 1756180587045,
    "stop" : 1756180591646,
    "duration" : 4601
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 账号 300160 净值异常：预期euqit≠0，实际=0.0\nassert 0.0 > 0",
  "statusTrace" : "self = <lingkuan_refine.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001DBDEDAAA30>\nvar_manager = <lingkuan_refine.commons.variable_manager.VariableManager object at 0x000001DBDEDBBC10>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DBDEE19D90>\n\n    @allure.title(\"数据库校验-批量挂靠VPS跟单（后9个账号）\")\n    def test_dbimport_addSlave(self, var_manager, db_transaction):\n        # 1. 获取后9个账号的账号名（使用range直接循环索引1-9）\n        all_accounts_cloudTrader = []\n        cloudTrader_user_count = var_manager.get_variable(\"cloudTrader_user_count\")\n        for i in range(2, cloudTrader_user_count + 1):  # 循环索引1-9（共9次）\n            cloudTrader_account_var_name = f\"cloudTrader_user_accounts_{i}\"\n            cloudTrader_account = var_manager.get_variable(cloudTrader_account_var_name)\n            if not cloudTrader_account:\n                pytest.fail(f\"未找到第{i}个账号（变量：{cloudTrader_account_var_name}）\")\n            all_accounts_cloudTrader.append(cloudTrader_account)\n        print(f\"将校验的后9个账号：{all_accounts_cloudTrader}\")\n    \n        # 2. 逐个校验后9个账号的数据库记录（后续代码与之前一致）\n        all_ids_cloudTrader = []\n        for idx, cloudTrader_account in enumerate(all_accounts_cloudTrader, 1):  # idx从1到9\n            with allure.step(f\"验证第{idx}个账号（{cloudTrader_account}）的数据库记录\"):\n                # 数据库查询和校验逻辑与之前一致\n                sql = f\"SELECT * FROM follow_trader WHERE account = %s\"\n                params = (cloudTrader_account,)\n    \n                db_data = self.query_database_with_time(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"account ASC\"\n    \n                )\n                print(f\"验证第{idx}个账号（{cloudTrader_account}）的数据库记录\")\n    \n                if not db_data:\n                    pytest.fail(f\"账号 {cloudTrader_account} 在主表中未找到记录\")\n    \n                # 保存账号ID并校验状态/净值/订阅表（代码与之前一致）\n                cloudTrader_vps_id = db_data[0][\"id\"]\n                all_ids_cloudTrader.append(cloudTrader_vps_id)\n                var_manager.set_runtime_variable(f\"cloudTrader_vps_ids_{idx}\", cloudTrader_vps_id)\n                print(\n                    f\"账号 {cloudTrader_account} 的ID为：{cloudTrader_vps_id}，已保存到变量 cloudTrader_vps_ids_{idx}\")\n    \n            with allure.step(\"校验账号状态和净值\"):\n                status = db_data[0][\"status\"]\n                assert status == 0, f\"账号 {cloudTrader_account} 状态异常：预期status=0，实际={status}\"\n                logging.info(f\"账号 {cloudTrader_account} 状态异常：预期status=0，实际={status}\")\n    \n                euqit = db_data[0][\"euqit\"]\n>               assert euqit > 0, f\"账号 {cloudTrader_account} 净值异常：预期euqit≠0，实际={euqit}\"\nE               AssertionError: 账号 300160 净值异常：预期euqit≠0，实际=0.0\nE               assert 0.0 > 0\n\ntest_cloudTrader\\test_create.py:289: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_transaction",
    "time" : {
      "start" : 1756180587045,
      "stop" : 1756180587045,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1756180586810,
      "stop" : 1756180587045,
      "duration" : 235
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 账号 300160 净值异常：预期euqit≠0，实际=0.0\nassert 0.0 > 0",
    "statusTrace" : "self = <lingkuan_refine.test_cloudTrader.test_create.TestCreate_cloudTrader object at 0x000001DBDEDAAA30>\nvar_manager = <lingkuan_refine.commons.variable_manager.VariableManager object at 0x000001DBDEDBBC10>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DBDEE19D90>\n\n    @allure.title(\"数据库校验-批量挂靠VPS跟单（后9个账号）\")\n    def test_dbimport_addSlave(self, var_manager, db_transaction):\n        # 1. 获取后9个账号的账号名（使用range直接循环索引1-9）\n        all_accounts_cloudTrader = []\n        cloudTrader_user_count = var_manager.get_variable(\"cloudTrader_user_count\")\n        for i in range(2, cloudTrader_user_count + 1):  # 循环索引1-9（共9次）\n            cloudTrader_account_var_name = f\"cloudTrader_user_accounts_{i}\"\n            cloudTrader_account = var_manager.get_variable(cloudTrader_account_var_name)\n            if not cloudTrader_account:\n                pytest.fail(f\"未找到第{i}个账号（变量：{cloudTrader_account_var_name}）\")\n            all_accounts_cloudTrader.append(cloudTrader_account)\n        print(f\"将校验的后9个账号：{all_accounts_cloudTrader}\")\n    \n        # 2. 逐个校验后9个账号的数据库记录（后续代码与之前一致）\n        all_ids_cloudTrader = []\n        for idx, cloudTrader_account in enumerate(all_accounts_cloudTrader, 1):  # idx从1到9\n            with allure.step(f\"验证第{idx}个账号（{cloudTrader_account}）的数据库记录\"):\n                # 数据库查询和校验逻辑与之前一致\n                sql = f\"SELECT * FROM follow_trader WHERE account = %s\"\n                params = (cloudTrader_account,)\n    \n                db_data = self.query_database_with_time(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"account ASC\"\n    \n                )\n                print(f\"验证第{idx}个账号（{cloudTrader_account}）的数据库记录\")\n    \n                if not db_data:\n                    pytest.fail(f\"账号 {cloudTrader_account} 在主表中未找到记录\")\n    \n                # 保存账号ID并校验状态/净值/订阅表（代码与之前一致）\n                cloudTrader_vps_id = db_data[0][\"id\"]\n                all_ids_cloudTrader.append(cloudTrader_vps_id)\n                var_manager.set_runtime_variable(f\"cloudTrader_vps_ids_{idx}\", cloudTrader_vps_id)\n                print(\n                    f\"账号 {cloudTrader_account} 的ID为：{cloudTrader_vps_id}，已保存到变量 cloudTrader_vps_ids_{idx}\")\n    \n            with allure.step(\"校验账号状态和净值\"):\n                status = db_data[0][\"status\"]\n                assert status == 0, f\"账号 {cloudTrader_account} 状态异常：预期status=0，实际={status}\"\n                logging.info(f\"账号 {cloudTrader_account} 状态异常：预期status=0，实际={status}\")\n    \n                euqit = db_data[0][\"euqit\"]\n>               assert euqit > 0, f\"账号 {cloudTrader_account} 净值异常：预期euqit≠0，实际={euqit}\"\nE               AssertionError: 账号 300160 净值异常：预期euqit≠0，实际=0.0\nE               assert 0.0 > 0\n\ntest_cloudTrader\\test_create.py:289: AssertionError",
    "steps" : [ {
      "name" : "验证第1个账号（300160）的数据库记录",
      "time" : {
        "start" : 1756180587045,
        "stop" : 1756180591646,
        "duration" : 4601
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "轮询等待数据稳定（超时: 30秒，稳定期: 2秒）",
        "time" : {
          "start" : 1756180587045,
          "stop" : 1756180587045,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "hasContent" : false,
        "stepsCount" : 0,
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1756180591644,
          "stop" : 1756180591645,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "e889b9031f053593",
          "name" : "执行SQL",
          "source" : "e889b9031f053593.txt",
          "type" : "text/plain",
          "size" : 46
        }, {
          "uid" : "9ee2c4893691eee1",
          "name" : "SQL参数",
          "source" : "9ee2c4893691eee1.txt",
          "type" : "text/plain",
          "size" : 11
        }, {
          "uid" : "b1caf43b8fd42263",
          "name" : "查询结果（共1条，显示前50条）",
          "source" : "b1caf43b8fd42263.json",
          "type" : "application/json",
          "size" : 1005
        } ],
        "parameters" : [ ],
        "hasContent" : true,
        "stepsCount" : 0,
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ {
        "uid" : "b265f17d7ed6e8a",
        "name" : "等待结果",
        "source" : "b265f17d7ed6e8a.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 2,
      "attachmentsCount" : 4,
      "shouldDisplayMessage" : false
    }, {
      "name" : "校验账号状态和净值",
      "time" : {
        "start" : 1756180591646,
        "stop" : 1756180591646,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 账号 300160 净值异常：预期euqit≠0，实际=0.0\nassert 0.0 > 0\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_refine\\test_cloudTrader\\test_create.py\", line 289, in test_dbimport_addSlave\n    assert euqit > 0, f\"账号 {cloudTrader_account} 净值异常：预期euqit≠0，实际={euqit}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "647955b714f3817a",
      "name" : "log",
      "source" : "647955b714f3817a.txt",
      "type" : "text/plain",
      "size" : 9803
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 4,
    "attachmentsCount" : 5,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1756180591653,
      "stop" : 1756180591653,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1756180591654,
      "stop" : 1756180591654,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "数据管理-创建数据-为云策略准备"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate_cloudTrader"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "23736-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "976692926e5c00d0.json",
  "parameterValues" : [ ]
}