{
  "uid" : "d548d007105ee95f",
  "name" : "数据库校验-复制下单平仓数据",
  "fullName" : "test_cloudTrader.test_cloudOrderClose.TestMasOrderSend1#test_copy_verify_close_db",
  "historyId" : "73395acc5aa29bc5d111d6a1646c96c4",
  "time" : {
    "start" : 1755682006569,
    "stop" : 1755682019367,
    "duration" : 12798
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总订单4\n      2. 进行平仓，校验币种，币种错误应该没有开仓订单\n      3. 进行平仓，点击停止\n      4. 校验平仓的订单数，应该不等于开仓总订单\n      5. 进行平仓\n    - 预期结果：平仓的停止功能正确\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有云策略和云跟单\n  1. 进行开仓，手数范围0.1-1，总订单4\n  2. 进行平仓，校验币种，币种错误应该没有开仓订单\n  3. 进行平仓，点击停止\n  4. 校验平仓的订单数，应该不等于开仓总订单\n  5. 进行平仓\n- 预期结果：平仓的停止功能正确\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 复制平仓数据应该不等于开仓总订单数量\nassert 4 != 4\n +  where 4 = len([{'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 46651, ...}, {'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 89583, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 16406, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 79622, ...}])",
  "statusTrace" : "self = <lingkuan_refine.test_cloudTrader.test_cloudOrderClose.TestCloudCoreFunctionality.TestMasOrderSend1 object at 0x00000203D3F68490>\nvar_manager = <lingkuan_refine.commons.variable_manager.VariableManager object at 0x00000203D3FDC760>\ndb_transaction = <pymysql.connections.Connection object at 0x00000203D42CD640>\n\n    @allure.title(\"数据库校验-复制下单平仓数据\")\n    def test_copy_verify_close_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n            \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.wait_for_database_record_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验-订单不等于开仓总订单数量\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制平仓校验\")\n    \n>           assert len(db_data) != 4, \"复制平仓数据应该不等于开仓总订单数量\"\nE           AssertionError: 复制平仓数据应该不等于开仓总订单数量\nE           assert 4 != 4\nE            +  where 4 = len([{'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 46651, ...}, {'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 89583, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 16406, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 79622, ...}])\n\ntest_cloudTrader\\test_cloudOrderClose.py:258: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755682006569,
      "stop" : 1755682006569,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755682006138,
      "stop" : 1755682006568,
      "duration" : 430
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总订单4\n      2. 进行平仓，校验币种，币种错误应该没有开仓订单\n      3. 进行平仓，点击停止\n      4. 校验平仓的订单数，应该不等于开仓总订单\n      5. 进行平仓\n    - 预期结果：平仓的停止功能正确\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 复制平仓数据应该不等于开仓总订单数量\nassert 4 != 4\n +  where 4 = len([{'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 46651, ...}, {'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 89583, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 16406, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 79622, ...}])",
    "statusTrace" : "self = <lingkuan_refine.test_cloudTrader.test_cloudOrderClose.TestCloudCoreFunctionality.TestMasOrderSend1 object at 0x00000203D3F68490>\nvar_manager = <lingkuan_refine.commons.variable_manager.VariableManager object at 0x00000203D3FDC760>\ndb_transaction = <pymysql.connections.Connection object at 0x00000203D42CD640>\n\n    @allure.title(\"数据库校验-复制下单平仓数据\")\n    def test_copy_verify_close_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n            \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.wait_for_database_record_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验-订单不等于开仓总订单数量\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法进行复制平仓校验\")\n    \n>           assert len(db_data) != 4, \"复制平仓数据应该不等于开仓总订单数量\"\nE           AssertionError: 复制平仓数据应该不等于开仓总订单数量\nE           assert 4 != 4\nE            +  where 4 = len([{'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 46651, ...}, {'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 89583, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 16406, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 79622, ...}])\n\ntest_cloudTrader\\test_cloudOrderClose.py:258: AssertionError",
    "steps" : [ {
      "name" : "查询复制平仓订单数据",
      "time" : {
        "start" : 1755682006569,
        "stop" : 1755682019366,
        "duration" : 12797
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（时区: +05:00，超时: 30秒）",
        "time" : {
          "start" : 1755682006569,
          "stop" : 1755682006569,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0,
        "hasContent" : false,
        "stepsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755682019364,
          "stop" : 1755682019366,
          "duration" : 2
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "7f2234993194f57a",
          "name" : "执行SQL",
          "source" : "7f2234993194f57a.txt",
          "type" : "text/plain",
          "size" : 1081
        }, {
          "uid" : "f0a3514a4974c085",
          "name" : "SQL参数",
          "source" : "f0a3514a4974c085.txt",
          "type" : "text/plain",
          "size" : 21
        }, {
          "uid" : "efc1923c2d1db195",
          "name" : "查询结果（共4条，显示前50条）",
          "source" : "efc1923c2d1db195.json",
          "type" : "application/json",
          "size" : 1714
        } ],
        "parameters" : [ ],
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "ed167c8fe5b5b7cc",
        "name" : "等待结果",
        "source" : "ed167c8fe5b5b7cc.txt",
        "type" : "text/plain",
        "size" : 41
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4,
      "hasContent" : true,
      "stepsCount" : 2
    }, {
      "name" : "执行复制平仓数据校验-订单不等于开仓总订单数量",
      "time" : {
        "start" : 1755682019366,
        "stop" : 1755682019367,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 复制平仓数据应该不等于开仓总订单数量\nassert 4 != 4\n +  where 4 = len([{'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 46651, ...}, {'close_no': '1416740749609', 'create_time': '2025-08-20 17:26:40', 'foi.order_no': '1416740749609', 'magical': 89583, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 16406, ...}, {'close_no': '2034426785085', 'create_time': '2025-08-20 17:26:03', 'foi.order_no': '2034426785085', 'magical': 79622, ...}])\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_refine\\test_cloudTrader\\test_cloudOrderClose.py\", line 258, in test_copy_verify_close_db\n    assert len(db_data) != 4, \"复制平仓数据应该不等于开仓总订单数量\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "462efbd0ac8b0ac5",
      "name" : "log",
      "source" : "462efbd0ac8b0ac5.txt",
      "type" : "text/plain",
      "size" : 19834
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 5,
    "hasContent" : true,
    "stepsCount" : 4
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755682019381,
      "stop" : 1755682019381,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755682019382,
      "stop" : 1755682019382,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "场景1：平仓的停止功能校验"
  }, {
    "name" : "feature",
    "value" : "云策略复制下单-平仓的功能校验"
  }, {
    "name" : "tag",
    "value" : "retry(n=3, delay=5)"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudOrderClose"
  }, {
    "name" : "subSuite",
    "value" : "TestCloudCoreFunctionality"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "46924-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudOrderClose"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "retry(n=3, delay=5)" ]
  },
  "source" : "d548d007105ee95f.json",
  "parameterValues" : [ ]
}