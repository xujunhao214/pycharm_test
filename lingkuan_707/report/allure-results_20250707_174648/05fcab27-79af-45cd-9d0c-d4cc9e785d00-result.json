{"name": "云策略-云策略列表-新增策略账号", "status": "failed", "statusDetails": {"message": "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/mascontrol/cloudTrader\nJSON路径: $.msg\n实际值: 账号不存在\n期望值: success", "trace": "self = <lingkuan_707.test_cloudTrader.test_lianxi.TestDeleteFollowSlave object at 0x000001B257F14A30>\nvar_manager = <lingkuan_707.commons.variable_manager.VariableManager object at 0x000001B257F14EE0>\nlogged_session = <lingkuan_707.commons.session.EnvironmentSession object at 0x000001B257F43730>\ndb_transaction = <pymysql.connections.Connection object at 0x000001B257F43130>\n\n    @allure.title(\"云策略-云策略列表-新增策略账号\")\n    def test_mascontrol_cloudTrader(self, var_manager, logged_session, db_transaction):\n        # 1. 发送新增策略账号请求\n        cloudMaster_id = var_manager.get_variable(\"cloudMaster_id\")\n        user_ids_cloudTrader_2 = var_manager.get_variable(\"user_ids_cloudTrader_2\")\n        data = {\n            \"cloudId\": cloudMaster_id,\n            \"sourceType\": 0,\n            \"remark\": \"新增云策略账号\",\n            \"runningStatus\": 0,\n            \"traderId\": user_ids_cloudTrader_2,\n            \"managerIp\": \"\",\n            \"managerAccount\": \"\",\n            \"managerPassword\": \"\",\n            \"account\": \"\",\n            \"platform\": \"\",\n            \"templateId\": \"\"\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/mascontrol/cloudTrader',\n            json_data=data\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"新增策略账号失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_cloudTrader\\test_lianxi.py:53: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_707.test_cloudTrader.test_lianxi.TestDeleteFollowSlave object at 0x000001B257F14A30>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/mascontrol/cloudTrader\nE           JSON路径: $.msg\nE           实际值: 账号不存在\nE           期望值: success\n\ncommons\\api_base.py:232: AssertionError"}, "steps": [{"name": "发送POST请求到 /mascontrol/cloudTrader", "status": "passed", "attachments": [{"name": "请求JSON数据", "source": "6c1f7c1f-6d52-4ba7-abd9-1b21fec9db71-attachment.json", "type": "application/json"}, {"name": "请求URL", "source": "e5b3e32d-bf43-4c35-8c51-01fcafdad8dc-attachment.txt", "type": "text/plain"}, {"name": "响应结果", "source": "a6cdf157-ac3d-4345-9c1f-d8693c21b800-attachment.txt", "type": "text/plain"}], "start": 1751881609355, "stop": 1751881614451}], "attachments": [{"name": "log", "source": "7de649a3-d501-4b59-9d47-bbe355007f38-attachment.txt", "type": "text/plain"}], "start": 1751881609355, "stop": 1751881614457, "uuid": "97082e05-2891-4ba4-b996-01e1b3c9c842", "historyId": "d3e47f65df9f0b1b13a19c0fb49cfda7", "testCaseId": "d3e47f65df9f0b1b13a19c0fb49cfda7", "fullName": "test_cloudTrader.test_lianxi.TestDeleteFollowSlave#test_mascontrol_cloudTrader", "labels": [{"name": "feature", "value": "跟单软件看板"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_lianxi"}, {"name": "subSuite", "value": "TestDeleteFollowSlave"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "7192-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_lianxi"}]}