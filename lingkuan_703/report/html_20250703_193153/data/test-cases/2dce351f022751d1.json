{
  "uid" : "2dce351f022751d1",
  "name" : "跟单软件看板-VPS数据-策略开仓",
  "fullName" : "test_foundation.test_vps_ordersend_scene.TestVPSOrderSend_Scence#test_trader_orderSend",
  "historyId" : "716468fd03ad13fcb1b94dcd3c5e7786",
  "time" : {
    "start" : 1751542313778,
    "stop" : 1751542313778,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "NameError: name 'ENV_CONFIG' is not defined",
  "statusTrace" : "request = <SubRequest 'api_session' for <Function test_trader_orderSend>>\nenvironment = <Environment.TEST: 'test'>\n\n    @pytest.fixture(scope=\"function\")  # 每个用例独立会话，避免URL污染\n    def api_session(request, environment):\n        \"\"\"根据用例标记选择URL（vps_url=9001或base_url=9000）\"\"\"\n        # 获取用例标记（@pytest.mark.url(\"vps\") 或 @pytest.mark.url(\"base\")）\n        url_marker = next(request.node.iter_markers(name=\"url\"), None)\n        # 从环境配置中获取对应的URL\n        env_config = ENV_CONFIG[environment]\n        if url_marker and url_marker.args[0] == \"vps\":\n            # 标记为\"vps\"的用例使用9001（vps_url）\n            current_url = env_config[\"vps_url\"]\n        else:\n            # 默认使用9000（base_url）\n            current_url = env_config[\"base_url\"]\n    \n        # 创建独立会话并设置URL\n>       session = EnvironmentSession(\n            environment=environment,\n            base_url=current_url  # 动态设置当前URL\n        )\n\nconftest.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_703.commons.session.EnvironmentSession object at 0x0000027843AA9D90>\nenvironment = <Environment.TEST: 'test'>, base_url = 'http://39.99.136.49:9001'\nvps_url = None\n\n    def __init__(self, environment: Environment, base_url: str, vps_url=None):\n        self.environment = environment\n        self.base_url = base_url.rstrip('/')  # 移除base_url末尾的斜杠\n        self.jsonpath_utils = JsonPathUtils()\n        self.g_vars: Dict[str, Any] = {}  # 存储全局变量\n        self.last_response = None  # 存储最后一次响应\n        self.named_urls = {}  # 存储命名URL\n>       self.vps_url = vps_url or ENV_CONFIG[environment].get(\"vps_url\")\nE       NameError: name 'ENV_CONFIG' is not defined\n\ncommons\\session.py:49: NameError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "api_session",
    "time" : {
      "start" : 1751542313780,
      "stop" : 1751542313780,
      "duration" : 0
    },
    "status" : "broken",
    "statusMessage" : "NameError: name 'ENV_CONFIG' is not defined\n",
    "statusTrace" : "  File \"D:\\pycharm_test\\.venv\\lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\pycharm_test\\.venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\pycharm_test\\.venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 895, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\pycharm_test\\lingkuan_703\\conftest.py\", line 72, in api_session\n    session = EnvironmentSession(\n  File \"D:\\pycharm_test\\lingkuan_703\\commons\\session.py\", line 49, in __init__\n    self.vps_url = vps_url or ENV_CONFIG[environment].get(\"vps_url\")\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1751542313779,
      "stop" : 1751542313780,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1751542313779,
      "stop" : 1751542313779,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "NameError: name 'ENV_CONFIG' is not defined",
    "statusTrace" : "request = <SubRequest 'api_session' for <Function test_trader_orderSend>>\nenvironment = <Environment.TEST: 'test'>\n\n    @pytest.fixture(scope=\"function\")  # 每个用例独立会话，避免URL污染\n    def api_session(request, environment):\n        \"\"\"根据用例标记选择URL（vps_url=9001或base_url=9000）\"\"\"\n        # 获取用例标记（@pytest.mark.url(\"vps\") 或 @pytest.mark.url(\"base\")）\n        url_marker = next(request.node.iter_markers(name=\"url\"), None)\n        # 从环境配置中获取对应的URL\n        env_config = ENV_CONFIG[environment]\n        if url_marker and url_marker.args[0] == \"vps\":\n            # 标记为\"vps\"的用例使用9001（vps_url）\n            current_url = env_config[\"vps_url\"]\n        else:\n            # 默认使用9000（base_url）\n            current_url = env_config[\"base_url\"]\n    \n        # 创建独立会话并设置URL\n>       session = EnvironmentSession(\n            environment=environment,\n            base_url=current_url  # 动态设置当前URL\n        )\n\nconftest.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_703.commons.session.EnvironmentSession object at 0x0000027843AA9D90>\nenvironment = <Environment.TEST: 'test'>, base_url = 'http://39.99.136.49:9001'\nvps_url = None\n\n    def __init__(self, environment: Environment, base_url: str, vps_url=None):\n        self.environment = environment\n        self.base_url = base_url.rstrip('/')  # 移除base_url末尾的斜杠\n        self.jsonpath_utils = JsonPathUtils()\n        self.g_vars: Dict[str, Any] = {}  # 存储全局变量\n        self.last_response = None  # 存储最后一次响应\n        self.named_urls = {}  # 存储命名URL\n>       self.vps_url = vps_url or ENV_CONFIG[environment].get(\"vps_url\")\nE       NameError: name 'ENV_CONFIG' is not defined\n\ncommons\\session.py:49: NameError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f70abc205aae35c6",
      "name" : "log",
      "source" : "f70abc205aae35c6.txt",
      "type" : "text/plain",
      "size" : 235
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1751542334939,
      "stop" : 1751542334940,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略下单-正常开仓平仓"
  }, {
    "name" : "tag",
    "value" : "url('vps')"
  }, {
    "name" : "parentSuite",
    "value" : "test_foundation"
  }, {
    "name" : "suite",
    "value" : "test_vps_ordersend_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend_Scence"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "26252-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_foundation.test_vps_ordersend_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "url('vps')" ]
  },
  "source" : "2dce351f022751d1.json",
  "parameterValues" : [ ]
}