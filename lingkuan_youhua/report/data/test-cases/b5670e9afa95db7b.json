{
  "uid" : "b5670e9afa95db7b",
  "name" : "根据数据库判断，然后提取数据",
  "fullName" : "testvps.test_vps#test_orderSenddb",
  "historyId" : "9118cc27aabe869ae11388f034c519cc",
  "time" : {
    "start" : 1750383571849,
    "stop" : 1750383601902,
    "duration" : 30053
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 查询失败：未找到符合条件的下单详情\nassert None is not None",
  "statusTrace" : "db = <pymysql.connections.Connection object at 0x0000023564B8EB50>\n\n    @allure.title(\"根据数据库判断，然后提取数据\")\n    def test_orderSenddb(db):\n        with allure.step(\"1. 从follow_order_instruct数据库检查是否有新的下单指令\"):\n            # 查询数据库获取数据\n            with db.cursor() as cursor:\n                sql = 'select * FROM follow_order_detail where symbol LIKE \"XAUUSD%\" and type=\"0\" and trader_id=\"5363\" and create_time BETWEEN NOW() - INTERVAL 15 MINUTE AND NOW() + INTERVAL 15 MINUTE'\n                time.sleep(30)\n                try:\n                    # 执行查询\n                    cursor.execute(sql)\n                    # 获取查询结果\n                    result = cursor.fetchone()\n    \n                    # 根据查询结果判断（添加明确的断言）\n>                   assert result is not None, \"查询失败：未找到符合条件的下单详情\"\nE                   AssertionError: 查询失败：未找到符合条件的下单详情\nE                   assert None is not None\n\ntestvps\\test_vps.py:168: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1750383570988,
      "stop" : 1750383571268,
      "duration" : 280
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 查询失败：未找到符合条件的下单详情\nassert None is not None",
    "statusTrace" : "db = <pymysql.connections.Connection object at 0x0000023564B8EB50>\n\n    @allure.title(\"根据数据库判断，然后提取数据\")\n    def test_orderSenddb(db):\n        with allure.step(\"1. 从follow_order_instruct数据库检查是否有新的下单指令\"):\n            # 查询数据库获取数据\n            with db.cursor() as cursor:\n                sql = 'select * FROM follow_order_detail where symbol LIKE \"XAUUSD%\" and type=\"0\" and trader_id=\"5363\" and create_time BETWEEN NOW() - INTERVAL 15 MINUTE AND NOW() + INTERVAL 15 MINUTE'\n                time.sleep(30)\n                try:\n                    # 执行查询\n                    cursor.execute(sql)\n                    # 获取查询结果\n                    result = cursor.fetchone()\n    \n                    # 根据查询结果判断（添加明确的断言）\n>                   assert result is not None, \"查询失败：未找到符合条件的下单详情\"\nE                   AssertionError: 查询失败：未找到符合条件的下单详情\nE                   assert None is not None\n\ntestvps\\test_vps.py:168: AssertionError",
    "steps" : [ {
      "name" : "1. 从follow_order_instruct数据库检查是否有新的下单指令",
      "time" : {
        "start" : 1750383571849,
        "stop" : 1750383601901,
        "duration" : 30052
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 查询失败：未找到符合条件的下单详情\nassert None is not None\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_youhua\\testvps\\test_vps.py\", line 168, in test_orderSenddb\n    assert result is not None, \"查询失败：未找到符合条件的下单详情\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "fe049797a8586f50",
      "name" : "log",
      "source" : "fe049797a8586f50.txt",
      "type" : "text/plain",
      "size" : 138
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1750383601906,
      "stop" : 1750383601906,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testvps"
  }, {
    "name" : "suite",
    "value" : "test_vps"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "39444-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testvps.test_vps"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "b5670e9afa95db7b.json",
  "parameterValues" : [ ]
}