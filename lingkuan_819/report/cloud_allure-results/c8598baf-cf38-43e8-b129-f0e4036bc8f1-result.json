{"name": "数据库校验-复制下单平仓数据-数据校验", "status": "failed", "statusDetails": {"message": "AssertionError: 数据库中没有2个处理的平仓订单，不符合预期\nassert 4 == 2\n +  where 4 = len([{'close_no': '9683484210331', 'create_time': '2025-08-21 10:42:17', 'foi.order_no': '9683484210331', 'magical': 7852, ...}, {'close_no': '9683484210331', 'create_time': '2025-08-21 10:42:17', 'foi.order_no': '9683484210331', 'magical': 13822, ...}, {'close_no': '9836161787234', 'create_time': '2025-08-21 10:41:28', 'foi.order_no': '9836161787234', 'magical': 5004, ...}, {'close_no': '9836161787234', 'create_time': '2025-08-21 10:41:28', 'foi.order_no': '9836161787234', 'magical': 37635, ...}])", "trace": "self = <lingkuan_819.test_cloudTrader.test_cloudOrderClose.TestCloudOrderQuantityControl.TestMasOrderSend4 object at 0x0000025603DCA220>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x0000025603ECD3A0>\ndb_transaction = <pymysql.connections.Connection object at 0x000002560439C1C0>\n\n    @allure.title(\"数据库校验-复制下单平仓数据-数据校验\")\n    def test_copy_verify_close_db(self, var_manager, db_transaction):\n        \"\"\"验证复制下单平仓后数据库中的订单数据正确性\"\"\"\n        with allure.step(\"查询复制平仓订单数据\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            cloudTrader_vps_ids_3 = var_manager.get_variable(\"cloudTrader_vps_ids_3\")\n    \n            sql = \"\"\"\n                   SELECT\n                       fod.size,\n                       fod.close_no,\n                       fod.magical,\n                       fod.open_price,\n                       fod.symbol,\n                       fod.order_no,\n                       foi.true_total_lots,\n                       foi.order_no,\n                       foi.operation_type,\n                       foi.create_time,\n                       foi.status,\n                       foi.min_lot_size,\n                       foi.max_lot_size,\n                       foi.total_lots,\n                       foi.master_order,\n                       foi.total_orders\n                   FROM\n                       follow_order_detail fod\n                   INNER JOIN\n                       follow_order_instruct foi\n                   ON\n                       foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                   WHERE foi.operation_type = %s\n                       AND fod.account = %s\n                       AND fod.trader_id = %s\n               \"\"\"\n            params = ('1', cloudTrader_user_accounts_4, cloudTrader_vps_ids_3)\n    \n            # 轮询等待数据库记录\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.create_time\"\n            )\n    \n        with allure.step(\"执行复制平仓数据校验-有两个订单\"):\n>           assert len(db_data) == 2, \"数据库中没有2个处理的平仓订单，不符合预期\"\nE           AssertionError: 数据库中没有2个处理的平仓订单，不符合预期\nE           assert 4 == 2\nE            +  where 4 = len([{'close_no': '9683484210331', 'create_time': '2025-08-21 10:42:17', 'foi.order_no': '9683484210331', 'magical': 7852, ...}, {'close_no': '9683484210331', 'create_time': '2025-08-21 10:42:17', 'foi.order_no': '9683484210331', 'magical': 13822, ...}, {'close_no': '9836161787234', 'create_time': '2025-08-21 10:41:28', 'foi.order_no': '9836161787234', 'magical': 5004, ...}, {'close_no': '9836161787234', 'create_time': '2025-08-21 10:41:28', 'foi.order_no': '9836161787234', 'magical': 37635, ...}])\n\ntest_cloudTrader\\test_cloudOrderClose.py:883: AssertionError"}, "description": "\n    ### 测试说明\n    - 前置条件：有云策略和云跟单\n      1. 进行开仓，手数范围0.1-1，总订单数量4\n      2. 平仓-平仓订单数量-2\n      3. 校验数据库是否有2个平仓订单\n      4. 平仓-平仓订单数量-2\n      5. 校验订单数据是否正确\n    - 预期结果：平仓的订单数量功能正确\n    ", "steps": [{"name": "查询复制平仓订单数据", "status": "passed", "steps": [{"name": "数据库查询结果", "status": "passed", "attachments": [{"name": "执行SQL", "source": "c63e1ca2-c13b-49b0-a78b-e9ea9f8d1d07-attachment.txt", "type": "text/plain"}, {"name": "SQL参数", "source": "ae981613-4372-46ae-8156-aeb7a63718ec-attachment.txt", "type": "text/plain"}, {"name": "查询结果（共4条，显示前50条）", "source": "389ac0c4-1b4c-4042-9b5a-5725fc3aef9f-attachment.json", "type": "application/json"}], "start": 1755744138526, "stop": 1755744138527}], "start": 1755744138475, "stop": 1755744138527}, {"name": "执行复制平仓数据校验-有两个订单", "status": "failed", "statusDetails": {"message": "AssertionError: 数据库中没有2个处理的平仓订单，不符合预期\nassert 4 == 2\n +  where 4 = len([{'close_no': '9683484210331', 'create_time': '2025-08-21 10:42:17', 'foi.order_no': '9683484210331', 'magical': 7852, ...}, {'close_no': '9683484210331', 'create_time': '2025-08-21 10:42:17', 'foi.order_no': '9683484210331', 'magical': 13822, ...}, {'close_no': '9836161787234', 'create_time': '2025-08-21 10:41:28', 'foi.order_no': '9836161787234', 'magical': 5004, ...}, {'close_no': '9836161787234', 'create_time': '2025-08-21 10:41:28', 'foi.order_no': '9836161787234', 'magical': 37635, ...}])\n", "trace": "  File \"D:\\pycharm_test\\lingkuan_819\\test_cloudTrader\\test_cloudOrderClose.py\", line 883, in test_copy_verify_close_db\n    assert len(db_data) == 2, \"数据库中没有2个处理的平仓订单，不符合预期\"\n"}, "start": 1755744138527, "stop": 1755744138527}], "attachments": [{"name": "log", "source": "9d82c0fb-5384-4eef-b1cc-09b4922848b2-attachment.txt", "type": "text/plain"}], "start": 1755744138475, "stop": 1755744138528, "uuid": "36f0b7e4-2aa0-4d73-aaa4-5ddde2f070da", "historyId": "d7964f9f84e9f19e7b016bb32dada040", "testCaseId": "d7964f9f84e9f19e7b016bb32dada040", "fullName": "test_cloudTrader.test_cloudOrderClose.TestMasOrderSend4#test_copy_verify_close_db", "labels": [{"name": "feature", "value": "云策略复制下单-平仓的功能校验"}, {"name": "story", "value": "场景4：平仓的订单数量功能校验"}, {"name": "tag", "value": "retry(n=3, delay=5)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudOrderClose"}, {"name": "subSuite", "value": "TestCloudOrderQuantityControl"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "8916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudOrderClose"}]}