{
  "uid" : "86da69315fe448b4",
  "name" : "数据库校验-跟单指令平仓数据",
  "fullName" : "test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios#test_scenario3_dbquery_slave_close",
  "historyId" : "c10c59df3880744163763bb0803e7a68",
  "time" : {
    "start" : 1755512355102,
    "stop" : 1755512361515,
    "duration" : 6413
  },
  "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 包含五种开仓场景，验证不同参数组合下的订单数据正确性\n- 场景1：手数范围0.1-1，总订单3，总手数1\n- 场景2：手数范围0.01-0.01，总手数0.01\n- 场景3：场景3：手数范围0.1-1，总手数5\n- 场景4：场景4：手数范围0.01-1，总订单10\n- 场景5：场景5：手数范围0.1-1，总手数1-停止功能\n",
  "descriptionHtml" : "<h3>用例说明</h3>\n<ul>\n<li>前置条件：有vps策略和vps跟单</li>\n<li>包含五种开仓场景，验证不同参数组合下的订单数据正确性</li>\n<li>场景1：手数范围0.1-1，总订单3，总手数1</li>\n<li>场景2：手数范围0.01-0.01，总手数0.01</li>\n<li>场景3：场景3：手数范围0.1-1，总手数5</li>\n<li>场景4：场景4：手数范围0.01-1，总订单10</li>\n<li>场景5：场景5：手数范围0.1-1，总手数1-停止功能</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 平仓总手数不符: 预期5, 实际4.96\nassert False\n +  where False = <built-in function isclose>(5.0, 4.96, rel_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   5.0 = float('5')\n +    and   4.96 = float(4.96)",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios object at 0x000001DFD46D7100>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001DFD4923670>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DFD4712040>\n\n    @allure.story(\"场景3：手数范围0.1-1，总手数5\")\n    @allure.title(\"数据库校验-跟单指令平仓数据\")\n    def test_scenario3_dbquery_slave_close(self, var_manager, db_transaction):\n        test_params = {\n            \"totalNum\": \"\",\n            \"totalSzie\": \"5\",\n            \"startSize\": \"0.1\",\n            \"endSize\": \"1\",\n            \"intervalTime\": \"100\"\n        }\n>       self._verify_close_order_slave(var_manager, db_transaction, test_params)\n\ntest_vps\\test_vps_ordersend.py:644: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_819.test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios object at 0x000001DFD46D7100>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001DFD4923670>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DFD4712040>\ntest_params = {'endSize': '1', 'intervalTime': '100', 'startSize': '0.1', 'totalNum': '', ...}\n\n    def _verify_close_order_slave(self, var_manager, db_transaction, test_params):\n        \"\"\"验证跟单指令平仓数据（公共方法）\"\"\"\n        vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n        vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n    \n        # 1. 获取订单数据\n        with allure.step(\"1. 获取跟单指令平仓数据\"):\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n            \"\"\"\n            params = ('1', vps_user_accounts_1, vps_addslave_id)\n    \n            db_data = self.wait_for_database_record_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        # 2. 数据校验\n        with allure.step(\"2. 验证跟单指令平仓数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            # 验证订单状态\n            status = db_data[0][\"status\"]\n            assert status in (0, 1), f\"订单状态应为0或1，实际为: {status}\"\n            logger.info(f\"平仓状态验证通过: {status}\")\n    \n            # 验证手数一致性\n            size = [record[\"size\"] for record in db_data]\n            total_lots = [record[\"total_lots\"] for record in db_data]\n            self.assert_list_equal_ignore_order(\n                size,\n                total_lots,\n                f\"手数不一致: 详情{size}, 指令{total_lots}\"\n            )\n            logger.info(\"平仓手数一致性验证通过\")\n    \n            # 验证总手数\n            if test_params[\"totalSzie\"]:\n                total = sum(size)\n>               assert math.isclose(\n                    float(test_params[\"totalSzie\"]),\n                    float(total),\n                    rel_tol=1e-9\n                ), f'平仓总手数不符: 预期{test_params[\"totalSzie\"]}, 实际{total}'\nE               AssertionError: 平仓总手数不符: 预期5, 实际4.96\nE               assert False\nE                +  where False = <built-in function isclose>(5.0, 4.96, rel_tol=1e-09)\nE                +    where <built-in function isclose> = math.isclose\nE                +    and   5.0 = float('5')\nE                +    and   4.96 = float(4.96)\n\ntest_vps\\test_vps_ordersend.py:402: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_config",
    "time" : {
      "start" : 1755512053135,
      "stop" : 1755512053135,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755512188721,
      "stop" : 1755512188721,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755512053135,
      "stop" : 1755512053546,
      "duration" : 411
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755512355056,
      "stop" : 1755512355101,
      "duration" : 45
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 包含五种开仓场景，验证不同参数组合下的订单数据正确性\n- 场景1：手数范围0.1-1，总订单3，总手数1\n- 场景2：手数范围0.01-0.01，总手数0.01\n- 场景3：场景3：手数范围0.1-1，总手数5\n- 场景4：场景4：手数范围0.01-1，总订单10\n- 场景5：场景5：手数范围0.1-1，总手数1-停止功能\n",
    "status" : "failed",
    "statusMessage" : "AssertionError: 平仓总手数不符: 预期5, 实际4.96\nassert False\n +  where False = <built-in function isclose>(5.0, 4.96, rel_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   5.0 = float('5')\n +    and   4.96 = float(4.96)",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios object at 0x000001DFD46D7100>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001DFD4923670>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DFD4712040>\n\n    @allure.story(\"场景3：手数范围0.1-1，总手数5\")\n    @allure.title(\"数据库校验-跟单指令平仓数据\")\n    def test_scenario3_dbquery_slave_close(self, var_manager, db_transaction):\n        test_params = {\n            \"totalNum\": \"\",\n            \"totalSzie\": \"5\",\n            \"startSize\": \"0.1\",\n            \"endSize\": \"1\",\n            \"intervalTime\": \"100\"\n        }\n>       self._verify_close_order_slave(var_manager, db_transaction, test_params)\n\ntest_vps\\test_vps_ordersend.py:644: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_819.test_vps.test_vps_ordersend.TestVPSOrderSend_AllScenarios object at 0x000001DFD46D7100>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001DFD4923670>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DFD4712040>\ntest_params = {'endSize': '1', 'intervalTime': '100', 'startSize': '0.1', 'totalNum': '', ...}\n\n    def _verify_close_order_slave(self, var_manager, db_transaction, test_params):\n        \"\"\"验证跟单指令平仓数据（公共方法）\"\"\"\n        vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n        vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n    \n        # 1. 获取订单数据\n        with allure.step(\"1. 获取跟单指令平仓数据\"):\n            sql = \"\"\"\n                SELECT\n                    fod.size,\n                    fod.close_no,\n                    fod.magical,\n                    fod.open_price,\n                    fod.symbol,\n                    fod.order_no,\n                    foi.true_total_lots,\n                    foi.order_no,\n                    foi.operation_type,\n                    foi.create_time,\n                    foi.status,\n                    foi.min_lot_size,\n                    foi.max_lot_size,\n                    foi.total_lots,\n                    foi.master_order,\n                    foi.total_orders\n                FROM\n                    follow_order_detail fod\n                INNER JOIN\n                    follow_order_instruct foi\n                ON\n                    foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s\n                    AND fod.account = %s\n                    AND fod.trader_id = %s\n            \"\"\"\n            params = ('1', vps_user_accounts_1, vps_addslave_id)\n    \n            db_data = self.wait_for_database_record_with_timezone(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n    \n        # 2. 数据校验\n        with allure.step(\"2. 验证跟单指令平仓数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            # 验证订单状态\n            status = db_data[0][\"status\"]\n            assert status in (0, 1), f\"订单状态应为0或1，实际为: {status}\"\n            logger.info(f\"平仓状态验证通过: {status}\")\n    \n            # 验证手数一致性\n            size = [record[\"size\"] for record in db_data]\n            total_lots = [record[\"total_lots\"] for record in db_data]\n            self.assert_list_equal_ignore_order(\n                size,\n                total_lots,\n                f\"手数不一致: 详情{size}, 指令{total_lots}\"\n            )\n            logger.info(\"平仓手数一致性验证通过\")\n    \n            # 验证总手数\n            if test_params[\"totalSzie\"]:\n                total = sum(size)\n>               assert math.isclose(\n                    float(test_params[\"totalSzie\"]),\n                    float(total),\n                    rel_tol=1e-9\n                ), f'平仓总手数不符: 预期{test_params[\"totalSzie\"]}, 实际{total}'\nE               AssertionError: 平仓总手数不符: 预期5, 实际4.96\nE               assert False\nE                +  where False = <built-in function isclose>(5.0, 4.96, rel_tol=1e-09)\nE                +    where <built-in function isclose> = math.isclose\nE                +    and   5.0 = float('5')\nE                +    and   4.96 = float(4.96)\n\ntest_vps\\test_vps_ordersend.py:402: AssertionError",
    "steps" : [ {
      "name" : "1. 获取跟单指令平仓数据",
      "time" : {
        "start" : 1755512355102,
        "stop" : 1755512361514,
        "duration" : 6412
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（时区: +05:00，超时: 30秒）",
        "time" : {
          "start" : 1755512355102,
          "stop" : 1755512355102,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755512361513,
          "stop" : 1755512361514,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "a731de54cab74f9a",
          "name" : "执行SQL",
          "source" : "a731de54cab74f9a.txt",
          "type" : "text/plain",
          "size" : 973
        }, {
          "uid" : "1d0da86a154e9642",
          "name" : "SQL参数",
          "source" : "1d0da86a154e9642.txt",
          "type" : "text/plain",
          "size" : 21
        }, {
          "uid" : "8ba442f97e0aebf2",
          "name" : "查询结果（共9条，显示前9条）",
          "source" : "8ba442f97e0aebf2.json",
          "type" : "application/json",
          "size" : 3890
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ {
        "uid" : "d46fa4b984e6fae1",
        "name" : "等待结果",
        "source" : "d46fa4b984e6fae1.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    }, {
      "name" : "2. 验证跟单指令平仓数据",
      "time" : {
        "start" : 1755512361514,
        "stop" : 1755512361515,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 平仓总手数不符: 预期5, 实际4.96\nassert False\n +  where False = <built-in function isclose>(5.0, 4.96, rel_tol=1e-09)\n +    where <built-in function isclose> = math.isclose\n +    and   5.0 = float('5')\n +    and   4.96 = float(4.96)\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_vps\\test_vps_ordersend.py\", line 402, in _verify_close_order_slave\n    assert math.isclose(\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "3a5323e44c7ab5df",
      "name" : "log",
      "source" : "3a5323e44c7ab5df.txt",
      "type" : "text/plain",
      "size" : 11332
    } ],
    "parameters" : [ ],
    "stepsCount" : 4,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 5
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755565029963,
      "stop" : 1755565029964,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755565029966,
      "stop" : 1755565029966,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755512361525,
      "stop" : 1755512361569,
      "duration" : 44
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略下单-正常开仓平仓"
  }, {
    "name" : "story",
    "value" : "场景3：手数范围0.1-1，总手数5"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_ordersend"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend_AllScenarios"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "6824-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_ordersend"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "86da69315fe448b4.json",
  "parameterValues" : [ ]
}