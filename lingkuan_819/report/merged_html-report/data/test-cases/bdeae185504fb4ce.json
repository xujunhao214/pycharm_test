{
  "uid" : "bdeae185504fb4ce",
  "name" : "跟单软件看板-VPS数据-策略平仓-跟单账号平仓（shell）",
  "fullName" : "test_vps.test_vps_orderclose.TestVPSOrderSend3#test_trader_orderclose2",
  "historyId" : "0767af7aff6e58e7e2a73462ee5890cd",
  "time" : {
    "start" : 1755512489396,
    "stop" : 1755512490744,
    "duration" : 1348
  },
  "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 操作步骤：\n  1. 修改跟单账号的跟单方向为反向，进行开仓\n  2. 跟单账号buy方向进行平仓，平仓失败，给出提示\n  3. 跟单账号shell方向进行平仓，平仓成功\n  4. 策略账号buy方向进行平仓\n- 预期结果：平仓的订单方向功能正确\n",
  "descriptionHtml" : "<h3>用例说明</h3>\n<ul>\n<li>前置条件：有vps策略和vps跟单</li>\n<li>操作步骤：\n<ol>\n<li>修改跟单账号的跟单方向为反向，进行开仓</li>\n<li>跟单账号buy方向进行平仓，平仓失败，给出提示</li>\n<li>跟单账号shell方向进行平仓，平仓成功</li>\n<li>策略账号buy方向进行平仓</li>\n</ol>\n</li>\n<li>预期结果：平仓的订单方向功能正确</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300152暂无可平仓订单\n期望值: success",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend3 object at 0x000001DFD46748B0>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DFD471C880>\nlogged_session = <lingkuan_819.commons.session.EnvironmentSession object at 0x000001DFD4B55250>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-策略平仓-跟单账号平仓（shell）\")\n    def test_trader_orderclose2(self, var_manager, logged_session):\n        with allure.step(\"1. 发送跟单账号平仓请求（订单方向是shell）\"):\n            # 1. 发送跟单账号平仓请求（订单方向是bug）\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            data = {\n                \"flag\": 0,\n                \"intervalTime\": 0,\n                \"num\": \"\",\n                \"closeType\": 2,\n                \"remark\": \"\",\n                \"symbol\": new_user[\"symbol\"],\n                \"type\": 1,\n                \"traderId\": vps_addslave_id,\n                \"account\": vps_user_accounts_1\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/subcontrol/trader/orderClose',\n                json_data=data,\n            )\n        with allure.step(\"2. 验证响应\"):\n            # 2. 验证响应\n            self.assert_response_status(\n                response,\n                200,\n                \"平仓失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_vps\\test_vps_orderclose.py:569: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend3 object at 0x000001DFD46748B0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            # 处理列表结果（如果只有一个元素则取单个值）\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nE           JSON路径: $.msg\nE           实际值: 300152暂无可平仓订单\nE           期望值: success\n\n..\\lingkuan_817\\commons\\api_base.py:342: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1755512467285,
      "stop" : 1755512467286,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1755512488069,
      "stop" : 1755512488069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755512488069,
      "stop" : 1755512489396,
      "duration" : 1327
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 操作步骤：\n  1. 修改跟单账号的跟单方向为反向，进行开仓\n  2. 跟单账号buy方向进行平仓，平仓失败，给出提示\n  3. 跟单账号shell方向进行平仓，平仓成功\n  4. 策略账号buy方向进行平仓\n- 预期结果：平仓的订单方向功能正确\n",
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300152暂无可平仓订单\n期望值: success",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend3 object at 0x000001DFD46748B0>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DFD471C880>\nlogged_session = <lingkuan_819.commons.session.EnvironmentSession object at 0x000001DFD4B55250>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-策略平仓-跟单账号平仓（shell）\")\n    def test_trader_orderclose2(self, var_manager, logged_session):\n        with allure.step(\"1. 发送跟单账号平仓请求（订单方向是shell）\"):\n            # 1. 发送跟单账号平仓请求（订单方向是bug）\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            data = {\n                \"flag\": 0,\n                \"intervalTime\": 0,\n                \"num\": \"\",\n                \"closeType\": 2,\n                \"remark\": \"\",\n                \"symbol\": new_user[\"symbol\"],\n                \"type\": 1,\n                \"traderId\": vps_addslave_id,\n                \"account\": vps_user_accounts_1\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/subcontrol/trader/orderClose',\n                json_data=data,\n            )\n        with allure.step(\"2. 验证响应\"):\n            # 2. 验证响应\n            self.assert_response_status(\n                response,\n                200,\n                \"平仓失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_vps\\test_vps_orderclose.py:569: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend3 object at 0x000001DFD46748B0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            # 处理列表结果（如果只有一个元素则取单个值）\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nE           JSON路径: $.msg\nE           实际值: 300152暂无可平仓订单\nE           期望值: success\n\n..\\lingkuan_817\\commons\\api_base.py:342: AssertionError",
    "steps" : [ {
      "name" : "1. 发送跟单账号平仓请求（订单方向是shell）",
      "time" : {
        "start" : 1755512489396,
        "stop" : 1755512490740,
        "duration" : 1344
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "发送 POST 请求到 /subcontrol/trader/orderClose",
        "time" : {
          "start" : 1755512489396,
          "stop" : 1755512490740,
          "duration" : 1344
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "请求详情",
          "time" : {
            "start" : 1755512489396,
            "stop" : 1755512489397,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "e2bce1379eb17e9d",
            "name" : "请求URL",
            "source" : "e2bce1379eb17e9d.txt",
            "type" : "text/plain",
            "size" : 29
          }, {
            "uid" : "85c6d04d07face72",
            "name" : "请求头",
            "source" : "85c6d04d07face72.json",
            "type" : "application/json",
            "size" : 234
          }, {
            "uid" : "50e7fb7e9330223",
            "name" : "请求体（JSON）",
            "source" : "50e7fb7e9330223.json",
            "type" : "application/json",
            "size" : 161
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "响应详情",
          "time" : {
            "start" : 1755512489737,
            "stop" : 1755512489739,
            "duration" : 2
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "798081dc841b83db",
            "name" : "响应状态码",
            "source" : "798081dc841b83db.txt",
            "type" : "text/plain",
            "size" : 3
          }, {
            "uid" : "c92814e879f0f9e8",
            "name" : "响应头",
            "source" : "c92814e879f0f9e8.json",
            "type" : "application/json",
            "size" : 526
          }, {
            "uid" : "74667261877cf06e",
            "name" : "响应体（JSON）",
            "source" : "74667261877cf06e.json",
            "type" : "application/json",
            "size" : 73
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 6
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 6
    }, {
      "name" : "2. 验证响应",
      "time" : {
        "start" : 1755512490740,
        "stop" : 1755512490744,
        "duration" : 4
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300152暂无可平仓订单\n期望值: success\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_vps\\test_vps_orderclose.py\", line 569, in test_trader_orderclose2\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_817\\commons\\api_base.py\", line 342, in assert_json_value\n    assert actual_value == expected_value, (\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "45a291471477e184",
      "name" : "log",
      "source" : "45a291471477e184.txt",
      "type" : "text/plain",
      "size" : 1349
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 7
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755565029962,
      "stop" : 1755565029962,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755512490758,
      "stop" : 1755512490758,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755512490757,
      "stop" : 1755512490757,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "url('vps')"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_orderclose"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend3"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "6824-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_orderclose"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "url('vps')" ]
  },
  "source" : "bdeae185504fb4ce.json",
  "parameterValues" : [ ]
}