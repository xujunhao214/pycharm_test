{
  "uid" : "9ddd217008ce20fe",
  "name" : "跟单软件看板-VPS数据-策略平仓-平仓一个",
  "fullName" : "test_vps.test_vps_orderclose.TestVPSOrderSend2#test_trader_orderclose1",
  "historyId" : "ce422c21594e561889c35125ff4b1626",
  "time" : {
    "start" : 1755512472297,
    "stop" : 1755512473648,
    "duration" : 1351
  },
  "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 操作步骤：\n  1. 进行开仓，开仓订单数量控制为两个\n  2. 进行平仓，平仓一个\n  3. 进行平仓，平仓一个\n  4. 进行平仓，平仓一个，平仓失败，没有可平订单\n- 预期结果：平仓的订单数量功能正确\n",
  "descriptionHtml" : "<h3>用例说明</h3>\n<ul>\n<li>前置条件：有vps策略和vps跟单</li>\n<li>操作步骤：\n<ol>\n<li>进行开仓，开仓订单数量控制为两个</li>\n<li>进行平仓，平仓一个</li>\n<li>进行平仓，平仓一个</li>\n<li>进行平仓，平仓一个，平仓失败，没有可平订单</li>\n</ol>\n</li>\n<li>预期结果：平仓的订单数量功能正确</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300151暂无可平仓订单\n期望值: success",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609850>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DFD471C880>\nlogged_session = <lingkuan_819.commons.session.EnvironmentSession object at 0x000001DFD4AD1CD0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-策略平仓-平仓一个\")\n    def test_trader_orderclose1(self, var_manager, logged_session):\n        with allure.step(\"1. 发送全平订单平仓请求\"):\n            # 1. 发送全平订单平仓请求\n            vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n            new_user = var_manager.get_variable(\"new_user\")\n            data = {\n                \"flag\": 0,\n                \"intervalTime\": 0,\n                \"num\": \"1\",\n                \"closeType\": 2,\n                \"remark\": \"\",\n                \"symbol\": new_user[\"symbol\"],\n                \"type\": 0,\n                \"traderId\": vps_trader_id,\n                \"account\": new_user[\"account\"]\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/subcontrol/trader/orderClose',\n                json_data=data,\n            )\n        with allure.step(\"2. 验证响应\"):\n            # 2. 验证响应\n            self.assert_response_status(\n                response,\n                200,\n                \"平仓失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_vps\\test_vps_orderclose.py:324: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609850>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            # 处理列表结果（如果只有一个元素则取单个值）\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nE           JSON路径: $.msg\nE           实际值: 300151暂无可平仓订单\nE           期望值: success\n\n..\\lingkuan_817\\commons\\api_base.py:342: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1755512467285,
      "stop" : 1755512467286,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755512469991,
      "stop" : 1755512472296,
      "duration" : 2305
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1755512469991,
      "stop" : 1755512469991,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单\n- 操作步骤：\n  1. 进行开仓，开仓订单数量控制为两个\n  2. 进行平仓，平仓一个\n  3. 进行平仓，平仓一个\n  4. 进行平仓，平仓一个，平仓失败，没有可平订单\n- 预期结果：平仓的订单数量功能正确\n",
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300151暂无可平仓订单\n期望值: success",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609850>\nvar_manager = <lingkuan_817.commons.variable_manager.VariableManager object at 0x000001DFD471C880>\nlogged_session = <lingkuan_819.commons.session.EnvironmentSession object at 0x000001DFD4AD1CD0>\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-策略平仓-平仓一个\")\n    def test_trader_orderclose1(self, var_manager, logged_session):\n        with allure.step(\"1. 发送全平订单平仓请求\"):\n            # 1. 发送全平订单平仓请求\n            vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n            new_user = var_manager.get_variable(\"new_user\")\n            data = {\n                \"flag\": 0,\n                \"intervalTime\": 0,\n                \"num\": \"1\",\n                \"closeType\": 2,\n                \"remark\": \"\",\n                \"symbol\": new_user[\"symbol\"],\n                \"type\": 0,\n                \"traderId\": vps_trader_id,\n                \"account\": new_user[\"account\"]\n            }\n            response = self.send_post_request(\n                logged_session,\n                '/subcontrol/trader/orderClose',\n                json_data=data,\n            )\n        with allure.step(\"2. 验证响应\"):\n            # 2. 验证响应\n            self.assert_response_status(\n                response,\n                200,\n                \"平仓失败\"\n            )\n>           self.assert_json_value(\n                response,\n                \"$.msg\",\n                \"success\",\n                \"响应msg字段应为success\"\n            )\n\ntest_vps\\test_vps_orderclose.py:324: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_819.test_vps.test_vps_orderclose.TestVPSOrderSend2 object at 0x000001DFD4609850>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = self.extract_jsonpath(response, json_path)\n            # 处理列表结果（如果只有一个元素则取单个值）\n            if isinstance(actual_value, list) and len(actual_value) == 1:\n                actual_value = actual_value[0]\n    \n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nE           JSON路径: $.msg\nE           实际值: 300151暂无可平仓订单\nE           期望值: success\n\n..\\lingkuan_817\\commons\\api_base.py:342: AssertionError",
    "steps" : [ {
      "name" : "1. 发送全平订单平仓请求",
      "time" : {
        "start" : 1755512472297,
        "stop" : 1755512473644,
        "duration" : 1347
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "发送 POST 请求到 /subcontrol/trader/orderClose",
        "time" : {
          "start" : 1755512472297,
          "stop" : 1755512473644,
          "duration" : 1347
        },
        "status" : "passed",
        "steps" : [ {
          "name" : "请求详情",
          "time" : {
            "start" : 1755512472297,
            "stop" : 1755512472298,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "a096a5cddcb42dfe",
            "name" : "请求URL",
            "source" : "a096a5cddcb42dfe.txt",
            "type" : "text/plain",
            "size" : 29
          }, {
            "uid" : "d4b517ebd8090494",
            "name" : "请求头",
            "source" : "d4b517ebd8090494.json",
            "type" : "application/json",
            "size" : 234
          }, {
            "uid" : "cf8d16a26f745a18",
            "name" : "请求体（JSON）",
            "source" : "cf8d16a26f745a18.json",
            "type" : "application/json",
            "size" : 162
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        }, {
          "name" : "响应详情",
          "time" : {
            "start" : 1755512472638,
            "stop" : 1755512472639,
            "duration" : 1
          },
          "status" : "passed",
          "steps" : [ ],
          "attachments" : [ {
            "uid" : "c2c11abda5e43b9d",
            "name" : "响应状态码",
            "source" : "c2c11abda5e43b9d.txt",
            "type" : "text/plain",
            "size" : 3
          }, {
            "uid" : "1a5e4a9e9a16699a",
            "name" : "响应头",
            "source" : "1a5e4a9e9a16699a.json",
            "type" : "application/json",
            "size" : 526
          }, {
            "uid" : "a0dc908a29ac40b2",
            "name" : "响应体（JSON）",
            "source" : "a0dc908a29ac40b2.json",
            "type" : "application/json",
            "size" : 73
          } ],
          "parameters" : [ ],
          "stepsCount" : 0,
          "hasContent" : true,
          "shouldDisplayMessage" : false,
          "attachmentsCount" : 3
        } ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 2,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 6
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 3,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 6
    }, {
      "name" : "2. 验证响应",
      "time" : {
        "start" : 1755512473644,
        "stop" : 1755512473648,
        "duration" : 4
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: https://39.99.145.155/vps/subcontrol/trader/orderClose\nJSON路径: $.msg\n实际值: 300151暂无可平仓订单\n期望值: success\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_vps\\test_vps_orderclose.py\", line 324, in test_trader_orderclose1\n    self.assert_json_value(\n  File \"D:\\pycharm_test\\lingkuan_817\\commons\\api_base.py\", line 342, in assert_json_value\n    assert actual_value == expected_value, (\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "134abacd8116fde8",
      "name" : "log",
      "source" : "134abacd8116fde8.txt",
      "type" : "text/plain",
      "size" : 1350
    } ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 7
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755565029962,
      "stop" : 1755565029962,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755512473660,
      "stop" : 1755512473660,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755512473661,
      "stop" : 1755512473661,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "url('vps')"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_orderclose"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend2"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "6824-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_orderclose"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "url('vps')" ]
  },
  "source" : "9ddd217008ce20fe.json",
  "parameterValues" : [ ]
}