{
  "uid" : "c35983b99fa7f016",
  "name" : "数据库校验-策略备注生效",
  "fullName" : "test_cloudTrader.test_cloudfixed_annotations.TestCloudStrategyOrderRemark#test_scenario1_verify_remark",
  "historyId" : "815ed9c3163be55dd91c2b56bceafa23",
  "time" : {
    "start" : 1755512933297,
    "stop" : 1755512964913,
    "duration" : 31616
  },
  "description" : "\n### 测试说明\n包含三种云策略订单备注场景的完整测试流程：\n1. 场景1：策略有固定注释，跟单无固定注释 → 预期取策略备注\n2. 场景2：策略有固定注释，跟单有固定注释 → 预期取跟单备注\n3. 场景3：策略开启订单备注，跟单无固定注释 → 预期取开仓备注\n",
  "descriptionHtml" : "<h3>测试说明</h3>\n<p>包含三种云策略订单备注场景的完整测试流程：</p>\n<ol>\n<li>场景1：策略有固定注释，跟单无固定注释 → 预期取策略备注</li>\n<li>场景2：策略有固定注释，跟单有固定注释 → 预期取跟单备注</li>\n<li>场景3：策略开启订单备注，跟单无固定注释 → 预期取开仓备注</li>\n</ol>\n",
  "status" : "broken",
  "statusMessage" : "pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")",
  "statusTrace" : "self = <lingkuan_819.test_cloudTrader.test_cloudfixed_annotations.TestCloudStrategyOrderRemark object at 0x000001FC6D350970>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001FC6D833280>\ndb_transaction = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\n\n    @allure.story(\"场景1：策略有固定注释，跟单无固定注释\")\n    @allure.title(\"数据库校验-策略备注生效\")\n    def test_scenario1_verify_remark(self, var_manager, db_transaction):\n        with allure.step(\"查询订单备注信息\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT fod.comment\n                FROM follow_order_detail fod\n                INNER JOIN follow_order_instruct foi\n                    ON foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n>           db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n\ntest_cloudTrader\\test_cloudfixed_annotations.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:708: in _execute_query\n    return self.query_database_with_time(\ncommons\\api_base.py:480: in query_database_with_time\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:563: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:825: in _read_query_result\n    result.read()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:1199: in read\n    first_packet = self.connection._read_packet()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:775: in _read_packet\n    packet.raise_for_error()\n..\\venv\\lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff\\x1c\\x04#23000Column 'create_time' in order clause is ambiguous\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")\n\n..\\venv\\lib\\site-packages\\pymysql\\err.py:150: OperationalError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755512933250,
      "stop" : 1755512933297,
      "duration" : 47
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755512925692,
      "stop" : 1755512925693,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755512050295,
      "stop" : 1755512050295,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1755512053639,
      "stop" : 1755512053639,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755512053639,
      "stop" : 1755512054053,
      "duration" : 414
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755512050295,
      "stop" : 1755512050295,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n### 测试说明\n包含三种云策略订单备注场景的完整测试流程：\n1. 场景1：策略有固定注释，跟单无固定注释 → 预期取策略备注\n2. 场景2：策略有固定注释，跟单有固定注释 → 预期取跟单备注\n3. 场景3：策略开启订单备注，跟单无固定注释 → 预期取开仓备注\n",
    "status" : "broken",
    "statusMessage" : "pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")",
    "statusTrace" : "self = <lingkuan_819.test_cloudTrader.test_cloudfixed_annotations.TestCloudStrategyOrderRemark object at 0x000001FC6D350970>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001FC6D833280>\ndb_transaction = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\n\n    @allure.story(\"场景1：策略有固定注释，跟单无固定注释\")\n    @allure.title(\"数据库校验-策略备注生效\")\n    def test_scenario1_verify_remark(self, var_manager, db_transaction):\n        with allure.step(\"查询订单备注信息\"):\n            cloudTrader_user_accounts_4 = var_manager.get_variable(\"cloudTrader_user_accounts_4\")\n            sql = \"\"\"\n                SELECT fod.comment\n                FROM follow_order_detail fod\n                INNER JOIN follow_order_instruct foi\n                    ON foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n                WHERE foi.operation_type = %s AND fod.account = %s\n            \"\"\"\n            params = ('0', cloudTrader_user_accounts_4)\n    \n>           db_data = self.wait_for_database_record(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n\ntest_cloudTrader\\test_cloudfixed_annotations.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:708: in _execute_query\n    return self.query_database_with_time(\ncommons\\api_base.py:480: in query_database_with_time\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:563: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:825: in _read_query_result\n    result.read()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:1199: in read\n    first_packet = self.connection._read_packet()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:775: in _read_packet\n    packet.raise_for_error()\n..\\venv\\lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff\\x1c\\x04#23000Column 'create_time' in order clause is ambiguous\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")\n\n..\\venv\\lib\\site-packages\\pymysql\\err.py:150: OperationalError",
    "steps" : [ {
      "name" : "查询订单备注信息",
      "time" : {
        "start" : 1755512933297,
        "stop" : 1755512964912,
        "duration" : 31615
      },
      "status" : "broken",
      "statusMessage" : "pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_cloudTrader\\test_cloudfixed_annotations.py\", line 150, in test_scenario1_verify_remark\n    db_data = self.wait_for_database_record(\n  File \"D:\\pycharm_test\\lingkuan_819\\commons\\api_base.py\", line 662, in wait_for_database_record\n    final_result = self._execute_query(\n  File \"D:\\pycharm_test\\lingkuan_819\\commons\\api_base.py\", line 708, in _execute_query\n    return self.query_database_with_time(\n  File \"D:\\pycharm_test\\lingkuan_819\\commons\\api_base.py\", line 480, in query_database_with_time\n    return self.query_database(\n  File \"D:\\pycharm_test\\lingkuan_819\\commons\\api_base.py\", line 398, in query_database\n    cursor.execute(final_sql, params)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 563, in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 825, in _read_query_result\n    result.read()\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 1199, in read\n    first_packet = self.connection._read_packet()\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 775, in _read_packet\n    packet.raise_for_error()\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\protocol.py\", line 219, in raise_for_error\n    err.raise_mysql_exception(self._data)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\err.py\", line 150, in raise_mysql_exception\n    raise errorclass(errno, errval)\n",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512933297,
          "stop" : 1755512933297,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "ef7fd4a78ea8400a",
        "name" : "数据库异常",
        "source" : "ef7fd4a78ea8400a.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "d05c88b0e02cc74a",
        "name" : "数据库异常",
        "source" : "d05c88b0e02cc74a.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "1c50b13c163fe990",
        "name" : "数据库异常",
        "source" : "1c50b13c163fe990.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "8bd6ab0dcc3fdd81",
        "name" : "数据库异常",
        "source" : "8bd6ab0dcc3fdd81.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "9931ac2715fb7105",
        "name" : "数据库异常",
        "source" : "9931ac2715fb7105.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "29af94e1fa1ce38e",
        "name" : "数据库异常",
        "source" : "29af94e1fa1ce38e.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "1bedf5465a28ba26",
        "name" : "数据库异常",
        "source" : "1bedf5465a28ba26.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "648952bb29acd824",
        "name" : "数据库异常",
        "source" : "648952bb29acd824.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "6bb5fe52adbab218",
        "name" : "数据库异常",
        "source" : "6bb5fe52adbab218.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "e26696151887442",
        "name" : "数据库异常",
        "source" : "e26696151887442.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "4e938f637d665ccd",
        "name" : "数据库异常",
        "source" : "4e938f637d665ccd.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "cad284c4be296521",
        "name" : "数据库异常",
        "source" : "cad284c4be296521.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "bf0157f40a483f22",
        "name" : "数据库异常",
        "source" : "bf0157f40a483f22.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "dcf83fe6a30a1b7f",
        "name" : "数据库异常",
        "source" : "dcf83fe6a30a1b7f.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "cafd49a07a33ad8c",
        "name" : "数据库异常",
        "source" : "cafd49a07a33ad8c.txt",
        "type" : "text/plain",
        "size" : 356
      }, {
        "uid" : "b7cb4652841e638b",
        "name" : "数据库异常",
        "source" : "b7cb4652841e638b.txt",
        "type" : "text/plain",
        "size" : 356
      } ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 16
    } ],
    "attachments" : [ {
      "uid" : "109ff7838b01b05e",
      "name" : "log",
      "source" : "109ff7838b01b05e.txt",
      "type" : "text/plain",
      "size" : 38897
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 17
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755512964972,
      "stop" : 1755512965019,
      "duration" : 47
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755565008467,
      "stop" : 1755565008468,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755565008475,
      "stop" : 1755565008475,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "云策略交易下单-跟随策略账号订单备注（多场景汇总）"
  }, {
    "name" : "story",
    "value" : "场景1：策略有固定注释，跟单无固定注释"
  }, {
    "name" : "parentSuite",
    "value" : "test_cloudTrader"
  }, {
    "name" : "suite",
    "value" : "test_cloudfixed_annotations"
  }, {
    "name" : "subSuite",
    "value" : "TestCloudStrategyOrderRemark"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "20452-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cloudTrader.test_cloudfixed_annotations"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c35983b99fa7f016.json",
  "parameterValues" : [ ]
}