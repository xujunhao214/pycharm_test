{
  "uid" : "c18e48d95161c436",
  "name" : "数据库校验-VPS数据-批量新增跟单账号",
  "fullName" : "test_vps.test_create_scene.TestCreate_Scene#test_dbimport_addSlave",
  "historyId" : "5b943886b5c4f05887f323b30339137a",
  "time" : {
    "start" : 1755512942336,
    "stop" : 1755564918775,
    "duration" : 51976439
  },
  "status" : "broken",
  "statusMessage" : "pymysql.err.InterfaceError: (0, '')",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_create_scene.TestCreate_Scene object at 0x000001DFD478BA00>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001DFD4AC2460>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DFD4712040>\n\n    @allure.title(\"数据库校验-VPS数据-批量新增跟单账号\")\n    def test_dbimport_addSlave(self, var_manager, db_transaction):\n        # 1. 校验总用户数（需至少7个，才能取后6个）\n        vps_user_count = var_manager.get_variable(\"vps_user_count\", 0)\n        if vps_user_count < 7:\n            pytest.fail(f\"用户总数需至少为7，当前为{vps_user_count}，无法提取后6个数据进行校验\")\n    \n        # 2. 提取后6个账号（对应vps_user_accounts_2到vps_user_accounts_7）\n        all_accounts = []\n        for i in range(2, 8):  # 直接指定取第2到第7个账号（共6个）\n            account = var_manager.get_variable(f\"vps_user_accounts_{i}\")\n            if not account:\n                pytest.fail(f\"未找到第{i}个账号（变量：vps_user_accounts_{i}）\")\n            all_accounts.append(account)\n        print(f\"将校验的后6个账号：{all_accounts}\")\n    \n        # 3. 初始化ID列表和计数器\n        all_ids = []\n        vps_addslave_count = 0\n    \n        # 4. 逐个校验后6个账号的数据库记录\n        for idx, account in enumerate(all_accounts, 1):  # idx从1开始（1-6，对应6个账号）\n            with allure.step(f\"验证第{idx}个账号（{account}）的数据库记录\"):\n                sql = f\"SELECT * FROM follow_trader WHERE account = %s\"\n                params = (account,)\n    \n                # 调用轮询等待方法（带时间范围过滤）\n                db_data = self.wait_for_database_record(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"account ASC\"\n                )\n    \n                if not db_data:\n                    pytest.fail(f\"账号 {account} 在主表中未找到记录，请检查新增是否成功\")\n    \n                # 提取当前账号的ID并保存到变量管理器\n                vps_addslave_id = db_data[0][\"id\"]\n                all_ids.append(vps_addslave_id)\n                var_manager.set_runtime_variable(f\"vps_addslave_ids_{idx}\", vps_addslave_id)\n                print(f\"账号 {account} 的ID为：{vps_addslave_id}，已保存到变量 vps_addslave_ids_{idx}\")\n    \n            with allure.step(\"校验账号状态和净值（核心业务规则）\"):\n                status = db_data[0][\"status\"]\n                assert status == 0, f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\"\n                logging.info(f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\")\n    \n                euqit = db_data[0][\"euqit\"]\n                assert euqit > 0, f\"账号净值euqit有钱，实际金额为: {euqit}\"\n                logging.info(f\"账号净值euqit有钱，实际金额为: {euqit}\")\n    \n                # 校验订阅表记录（从表关联）\n                sql = f\"SELECT * FROM follow_trader_subscribe WHERE slave_account = %s\"\n                params = (account,)\n                # 调用轮询等待方法（带时间范围过滤）\n>               db_sub_data = self.wait_for_database_record(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"slave_account ASC\"\n                )\n\ntest_vps\\test_create_scene.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:718: in _execute_query\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:562: in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001DFD4712040>\ncommand = 3\nsql = b\"SELECT * FROM follow_trader_subscribe WHERE slave_account = '300155' ORDER BY slave_account ASC\"\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_config",
    "time" : {
      "start" : 1755512053135,
      "stop" : 1755512053135,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755512050142,
      "stop" : 1755512050142,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755512903660,
      "stop" : 1755512903661,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755512053135,
      "stop" : 1755512053546,
      "duration" : 411
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755512942281,
      "stop" : 1755512942336,
      "duration" : 55
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "pymysql.err.InterfaceError: (0, '')",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_create_scene.TestCreate_Scene object at 0x000001DFD478BA00>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001DFD4AC2460>\ndb_transaction = <pymysql.connections.Connection object at 0x000001DFD4712040>\n\n    @allure.title(\"数据库校验-VPS数据-批量新增跟单账号\")\n    def test_dbimport_addSlave(self, var_manager, db_transaction):\n        # 1. 校验总用户数（需至少7个，才能取后6个）\n        vps_user_count = var_manager.get_variable(\"vps_user_count\", 0)\n        if vps_user_count < 7:\n            pytest.fail(f\"用户总数需至少为7，当前为{vps_user_count}，无法提取后6个数据进行校验\")\n    \n        # 2. 提取后6个账号（对应vps_user_accounts_2到vps_user_accounts_7）\n        all_accounts = []\n        for i in range(2, 8):  # 直接指定取第2到第7个账号（共6个）\n            account = var_manager.get_variable(f\"vps_user_accounts_{i}\")\n            if not account:\n                pytest.fail(f\"未找到第{i}个账号（变量：vps_user_accounts_{i}）\")\n            all_accounts.append(account)\n        print(f\"将校验的后6个账号：{all_accounts}\")\n    \n        # 3. 初始化ID列表和计数器\n        all_ids = []\n        vps_addslave_count = 0\n    \n        # 4. 逐个校验后6个账号的数据库记录\n        for idx, account in enumerate(all_accounts, 1):  # idx从1开始（1-6，对应6个账号）\n            with allure.step(f\"验证第{idx}个账号（{account}）的数据库记录\"):\n                sql = f\"SELECT * FROM follow_trader WHERE account = %s\"\n                params = (account,)\n    \n                # 调用轮询等待方法（带时间范围过滤）\n                db_data = self.wait_for_database_record(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"account ASC\"\n                )\n    \n                if not db_data:\n                    pytest.fail(f\"账号 {account} 在主表中未找到记录，请检查新增是否成功\")\n    \n                # 提取当前账号的ID并保存到变量管理器\n                vps_addslave_id = db_data[0][\"id\"]\n                all_ids.append(vps_addslave_id)\n                var_manager.set_runtime_variable(f\"vps_addslave_ids_{idx}\", vps_addslave_id)\n                print(f\"账号 {account} 的ID为：{vps_addslave_id}，已保存到变量 vps_addslave_ids_{idx}\")\n    \n            with allure.step(\"校验账号状态和净值（核心业务规则）\"):\n                status = db_data[0][\"status\"]\n                assert status == 0, f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\"\n                logging.info(f\"新增跟单账号状态status应为0（正常），实际状态为: {status}\")\n    \n                euqit = db_data[0][\"euqit\"]\n                assert euqit > 0, f\"账号净值euqit有钱，实际金额为: {euqit}\"\n                logging.info(f\"账号净值euqit有钱，实际金额为: {euqit}\")\n    \n                # 校验订阅表记录（从表关联）\n                sql = f\"SELECT * FROM follow_trader_subscribe WHERE slave_account = %s\"\n                params = (account,)\n                # 调用轮询等待方法（带时间范围过滤）\n>               db_sub_data = self.wait_for_database_record(\n                    db_transaction=db_transaction,\n                    sql=sql,\n                    params=params,\n                    order_by=\"slave_account ASC\"\n                )\n\ntest_vps\\test_create_scene.py:202: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:718: in _execute_query\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:562: in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001DFD4712040>\ncommand = 3\nsql = b\"SELECT * FROM follow_trader_subscribe WHERE slave_account = '300155' ORDER BY slave_account ASC\"\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError",
    "steps" : [ {
      "name" : "验证第1个账号（300153）的数据库记录",
      "time" : {
        "start" : 1755512942336,
        "stop" : 1755512948735,
        "duration" : 6399
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512942336,
          "stop" : 1755512942336,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755512948733,
          "stop" : 1755512948734,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "f5ebb25caeaa8952",
          "name" : "执行SQL",
          "source" : "f5ebb25caeaa8952.txt",
          "type" : "text/plain",
          "size" : 46
        }, {
          "uid" : "4b87692fdbc2bc5d",
          "name" : "SQL参数",
          "source" : "4b87692fdbc2bc5d.txt",
          "type" : "text/plain",
          "size" : 11
        }, {
          "uid" : "b5dc2e68464745f9",
          "name" : "查询结果（共1条，显示前1条）",
          "source" : "b5dc2e68464745f9.json",
          "type" : "application/json",
          "size" : 1069
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ {
        "uid" : "11b2b0b10b52e49d",
        "name" : "等待结果",
        "source" : "11b2b0b10b52e49d.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    }, {
      "name" : "校验账号状态和净值（核心业务规则）",
      "time" : {
        "start" : 1755512948735,
        "stop" : 1755512955126,
        "duration" : 6391
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512948735,
          "stop" : 1755512948735,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755512955125,
          "stop" : 1755512955126,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "3e25bb902a9a4e05",
          "name" : "执行SQL",
          "source" : "3e25bb902a9a4e05.txt",
          "type" : "text/plain",
          "size" : 62
        }, {
          "uid" : "911142256d334618",
          "name" : "SQL参数",
          "source" : "911142256d334618.txt",
          "type" : "text/plain",
          "size" : 11
        }, {
          "uid" : "7b47d8cfaee9ac83",
          "name" : "查询结果（共1条，显示前1条）",
          "source" : "7b47d8cfaee9ac83.json",
          "type" : "application/json",
          "size" : 669
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ {
        "uid" : "4e3fa7ed711e3674",
        "name" : "等待结果",
        "source" : "4e3fa7ed711e3674.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    }, {
      "name" : "验证第2个账号（300154）的数据库记录",
      "time" : {
        "start" : 1755512955126,
        "stop" : 1755512961534,
        "duration" : 6408
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512955126,
          "stop" : 1755512955126,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755512961532,
          "stop" : 1755512961533,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "6d3e22768a97001e",
          "name" : "执行SQL",
          "source" : "6d3e22768a97001e.txt",
          "type" : "text/plain",
          "size" : 46
        }, {
          "uid" : "fdc6e053e0ad652",
          "name" : "SQL参数",
          "source" : "fdc6e053e0ad652.txt",
          "type" : "text/plain",
          "size" : 11
        }, {
          "uid" : "51ad14aa1d1e9ff4",
          "name" : "查询结果（共1条，显示前1条）",
          "source" : "51ad14aa1d1e9ff4.json",
          "type" : "application/json",
          "size" : 1073
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ {
        "uid" : "bee3b9956cf944df",
        "name" : "等待结果",
        "source" : "bee3b9956cf944df.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    }, {
      "name" : "校验账号状态和净值（核心业务规则）",
      "time" : {
        "start" : 1755512961534,
        "stop" : 1755512967938,
        "duration" : 6404
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512961534,
          "stop" : 1755512961534,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755512967937,
          "stop" : 1755512967938,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "bc46438b980dd003",
          "name" : "执行SQL",
          "source" : "bc46438b980dd003.txt",
          "type" : "text/plain",
          "size" : 62
        }, {
          "uid" : "5136512d749c8944",
          "name" : "SQL参数",
          "source" : "5136512d749c8944.txt",
          "type" : "text/plain",
          "size" : 11
        }, {
          "uid" : "d66a797c5498ead8",
          "name" : "查询结果（共1条，显示前1条）",
          "source" : "d66a797c5498ead8.json",
          "type" : "application/json",
          "size" : 669
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ {
        "uid" : "62138e801f37d5ca",
        "name" : "等待结果",
        "source" : "62138e801f37d5ca.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    }, {
      "name" : "验证第3个账号（300155）的数据库记录",
      "time" : {
        "start" : 1755512967938,
        "stop" : 1755512974341,
        "duration" : 6403
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512967938,
          "stop" : 1755512967938,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      }, {
        "name" : "数据库查询结果（最终稳定结果）",
        "time" : {
          "start" : 1755512974340,
          "stop" : 1755512974341,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "5ab01354fc2bb972",
          "name" : "执行SQL",
          "source" : "5ab01354fc2bb972.txt",
          "type" : "text/plain",
          "size" : 46
        }, {
          "uid" : "8d74515f7e369845",
          "name" : "SQL参数",
          "source" : "8d74515f7e369845.txt",
          "type" : "text/plain",
          "size" : 11
        }, {
          "uid" : "c1ccc6b0e45bec97",
          "name" : "查询结果（共1条，显示前1条）",
          "source" : "c1ccc6b0e45bec97.json",
          "type" : "application/json",
          "size" : 1072
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ {
        "uid" : "deb0a58d53a1748b",
        "name" : "等待结果",
        "source" : "deb0a58d53a1748b.txt",
        "type" : "text/plain",
        "size" : 40
      } ],
      "parameters" : [ ],
      "stepsCount" : 2,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 4
    }, {
      "name" : "校验账号状态和净值（核心业务规则）",
      "time" : {
        "start" : 1755512974341,
        "stop" : 1755564918774,
        "duration" : 51944433
      },
      "status" : "broken",
      "statusMessage" : "pymysql.err.InterfaceError: (0, '')\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_vps\\test_create_scene.py\", line 202, in test_dbimport_addSlave\n    db_sub_data = self.wait_for_database_record(\n  File \"D:\\pycharm_test\\lingkuan_819\\commons\\api_base.py\", line 662, in wait_for_database_record\n    final_result = self._execute_query(\n  File \"D:\\pycharm_test\\lingkuan_819\\commons\\api_base.py\", line 718, in _execute_query\n    return self.query_database(\n  File \"D:\\pycharm_test\\lingkuan_819\\commons\\api_base.py\", line 398, in query_database\n    cursor.execute(final_sql, params)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 153, in execute\n    result = self._query(query)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\cursors.py\", line 322, in _query\n    conn.query(q)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 562, in query\n    self._execute_command(COMMAND.COM_QUERY, sql)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 843, in _execute_command\n    raise err.InterfaceError(0, \"\")\n",
      "steps" : [ {
        "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
        "time" : {
          "start" : 1755512974342,
          "stop" : 1755512974342,
          "duration" : 0
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : false,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 0
      } ],
      "attachments" : [ {
        "uid" : "fc5784322a21ed9f",
        "name" : "数据库异常",
        "source" : "fc5784322a21ed9f.txt",
        "type" : "text/plain",
        "size" : 180
      } ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 1
    } ],
    "attachments" : [ {
      "uid" : "89cd435e111d2db4",
      "name" : "log",
      "source" : "89cd435e111d2db4.txt",
      "type" : "text/plain",
      "size" : 32391
    } ],
    "parameters" : [ ],
    "stepsCount" : 17,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 22
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755565029956,
      "stop" : 1755565029956,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755565029966,
      "stop" : 1755565029966,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755564918902,
      "stop" : 1755564918904,
      "duration" : 2
    },
    "status" : "broken",
    "statusMessage" : "pymysql.err.InterfaceError: (0, '')\n",
    "statusTrace" : "  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 231, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\fixtures.py\", line 907, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\pycharm_test\\lingkuan_819\\conftest.py\", line 203, in db_transaction\n    db.commit()  # 替代 rollback()，确保看到其他会话的新数据\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 482, in commit\n    self._execute_command(COMMAND.COM_QUERY, \"COMMIT\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\pymysql\\connections.py\", line 843, in _execute_command\n    raise err.InterfaceError(0, \"\")\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "账号管理-创建跟单账号"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_create_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate_Scene"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "6824-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_create_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "c18e48d95161c436.json",
  "parameterValues" : [ ]
}