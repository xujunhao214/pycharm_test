{
  "uid" : "d2058da698ae2719",
  "name" : "数据库校验-交易平仓-主指令及订单详情数据检查-有4个订单",
  "fullName" : "test_vps.test_vps_masOrderClose.TestVPStradingOrders6#test_dbquery_orderSendclose",
  "historyId" : "e0a6ac7d492df764ac98b506d6405b33",
  "time" : {
    "start" : 1755854039014,
    "stop" : 1755854039938,
    "duration" : 924
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有vps策略和vps跟单\n      1. 进行开仓，手数范围：0.1-1，总订单数量4\n      2. 进行平仓-订单数量2\n      3. 校验平仓的订单数，应该等于2\n      4. 进行平仓-订单数量2\n      5. 校验平仓的订单数,等于4\n    - 预期结果：平仓的订单数量功能正确\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有vps策略和vps跟单\n  1. 进行开仓，手数范围：0.1-1，总订单数量4\n  2. 进行平仓-订单数量2\n  3. 校验平仓的订单数，应该等于2\n  4. 进行平仓-订单数量2\n  5. 校验平仓的订单数,等于4\n- 预期结果：平仓的订单数量功能正确\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nassert 8 == 4\n +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_masOrderClose.TestVPSMasOrderclose.TestVPStradingOrders6 object at 0x000001A7B6FA3E50>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001A7B6FBDE50>\ndb_transaction = <pymysql.connections.Connection object at 0x000001A7B74AF7F0>\n\n    @allure.title(\"数据库校验-交易平仓-主指令及订单详情数据检查-有4个订单\")\n    def test_dbquery_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            new_user = var_manager.get_variable(\"new_user\")\n            sql = f\"\"\"\n                    SELECT\n                        fod.size,\n                        fod.close_no,\n                        fod.magical,\n                        fod.open_price,\n                        fod.symbol,\n                        fod.order_no,\n                        foi.true_total_lots,\n                        foi.order_no,\n                        foi.operation_type,\n                        foi.create_time,\n                        foi.status,\n                        foi.total_orders\n                    FROM\n                        follow_order_detail fod\n                    INNER JOIN\n                        follow_order_instruct foi\n                    ON\n                        foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                    WHERE foi.operation_type = %s\n                        AND fod.account = %s\n                        \"\"\"\n            params = (\n                '1',\n                new_user[\"account\"],\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n>           assert len(db_data) == 4, f\"平仓的订单数量功能错误，应该有4个平仓订单，结果有{len(db_data)}个订单\"\nE           AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nE           assert 8 == 4\nE            +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])\n\ntest_vps\\test_vps_masOrderClose.py:1811: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1755854038571,
      "stop" : 1755854039013,
      "duration" : 442
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755854039014,
      "stop" : 1755854039014,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有vps策略和vps跟单\n      1. 进行开仓，手数范围：0.1-1，总订单数量4\n      2. 进行平仓-订单数量2\n      3. 校验平仓的订单数，应该等于2\n      4. 进行平仓-订单数量2\n      5. 校验平仓的订单数,等于4\n    - 预期结果：平仓的订单数量功能正确\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nassert 8 == 4\n +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_masOrderClose.TestVPSMasOrderclose.TestVPStradingOrders6 object at 0x000001A7B6FA3E50>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001A7B6FBDE50>\ndb_transaction = <pymysql.connections.Connection object at 0x000001A7B74AF7F0>\n\n    @allure.title(\"数据库校验-交易平仓-主指令及订单详情数据检查-有4个订单\")\n    def test_dbquery_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            new_user = var_manager.get_variable(\"new_user\")\n            sql = f\"\"\"\n                    SELECT\n                        fod.size,\n                        fod.close_no,\n                        fod.magical,\n                        fod.open_price,\n                        fod.symbol,\n                        fod.order_no,\n                        foi.true_total_lots,\n                        foi.order_no,\n                        foi.operation_type,\n                        foi.create_time,\n                        foi.status,\n                        foi.total_orders\n                    FROM\n                        follow_order_detail fod\n                    INNER JOIN\n                        follow_order_instruct foi\n                    ON\n                        foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                    WHERE foi.operation_type = %s\n                        AND fod.account = %s\n                        \"\"\"\n            params = (\n                '1',\n                new_user[\"account\"],\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n>           assert len(db_data) == 4, f\"平仓的订单数量功能错误，应该有4个平仓订单，结果有{len(db_data)}个订单\"\nE           AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nE           assert 8 == 4\nE            +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])\n\ntest_vps\\test_vps_masOrderClose.py:1811: AssertionError",
    "steps" : [ {
      "name" : "1. 获取订单详情界面跟单账号数据",
      "time" : {
        "start" : 1755854039014,
        "stop" : 1755854039938,
        "duration" : 924
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "数据库查询结果",
        "time" : {
          "start" : 1755854039937,
          "stop" : 1755854039938,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "7a231295adf08208",
          "name" : "执行SQL",
          "source" : "7a231295adf08208.txt",
          "type" : "text/plain",
          "size" : 1078
        }, {
          "uid" : "1abb568f65037c06",
          "name" : "SQL参数",
          "source" : "1abb568f65037c06.txt",
          "type" : "text/plain",
          "size" : 21
        }, {
          "uid" : "5a37ebf955501a56",
          "name" : "查询结果（共8条，显示前50条）",
          "source" : "5a37ebf955501a56.json",
          "type" : "application/json",
          "size" : 2629
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3
    }, {
      "name" : "2. 数据校验",
      "time" : {
        "start" : 1755854039938,
        "stop" : 1755854039938,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nassert 8 == 4\n +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_vps\\test_vps_masOrderClose.py\", line 1811, in test_dbquery_orderSendclose\n    assert len(db_data) == 4, f\"平仓的订单数量功能错误，应该有4个平仓订单，结果有{len(db_data)}个订单\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "4ff07b69fc9fe552",
      "name" : "log",
      "source" : "4ff07b69fc9fe552.txt",
      "type" : "text/plain",
      "size" : 10427
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 4
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1755854039952,
      "stop" : 1755854039952,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755854039951,
      "stop" : 1755854039951,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "场景6：平仓的订单数量功能校验-4"
  }, {
    "name" : "feature",
    "value" : "VPS策略账号交易下单-平仓的功能校验"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_masOrderClose"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSMasOrderclose"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "32068-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_masOrderClose"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "5e2f2b3ebbade574",
      "status" : "failed",
      "statusDetails" : "AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nassert 8 == 4\n +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])",
      "time" : {
        "start" : 1755854032611,
        "stop" : 1755854033545,
        "duration" : 934
      }
    }, {
      "uid" : "3bfc06358e758177",
      "status" : "failed",
      "statusDetails" : "AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nassert 8 == 4\n +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])",
      "time" : {
        "start" : 1755854026148,
        "stop" : 1755854027154,
        "duration" : 1006
      }
    }, {
      "uid" : "d02b8b3123828828",
      "status" : "failed",
      "statusDetails" : "AssertionError: 平仓的订单数量功能错误，应该有4个平仓订单，结果有8个订单\nassert 8 == 4\n +  where 8 = len([{'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 93795, ...}, {'close_no': '1837293454443', 'create_time': '2025-08-22 17:13:37', 'foi.order_no': '1837293454443', 'magical': 68336, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 43949, ...}, {'close_no': '2297433738548', 'create_time': '2025-08-22 17:13:17', 'foi.order_no': '2297433738548', 'magical': 39213, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 29719, ...}, {'close_no': '2496403343279', 'create_time': '2025-08-22 17:13:11', 'foi.order_no': '2496403343279', 'magical': 86471, ...}, ...])",
      "time" : {
        "start" : 1755854019771,
        "stop" : 1755854020686,
        "duration" : 915
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d2058da698ae2719.json",
  "parameterValues" : [ ]
}