{
  "uid" : "582795c4e9a62d76",
  "name" : "策略开仓及备注校验（场景二）",
  "fullName" : "test_vps.test_vpsfixed_annotations.TestVPSOrderSend_AllRemarkScenarios#test_scenario2_trader_orderSend_and_verify",
  "historyId" : "4460881606616e4fad1266fc7f57739a",
  "time" : {
    "start" : 1755595224238,
    "stop" : 1755595257584,
    "duration" : 33346
  },
  "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单，验证三种备注场景的跟单行为\n- 三种场景：\n  1. 策略有固定注释，跟单无固定注释 → 预期：跟单取策略备注\n  2. 策略有固定注释，跟单有固定注释 → 预期：跟单取自身备注\n  3. 策略开启订单备注，跟单无固定注释 → 预期：跟单取开仓备注\n",
  "descriptionHtml" : "<h3>用例说明</h3>\n<ul>\n<li>前置条件：有vps策略和vps跟单，验证三种备注场景的跟单行为</li>\n<li>三种场景：\n<ol>\n<li>策略有固定注释，跟单无固定注释 → 预期：跟单取策略备注</li>\n<li>策略有固定注释，跟单有固定注释 → 预期：跟单取自身备注</li>\n<li>策略开启订单备注，跟单无固定注释 → 预期：跟单取开仓备注</li>\n</ol>\n</li>\n</ul>\n",
  "status" : "broken",
  "statusMessage" : "pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_vpsfixed_annotations.TestVPSOrderSend_AllRemarkScenarios object at 0x000001E45191BDC0>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001E45191B640>\nlogged_session = <lingkuan_819.commons.session.EnvironmentSession object at 0x000001E451A33520>\ndb_transaction = <pymysql.connections.Connection object at 0x000001E4519FC1F0>\n\n    @allure.story(\"场景二：策略有固定注释，跟单有固定注释\")\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"策略开仓及备注校验（场景二）\")\n    def test_scenario2_trader_orderSend_and_verify(self, var_manager, logged_session, db_transaction):\n        # 1. 开仓请求\n        trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n        vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n        data = {\n            \"symbol\": trader_ordersend[\"symbol\"],\n            \"placedType\": 0,\n            \"remark\": \"ceshikaicangbeizhu\",\n            \"intervalTime\": 100,\n            \"type\": 0,\n            \"totalNum\": trader_ordersend[\"totalNum\"],\n            \"totalSzie\": trader_ordersend[\"totalSzie\"],\n            \"startSize\": trader_ordersend[\"startSize\"],\n            \"endSize\": trader_ordersend[\"endSize\"],\n            \"traderId\": vps_trader_id\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/subcontrol/trader/orderSend',\n            json_data=data,\n        )\n        self.assert_response_status(response, 200, \"策略开仓失败（场景二）\")\n    \n        # 2. 数据库校验\n        vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n        sql = \"\"\"\n            SELECT fod.comment FROM follow_order_detail fod\n            INNER JOIN follow_order_instruct foi\n                ON foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n            WHERE foi.operation_type = %s AND fod.account = %s\n        \"\"\"\n        params = ('0', vps_user_accounts_1)\n>       db_data = self.wait_for_database_record(\n            db_transaction=db_transaction,\n            sql=sql,\n            params=params,\n            time_field=\"foi.create_time\"\n        )\n\ntest_vps\\test_vpsfixed_annotations.py:280: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:708: in _execute_query\n    return self.query_database_with_time(\ncommons\\api_base.py:480: in query_database_with_time\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:563: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:825: in _read_query_result\n    result.read()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:1199: in read\n    first_packet = self.connection._read_packet()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:775: in _read_packet\n    packet.raise_for_error()\n..\\venv\\lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff\\x1c\\x04#23000Column 'create_time' in order clause is ambiguous\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")\n\n..\\venv\\lib\\site-packages\\pymysql\\err.py:150: OperationalError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1755595223825,
      "stop" : 1755595224238,
      "duration" : 413
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1755595222399,
      "stop" : 1755595223825,
      "duration" : 1426
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755595187947,
      "stop" : 1755595187947,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755595224238,
      "stop" : 1755595224238,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1755595187947,
      "stop" : 1755595187948,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1755595195813,
      "stop" : 1755595195813,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755595187947,
      "stop" : 1755595187947,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1755595222399,
      "stop" : 1755595222399,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "\n### 用例说明\n- 前置条件：有vps策略和vps跟单，验证三种备注场景的跟单行为\n- 三种场景：\n  1. 策略有固定注释，跟单无固定注释 → 预期：跟单取策略备注\n  2. 策略有固定注释，跟单有固定注释 → 预期：跟单取自身备注\n  3. 策略开启订单备注，跟单无固定注释 → 预期：跟单取开仓备注\n",
    "status" : "broken",
    "statusMessage" : "pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_vpsfixed_annotations.TestVPSOrderSend_AllRemarkScenarios object at 0x000001E45191BDC0>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001E45191B640>\nlogged_session = <lingkuan_819.commons.session.EnvironmentSession object at 0x000001E451A33520>\ndb_transaction = <pymysql.connections.Connection object at 0x000001E4519FC1F0>\n\n    @allure.story(\"场景二：策略有固定注释，跟单有固定注释\")\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"策略开仓及备注校验（场景二）\")\n    def test_scenario2_trader_orderSend_and_verify(self, var_manager, logged_session, db_transaction):\n        # 1. 开仓请求\n        trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n        vps_trader_id = var_manager.get_variable(\"vps_trader_id\")\n        data = {\n            \"symbol\": trader_ordersend[\"symbol\"],\n            \"placedType\": 0,\n            \"remark\": \"ceshikaicangbeizhu\",\n            \"intervalTime\": 100,\n            \"type\": 0,\n            \"totalNum\": trader_ordersend[\"totalNum\"],\n            \"totalSzie\": trader_ordersend[\"totalSzie\"],\n            \"startSize\": trader_ordersend[\"startSize\"],\n            \"endSize\": trader_ordersend[\"endSize\"],\n            \"traderId\": vps_trader_id\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/subcontrol/trader/orderSend',\n            json_data=data,\n        )\n        self.assert_response_status(response, 200, \"策略开仓失败（场景二）\")\n    \n        # 2. 数据库校验\n        vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n        sql = \"\"\"\n            SELECT fod.comment FROM follow_order_detail fod\n            INNER JOIN follow_order_instruct foi\n                ON foi.order_no = fod.send_no COLLATE utf8mb4_0900_ai_ci\n            WHERE foi.operation_type = %s AND fod.account = %s\n        \"\"\"\n        params = ('0', vps_user_accounts_1)\n>       db_data = self.wait_for_database_record(\n            db_transaction=db_transaction,\n            sql=sql,\n            params=params,\n            time_field=\"foi.create_time\"\n        )\n\ntest_vps\\test_vpsfixed_annotations.py:280: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\api_base.py:662: in wait_for_database_record\n    final_result = self._execute_query(\ncommons\\api_base.py:708: in _execute_query\n    return self.query_database_with_time(\ncommons\\api_base.py:480: in query_database_with_time\n    return self.query_database(\ncommons\\api_base.py:398: in query_database\n    cursor.execute(final_sql, params)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:153: in execute\n    result = self._query(query)\n..\\venv\\lib\\site-packages\\pymysql\\cursors.py:322: in _query\n    conn.query(q)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:563: in query\n    self._affected_rows = self._read_query_result(unbuffered=unbuffered)\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:825: in _read_query_result\n    result.read()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:1199: in read\n    first_packet = self.connection._read_packet()\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:775: in _read_packet\n    packet.raise_for_error()\n..\\venv\\lib\\site-packages\\pymysql\\protocol.py:219: in raise_for_error\n    err.raise_mysql_exception(self._data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ndata = b\"\\xff\\x1c\\x04#23000Column 'create_time' in order clause is ambiguous\"\n\n    def raise_mysql_exception(data):\n        errno = struct.unpack(\"<h\", data[1:3])[0]\n        # https://dev.mysql.com/doc/dev/mysql-server/latest/page_protocol_basic_err_packet.html\n        # Error packet has optional sqlstate that is 5 bytes and starts with '#'.\n        if data[3] == 0x23:  # '#'\n            # sqlstate = data[4:9].decode()\n            # TODO: Append (sqlstate) in the error message. This will be come in next minor release.\n            errval = data[9:].decode(\"utf-8\", \"replace\")\n        else:\n            errval = data[3:].decode(\"utf-8\", \"replace\")\n        errorclass = error_map.get(errno)\n        if errorclass is None:\n            errorclass = InternalError if errno < 1000 else OperationalError\n>       raise errorclass(errno, errval)\nE       pymysql.err.OperationalError: (1052, \"Column 'create_time' in order clause is ambiguous\")\n\n..\\venv\\lib\\site-packages\\pymysql\\err.py:150: OperationalError",
    "steps" : [ {
      "name" : "发送 POST 请求到 /subcontrol/trader/orderSend",
      "time" : {
        "start" : 1755595224238,
        "stop" : 1755595225679,
        "duration" : 1441
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "请求详情",
        "time" : {
          "start" : 1755595224239,
          "stop" : 1755595224241,
          "duration" : 2
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "58e6a18492f8de0f",
          "name" : "请求URL",
          "source" : "58e6a18492f8de0f.txt",
          "type" : "text/plain",
          "size" : 28
        }, {
          "uid" : "fbb4de8f5658dde4",
          "name" : "请求头",
          "source" : "fbb4de8f5658dde4.json",
          "type" : "application/json",
          "size" : 234
        }, {
          "uid" : "2128fe200a9235df",
          "name" : "请求体（JSON）",
          "source" : "2128fe200a9235df.json",
          "type" : "application/json",
          "size" : 219
        } ],
        "parameters" : [ ],
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      }, {
        "name" : "响应详情",
        "time" : {
          "start" : 1755595224664,
          "stop" : 1755595224667,
          "duration" : 3
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "1c7f484b7d309b57",
          "name" : "响应状态码",
          "source" : "1c7f484b7d309b57.txt",
          "type" : "text/plain",
          "size" : 3
        }, {
          "uid" : "bd7facb893c92ce8",
          "name" : "响应头",
          "source" : "bd7facb893c92ce8.json",
          "type" : "application/json",
          "size" : 526
        }, {
          "uid" : "1f83509c053ad3b2",
          "name" : "响应体（JSON）",
          "source" : "1f83509c053ad3b2.json",
          "type" : "application/json",
          "size" : 51
        } ],
        "parameters" : [ ],
        "attachmentsCount" : 3,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 6,
      "shouldDisplayMessage" : false,
      "stepsCount" : 2,
      "hasContent" : true
    }, {
      "name" : "等待数据库记录稳定（超时: 30秒，稳定期: 3秒）",
      "time" : {
        "start" : 1755595225679,
        "stop" : 1755595225679,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ {
      "uid" : "bb38366f4db79eef",
      "name" : "数据库异常",
      "source" : "bb38366f4db79eef.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "87fa70918996e25f",
      "name" : "数据库异常",
      "source" : "87fa70918996e25f.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "2e8851b0d16e1e9a",
      "name" : "数据库异常",
      "source" : "2e8851b0d16e1e9a.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "4b6cd836ee7ea31c",
      "name" : "数据库异常",
      "source" : "4b6cd836ee7ea31c.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "20bc923a878e5fc0",
      "name" : "数据库异常",
      "source" : "20bc923a878e5fc0.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "4133e67cf71f84db",
      "name" : "数据库异常",
      "source" : "4133e67cf71f84db.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "fcac3768839e452",
      "name" : "数据库异常",
      "source" : "fcac3768839e452.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "48fedf107d32d877",
      "name" : "数据库异常",
      "source" : "48fedf107d32d877.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "a1d8854cfbb34572",
      "name" : "数据库异常",
      "source" : "a1d8854cfbb34572.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "4572c15fdce01985",
      "name" : "数据库异常",
      "source" : "4572c15fdce01985.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "1a1816ac11f87faa",
      "name" : "数据库异常",
      "source" : "1a1816ac11f87faa.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "34beab3cb7704f26",
      "name" : "数据库异常",
      "source" : "34beab3cb7704f26.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "794a5a5c562a845c",
      "name" : "数据库异常",
      "source" : "794a5a5c562a845c.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "b3ad7dd0a9f2a490",
      "name" : "数据库异常",
      "source" : "b3ad7dd0a9f2a490.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "d7aca434d095ddf2",
      "name" : "数据库异常",
      "source" : "d7aca434d095ddf2.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "3e943e5f1e0c9806",
      "name" : "数据库异常",
      "source" : "3e943e5f1e0c9806.txt",
      "type" : "text/plain",
      "size" : 356
    }, {
      "uid" : "803f00144e800394",
      "name" : "log",
      "source" : "803f00144e800394.txt",
      "type" : "text/plain",
      "size" : 39415
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 23,
    "shouldDisplayMessage" : true,
    "stepsCount" : 4,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1755595257760,
      "stop" : 1755595257760,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1755595257761,
      "stop" : 1755595257761,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755595257759,
      "stop" : 1755595257759,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755595306359,
      "stop" : 1755595306360,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1755595257761,
      "stop" : 1755595257761,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略下单-跟随策略账号订单备注（三种情况汇总）"
  }, {
    "name" : "story",
    "value" : "场景二：策略有固定注释，跟单有固定注释"
  }, {
    "name" : "tag",
    "value" : "url('vps')"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vpsfixed_annotations"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend_AllRemarkScenarios"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "40680-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vpsfixed_annotations"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "url('vps')" ]
  },
  "source" : "582795c4e9a62d76.json",
  "parameterValues" : [ ]
}