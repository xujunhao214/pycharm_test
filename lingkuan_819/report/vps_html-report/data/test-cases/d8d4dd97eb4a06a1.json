{
  "uid" : "d8d4dd97eb4a06a1",
  "name" : "数据库校验-交易平仓-跟单指令及订单详情数据检查-没有订单",
  "fullName" : "test_vps.test_vps_masOrderClose.TestVPStradingOrders3#test_dbquery_addsalve_orderSendclose",
  "historyId" : "16efec39f596b5e0a3b260989dca55dd",
  "time" : {
    "start" : 1755853886896,
    "stop" : 1755853886949,
    "duration" : 53
  },
  "description" : "\n    ### 测试说明\n    - 前置条件：有vps策略和vps跟单\n      1. 修改跟单账号，跟单方向-反向sell\n      2. 进行开仓\n      3. 交易下单-跟单账号自己平仓-buy\n      4. 校验平仓的订单数，应该不等于4\n      5. 交易下单-跟单账号自己平仓-sell\n      6. 校验平仓的订单数,等于4\n    - 预期结果：平仓的订单方向功能正确\n    ",
  "descriptionHtml" : "<pre><code>### 测试说明\n- 前置条件：有vps策略和vps跟单\n  1. 修改跟单账号，跟单方向-反向sell\n  2. 进行开仓\n  3. 交易下单-跟单账号自己平仓-buy\n  4. 校验平仓的订单数，应该不等于4\n  5. 交易下单-跟单账号自己平仓-sell\n  6. 校验平仓的订单数,等于4\n- 预期结果：平仓的订单方向功能正确\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: 平仓的订单方向错误，应该没有4个平仓订单，结果有4个订单\nassert 4 != 4\n +  where 4 = len([{'close_no': '2986598881981', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '2986598881981', 'magical': 360479, ...}, {'close_no': '1751644444789', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '1751644444789', 'magical': 360480, ...}, {'close_no': '8525138535547', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '8525138535547', 'magical': 360482, ...}, {'close_no': '2026086600434', 'create_time': '2025-08-22 17:10:30', 'foi.order_no': '2026086600434', 'magical': 360481, ...}])",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_masOrderClose.TestVPSMasOrderclose.TestVPStradingOrders3 object at 0x000001A7B6F93AC0>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001A7B6FBDE50>\ndb_transaction = <pymysql.connections.Connection object at 0x000001A7B74EA220>\n\n    @allure.title(\"数据库校验-交易平仓-跟单指令及订单详情数据检查-没有订单\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n               SELECT\n                   fod.size,\n                   fod.close_no,\n                   fod.magical,\n                   fod.open_price,\n                   fod.symbol,\n                   fod.order_no,\n                   foi.true_total_lots,\n                   foi.order_no,\n                   foi.operation_type,\n                   foi.create_time,\n                   foi.status,\n                   foi.min_lot_size,\n                   foi.max_lot_size,\n                   foi.total_lots,\n                   foi.master_order,\n                   foi.total_orders\n               FROM\n                   follow_order_detail fod\n               INNER JOIN\n                   follow_order_instruct foi\n               ON\n                   foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n               WHERE foi.operation_type = %s\n                   AND fod.account = %s\n                   AND fod.trader_id = %s\n                   \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n>           assert len(db_data) != 4, f\"平仓的订单方向错误，应该没有4个平仓订单，结果有{len(db_data)}个订单\"\nE           AssertionError: 平仓的订单方向错误，应该没有4个平仓订单，结果有4个订单\nE           assert 4 != 4\nE            +  where 4 = len([{'close_no': '2986598881981', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '2986598881981', 'magical': 360479, ...}, {'close_no': '1751644444789', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '1751644444789', 'magical': 360480, ...}, {'close_no': '8525138535547', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '8525138535547', 'magical': 360482, ...}, {'close_no': '2026086600434', 'create_time': '2025-08-22 17:10:30', 'foi.order_no': '2026086600434', 'magical': 360481, ...}])\n\ntest_vps\\test_vps_masOrderClose.py:831: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755853886896,
      "stop" : 1755853886896,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755853886461,
      "stop" : 1755853886896,
      "duration" : 435
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n    ### 测试说明\n    - 前置条件：有vps策略和vps跟单\n      1. 修改跟单账号，跟单方向-反向sell\n      2. 进行开仓\n      3. 交易下单-跟单账号自己平仓-buy\n      4. 校验平仓的订单数，应该不等于4\n      5. 交易下单-跟单账号自己平仓-sell\n      6. 校验平仓的订单数,等于4\n    - 预期结果：平仓的订单方向功能正确\n    ",
    "status" : "failed",
    "statusMessage" : "AssertionError: 平仓的订单方向错误，应该没有4个平仓订单，结果有4个订单\nassert 4 != 4\n +  where 4 = len([{'close_no': '2986598881981', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '2986598881981', 'magical': 360479, ...}, {'close_no': '1751644444789', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '1751644444789', 'magical': 360480, ...}, {'close_no': '8525138535547', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '8525138535547', 'magical': 360482, ...}, {'close_no': '2026086600434', 'create_time': '2025-08-22 17:10:30', 'foi.order_no': '2026086600434', 'magical': 360481, ...}])",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_vps_masOrderClose.TestVPSMasOrderclose.TestVPStradingOrders3 object at 0x000001A7B6F93AC0>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x000001A7B6FBDE50>\ndb_transaction = <pymysql.connections.Connection object at 0x000001A7B74EA220>\n\n    @allure.title(\"数据库校验-交易平仓-跟单指令及订单详情数据检查-没有订单\")\n    def test_dbquery_addsalve_orderSendclose(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n               SELECT\n                   fod.size,\n                   fod.close_no,\n                   fod.magical,\n                   fod.open_price,\n                   fod.symbol,\n                   fod.order_no,\n                   foi.true_total_lots,\n                   foi.order_no,\n                   foi.operation_type,\n                   foi.create_time,\n                   foi.status,\n                   foi.min_lot_size,\n                   foi.max_lot_size,\n                   foi.total_lots,\n                   foi.master_order,\n                   foi.total_orders\n               FROM\n                   follow_order_detail fod\n               INNER JOIN\n                   follow_order_instruct foi\n               ON\n                   foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n               WHERE foi.operation_type = %s\n                   AND fod.account = %s\n                   AND fod.trader_id = %s\n                   \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"foi.create_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n>           assert len(db_data) != 4, f\"平仓的订单方向错误，应该没有4个平仓订单，结果有{len(db_data)}个订单\"\nE           AssertionError: 平仓的订单方向错误，应该没有4个平仓订单，结果有4个订单\nE           assert 4 != 4\nE            +  where 4 = len([{'close_no': '2986598881981', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '2986598881981', 'magical': 360479, ...}, {'close_no': '1751644444789', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '1751644444789', 'magical': 360480, ...}, {'close_no': '8525138535547', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '8525138535547', 'magical': 360482, ...}, {'close_no': '2026086600434', 'create_time': '2025-08-22 17:10:30', 'foi.order_no': '2026086600434', 'magical': 360481, ...}])\n\ntest_vps\\test_vps_masOrderClose.py:831: AssertionError",
    "steps" : [ {
      "name" : "1. 获取订单详情界面跟单账号数据",
      "time" : {
        "start" : 1755853886896,
        "stop" : 1755853886949,
        "duration" : 53
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "数据库查询结果",
        "time" : {
          "start" : 1755853886948,
          "stop" : 1755853886949,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "95224382b017d917",
          "name" : "执行SQL",
          "source" : "95224382b017d917.txt",
          "type" : "text/plain",
          "size" : 1176
        }, {
          "uid" : "6a0bff25fa8bfb2b",
          "name" : "SQL参数",
          "source" : "6a0bff25fa8bfb2b.txt",
          "type" : "text/plain",
          "size" : 27
        }, {
          "uid" : "8609b7a9f987eb73",
          "name" : "查询结果（共4条，显示前50条）",
          "source" : "8609b7a9f987eb73.json",
          "type" : "application/json",
          "size" : 1730
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3
    }, {
      "name" : "2. 数据校验",
      "time" : {
        "start" : 1755853886949,
        "stop" : 1755853886949,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 平仓的订单方向错误，应该没有4个平仓订单，结果有4个订单\nassert 4 != 4\n +  where 4 = len([{'close_no': '2986598881981', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '2986598881981', 'magical': 360479, ...}, {'close_no': '1751644444789', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '1751644444789', 'magical': 360480, ...}, {'close_no': '8525138535547', 'create_time': '2025-08-22 17:10:38', 'foi.order_no': '8525138535547', 'magical': 360482, ...}, {'close_no': '2026086600434', 'create_time': '2025-08-22 17:10:30', 'foi.order_no': '2026086600434', 'magical': 360481, ...}])\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_vps\\test_vps_masOrderClose.py\", line 831, in test_dbquery_addsalve_orderSendclose\n    assert len(db_data) != 4, f\"平仓的订单方向错误，应该没有4个平仓订单，结果有{len(db_data)}个订单\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "aa273d2c78904930",
      "name" : "log",
      "source" : "aa273d2c78904930.txt",
      "type" : "text/plain",
      "size" : 2710
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 4
  },
  "afterStages" : [ {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755853886962,
      "stop" : 1755853886962,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755853886963,
      "stop" : 1755853886963,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "场景3：平仓的订单方向功能校验-sell"
  }, {
    "name" : "feature",
    "value" : "VPS策略账号交易下单-平仓的功能校验"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_vps_masOrderClose"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSMasOrderclose"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "32068-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_vps_masOrderClose"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "d8d4dd97eb4a06a1.json",
  "parameterValues" : [ ]
}