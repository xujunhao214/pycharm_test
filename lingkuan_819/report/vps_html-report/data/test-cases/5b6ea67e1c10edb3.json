{
  "uid" : "5b6ea67e1c10edb3",
  "name" : "数据库校验-交易平仓-跟单指令及订单详情数据检查-有订单",
  "fullName" : "test_vps.test_lianxi.TestVPStradingOrders2#test_dbquery_addsalve_orderSendclose2",
  "historyId" : "f8514ae5baa16e3d759c76faebf3eb5c",
  "time" : {
    "start" : 1755768678928,
    "stop" : 1755768678982,
    "duration" : 54
  },
  "description" : "\n### 测试说明\n- 前置条件：有vps策略和vps跟单\n  1. 进行开仓，手数范围0.1-1，总订单2\n  2. 进行平仓-错误的币种\n  3. 校验平仓订单数-应该没有开仓订单\n  4. 进行平仓-正常平仓\n  5. 校验平仓的订单数\n- 预期结果：平仓的品种功能正确\n",
  "descriptionHtml" : "<h3>测试说明</h3>\n<ul>\n<li>前置条件：有vps策略和vps跟单\n<ol>\n<li>进行开仓，手数范围0.1-1，总订单2</li>\n<li>进行平仓-错误的币种</li>\n<li>校验平仓订单数-应该没有开仓订单</li>\n<li>进行平仓-正常平仓</li>\n<li>校验平仓的订单数</li>\n</ol>\n</li>\n<li>预期结果：平仓的品种功能正确</li>\n</ul>\n",
  "status" : "failed",
  "statusMessage" : "Failed: 数据库查询结果为空，无法提取数据",
  "statusTrace" : "self = <lingkuan_819.test_vps.test_lianxi.TestVPStradingOrders2 object at 0x00000194BEB466A0>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x00000194BEB5B100>\ndb_transaction = <pymysql.connections.Connection object at 0x00000194BEB46C70>\n\n    @allure.title(\"数据库校验-交易平仓-跟单指令及订单详情数据检查-有订单\")\n    def test_dbquery_addsalve_orderSendclose2(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                        SELECT\n                            fod.size,\n                            fod.close_no,\n                            fod.magical,\n                            fod.open_price,\n                            fod.symbol,\n                            fod.order_no,\n                            foi.true_total_lots,\n                            foi.order_no,\n                            foi.operation_type,\n                            foi.create_time,\n                            foi.status,\n                            foi.min_lot_size,\n                            foi.max_lot_size,\n                            foi.total_lots,\n                            foi.master_order,\n                            foi.total_orders\n                        FROM\n                            follow_order_detail fod\n                        INNER JOIN\n                            follow_order_instruct foi\n                        ON\n                            foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                        WHERE foi.operation_type = %s\n                            AND fod.account = %s\n                            AND fod.trader_id = %s\n                            \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            if not db_data:\n>               pytest.fail(\"数据库查询结果为空，无法提取数据\")\nE               Failed: 数据库查询结果为空，无法提取数据\n\ntest_vps\\test_lianxi.py:300: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1755768666617,
      "stop" : 1755768666617,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1755768678928,
      "stop" : 1755768678928,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1755768672321,
      "stop" : 1755768672321,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1755768678472,
      "stop" : 1755768678927,
      "duration" : 455
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1755768666616,
      "stop" : 1755768666617,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "test_group",
    "time" : {
      "start" : 1755768666617,
      "stop" : 1755768666617,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "\n### 测试说明\n- 前置条件：有vps策略和vps跟单\n  1. 进行开仓，手数范围0.1-1，总订单2\n  2. 进行平仓-错误的币种\n  3. 校验平仓订单数-应该没有开仓订单\n  4. 进行平仓-正常平仓\n  5. 校验平仓的订单数\n- 预期结果：平仓的品种功能正确\n",
    "status" : "failed",
    "statusMessage" : "Failed: 数据库查询结果为空，无法提取数据",
    "statusTrace" : "self = <lingkuan_819.test_vps.test_lianxi.TestVPStradingOrders2 object at 0x00000194BEB466A0>\nvar_manager = <lingkuan_819.commons.variable_manager.VariableManager object at 0x00000194BEB5B100>\ndb_transaction = <pymysql.connections.Connection object at 0x00000194BEB46C70>\n\n    @allure.title(\"数据库校验-交易平仓-跟单指令及订单详情数据检查-有订单\")\n    def test_dbquery_addsalve_orderSendclose2(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            vps_user_accounts_1 = var_manager.get_variable(\"vps_user_accounts_1\")\n            vps_addslave_id = var_manager.get_variable(\"vps_addslave_id\")\n            sql = f\"\"\"\n                        SELECT\n                            fod.size,\n                            fod.close_no,\n                            fod.magical,\n                            fod.open_price,\n                            fod.symbol,\n                            fod.order_no,\n                            foi.true_total_lots,\n                            foi.order_no,\n                            foi.operation_type,\n                            foi.create_time,\n                            foi.status,\n                            foi.min_lot_size,\n                            foi.max_lot_size,\n                            foi.total_lots,\n                            foi.master_order,\n                            foi.total_orders\n                        FROM\n                            follow_order_detail fod\n                        INNER JOIN\n                            follow_order_instruct foi\n                        ON\n                            foi.order_no = fod.close_no COLLATE utf8mb4_0900_ai_ci\n                        WHERE foi.operation_type = %s\n                            AND fod.account = %s\n                            AND fod.trader_id = %s\n                            \"\"\"\n            params = (\n                '1',\n                vps_user_accounts_1,\n                vps_addslave_id,\n            )\n    \n            # 调用轮询等待方法（带时间范围过滤）\n            db_data = self.query_database_with_time(\n                db_transaction=db_transaction,\n                sql=sql,\n                params=params,\n                time_field=\"fod.close_time\"\n            )\n        with allure.step(\"2. 数据校验\"):\n            if not db_data:\n>               pytest.fail(\"数据库查询结果为空，无法提取数据\")\nE               Failed: 数据库查询结果为空，无法提取数据\n\ntest_vps\\test_lianxi.py:300: Failed",
    "steps" : [ {
      "name" : "1. 获取订单详情界面跟单账号数据",
      "time" : {
        "start" : 1755768678928,
        "stop" : 1755768678982,
        "duration" : 54
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "数据库查询结果",
        "time" : {
          "start" : 1755768678981,
          "stop" : 1755768678982,
          "duration" : 1
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "c01cda26a9c83345",
          "name" : "执行SQL",
          "source" : "c01cda26a9c83345.txt",
          "type" : "text/plain",
          "size" : 1310
        }, {
          "uid" : "a39c756f6885d3aa",
          "name" : "SQL参数",
          "source" : "a39c756f6885d3aa.txt",
          "type" : "text/plain",
          "size" : 27
        }, {
          "uid" : "f9c41f3e86099638",
          "name" : "查询结果（共0条，显示前50条）",
          "source" : "f9c41f3e86099638.json",
          "type" : "application/json",
          "size" : 2
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "shouldDisplayMessage" : false,
        "attachmentsCount" : 3
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 3
    }, {
      "name" : "2. 数据校验",
      "time" : {
        "start" : 1755768678982,
        "stop" : 1755768678982,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "Failed: 数据库查询结果为空，无法提取数据\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_819\\test_vps\\test_lianxi.py\", line 300, in test_dbquery_addsalve_orderSendclose2\n    pytest.fail(\"数据库查询结果为空，无法提取数据\")\n  File \"D:\\pycharm_test\\venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "b217df78c197d811",
      "name" : "log",
      "source" : "b217df78c197d811.txt",
      "type" : "text/plain",
      "size" : 2020
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 4
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1755768678988,
      "stop" : 1755768678988,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1755768678986,
      "stop" : 1755768678986,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1755768678987,
      "stop" : 1755768678987,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "story",
    "value" : "场景1：平仓的品种功能校验"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_lianxi"
  }, {
    "name" : "subSuite",
    "value" : "TestVPStradingOrders2"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "41912-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_lianxi"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "5b6ea67e1c10edb3.json",
  "parameterValues" : [ ]
}