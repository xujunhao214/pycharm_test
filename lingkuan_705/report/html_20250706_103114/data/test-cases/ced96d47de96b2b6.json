{"uid":"ced96d47de96b2b6","name":"平台管理-品种管理-删除品种","fullName":"test_foundation.test_delete_scene.TestDeleteTrader#test_deleteTemplate","historyId":"530a7bfe45f9b1a4983f38708ca65aa4","time":{"start":1751769273718,"stop":1751769278801,"duration":5083},"description":"测试删除用户接口","descriptionHtml":"<p>测试删除用户接口</p>\n","status":"failed","statusMessage":"AssertionError: 响应msg字段应为success\n实际值: 策略者或者跟单者绑定了该模板不能删除\n期望值: success","statusTrace":"self = <lingkuan_705.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABE12B0>\napi_session = <lingkuan_705.commons.session.EnvironmentSession object at 0x00000289FAE576A0>\nvar_manager = <lingkuan_705.commons.variable_manager.VariableManager object at 0x00000289FACA4190>\nlogged_session = <lingkuan_705.commons.session.EnvironmentSession object at 0x00000289FAE576A0>\ndb_transaction = <pymysql.connections.Connection object at 0x00000289FABE18B0>\n\n    @allure.title(\"平台管理-品种管理-删除品种\")\n    def test_deleteTemplate(self, api_session, var_manager, logged_session, db_transaction):\n        \"\"\"测试删除用户接口\"\"\"\n        # 1. 发送删除品种请求\n        template_id2 = var_manager.get_variable(\"template_id2\")\n        response = self.send_delete_request(\n            api_session,\n            '/mascontrol/variety/deleteTemplate',\n            json_data=[template_id2]\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"删除品种失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_foundation\\test_delete_scene.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_705.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABE12B0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值\"\"\"\n        # 假设response对象有extract_jsonpath方法\n        actual_value = response.extract_jsonpath(json_path)\n>       assert actual_value == expected_value, (\n            f\"{error_msg}\\n\"\n            f\"实际值: {actual_value}\\n\"\n            f\"期望值: {expected_value}\"\n        )\nE       AssertionError: 响应msg字段应为success\nE       实际值: 策略者或者跟单者绑定了该模板不能删除\nE       期望值: success\n\ncommons\\api_base.py:116: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"db","time":{"start":1751769074613,"stop":1751769074863,"duration":250},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db_config","time":{"start":1751769074613,"stop":1751769074613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"environment","time":{"start":1751769074613,"stop":1751769074613,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"var_manager","time":{"start":1751769108571,"stop":1751769108572,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"api_session","time":{"start":1751769273519,"stop":1751769273519,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"logged_session","time":{"start":1751769273519,"stop":1751769273667,"duration":148},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db_transaction","time":{"start":1751769273668,"stop":1751769273717,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"testStage":{"description":"测试删除用户接口","status":"failed","statusMessage":"AssertionError: 响应msg字段应为success\n实际值: 策略者或者跟单者绑定了该模板不能删除\n期望值: success","statusTrace":"self = <lingkuan_705.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABE12B0>\napi_session = <lingkuan_705.commons.session.EnvironmentSession object at 0x00000289FAE576A0>\nvar_manager = <lingkuan_705.commons.variable_manager.VariableManager object at 0x00000289FACA4190>\nlogged_session = <lingkuan_705.commons.session.EnvironmentSession object at 0x00000289FAE576A0>\ndb_transaction = <pymysql.connections.Connection object at 0x00000289FABE18B0>\n\n    @allure.title(\"平台管理-品种管理-删除品种\")\n    def test_deleteTemplate(self, api_session, var_manager, logged_session, db_transaction):\n        \"\"\"测试删除用户接口\"\"\"\n        # 1. 发送删除品种请求\n        template_id2 = var_manager.get_variable(\"template_id2\")\n        response = self.send_delete_request(\n            api_session,\n            '/mascontrol/variety/deleteTemplate',\n            json_data=[template_id2]\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"删除品种失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_foundation\\test_delete_scene.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_705.test_foundation.test_delete_scene.TestDeleteTrader object at 0x00000289FABE12B0>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值\"\"\"\n        # 假设response对象有extract_jsonpath方法\n        actual_value = response.extract_jsonpath(json_path)\n>       assert actual_value == expected_value, (\n            f\"{error_msg}\\n\"\n            f\"实际值: {actual_value}\\n\"\n            f\"期望值: {expected_value}\"\n        )\nE       AssertionError: 响应msg字段应为success\nE       实际值: 策略者或者跟单者绑定了该模板不能删除\nE       期望值: success\n\ncommons\\api_base.py:116: AssertionError","steps":[{"name":"发送DELETE请求到 /mascontrol/variety/deleteTemplate","time":{"start":1751769273719,"stop":1751769278794,"duration":5075},"status":"passed","steps":[],"attachments":[{"uid":"cccfc985f3c9391a","name":"请求参数","source":"cccfc985f3c9391a.json","type":"application/json","size":4},{"uid":"e859a9856d696363","name":"响应结果","source":"e859a9856d696363.txt","type":"text/plain","size":110}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0,"attachmentStep":false}],"attachments":[{"uid":"e1b34a5b6957d45a","name":"log","source":"e1b34a5b6957d45a.txt","type":"text/plain","size":3806}],"parameters":[],"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":1,"attachmentStep":false},"afterStages":[{"name":"db_transaction::0","time":{"start":1751769278809,"stop":1751769278858,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"api_session::0","time":{"start":1751769278859,"stop":1751769278859,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"logged_session::0","time":{"start":1751769278859,"stop":1751769278859,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"db::0","time":{"start":1751769443049,"stop":1751769443049,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false},{"name":"var_manager::0","time":{"start":1751769443052,"stop":1751769443052,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0,"attachmentStep":false}],"labels":[{"name":"feature","value":"删除跟单账号和策略账号"},{"name":"parentSuite","value":"test_foundation"},{"name":"suite","value":"test_delete_scene"},{"name":"subSuite","value":"TestDeleteTrader"},{"name":"host","value":"xujunhao"},{"name":"thread","value":"22792-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_foundation.test_delete_scene"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ced96d47de96b2b6.json","parameterValues":[]}