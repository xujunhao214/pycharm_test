{"name": "绑定跟随者账号-301392107", "status": "failed", "statusDetails": {"message": "Failed: ❌ 账号301392107绑定失败：assert_json_value() missing 1 required positional argument: 'error_msg_prefix'", "trace": "self = <template_model.test_cloudTrader.test_create2.Test_follow_batch object at 0x000002206B479F70>\nacc_info = {'account': '301392107', 'password': 'joj6vwd'}\nvar_manager = <template_model.commons.variable_manager.VariableManager object at 0x000002206B4797F0>\nlogged_session = <template_model.commons.session.EnvironmentSession object at 0x000002206B54C1C0>\n\n    @allure.title(\"批量绑定跟随者账号\")\n    @pytest.mark.parametrize(\"acc_info\", FOLLOW_ACCOUNT_LIST)\n    @pytest.mark.dependency(depends=[\n        \"test_extract_global_broker_id\",\n        \"test_extract_global_user_server_id\",\n        \"test_extract_global_jeecg_row_key\"\n    ])\n    def test_batch_follow_account(self, acc_info, var_manager, logged_session):\n        current_acc = acc_info[\"account\"]  # 当前账号（唯一标识）\n        current_pwd = acc_info[\"password\"]\n    \n        # 动态标题+账号信息附加（Allure报告区分账号）\n        allure.dynamic.title(f\"绑定跟随者账号-{current_acc}\")\n        allure.attach(f\"账号：{current_acc}\\n密码：{current_pwd}\",\n                      name=f\"账号{current_acc}基础信息\",\n                      attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n            # 步骤1：首次绑定账号（期望成功）\n>           self._bind_account(logged_session, var_manager, current_acc, current_pwd, expect_success=True)\n\ntest_cloudTrader\\test_create2.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <template_model.test_cloudTrader.test_create2.Test_follow_batch object at 0x000002206B479F70>\nlogged_session = <template_model.commons.session.EnvironmentSession object at 0x000002206B54C1C0>\nvar_manager = <template_model.commons.variable_manager.VariableManager object at 0x000002206B4797F0>\ncurrent_acc = '301392107', current_pwd = 'joj6vwd', expect_success = True\n\n    def _bind_account(self, logged_session, var_manager, current_acc, current_pwd, expect_success):\n        \"\"\"账号绑定（支持首次/重复绑定，读取全局变量）\"\"\"\n        step_title = f\"{'首次绑定' if expect_success else '重复绑定'}账号-{current_acc}\"\n        with allure.step(step_title):\n            # 读取全局变量（用户ID、BrokerID、服务器ID）\n            global_user_id = var_manager.get_variable(GLOBAL_USER_ID)\n            global_broker_id = var_manager.get_variable(GLOBAL_BROKER_ID)\n            global_server_id = var_manager.get_variable(GLOBAL_SERVER_ID)\n    \n            # 构造请求数据\n            data = {\n                \"userId\": global_user_id,\n                \"brokerId\": global_broker_id,\n                \"serverId\": global_server_id,\n                \"account\": current_acc,\n                \"password\": current_pwd,\n                \"display\": \"PRIVATE\",\n                \"passwordType\": \"0\",\n                \"subscribeFee\": \"0\",\n                \"type\": \"SLAVE_REAL\",\n                \"platform\": \"4\"\n            }\n    \n            # 发送请求并附加请求数据到报告\n            response = self.send_post_request(logged_session, '/blockchain/account/bind', json_data=data)\n            allure.attach(json.dumps(data, ensure_ascii=False, indent=2),\n                          name=f\"账号{current_acc}{'首次绑定' if expect_success else '重复绑定'}请求数据\",\n                          attachment_type=allure.attachment_type.JSON)\n    \n            # 修复：移除error_msg参数，通过assert上下文提示失败原因\n>           self.assert_json_value(response, \"$.success\", expect_success)\nE           TypeError: assert_json_value() missing 1 required positional argument: 'error_msg_prefix'\n\ntest_cloudTrader\\test_create2.py:244: TypeError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <template_model.test_cloudTrader.test_create2.Test_follow_batch object at 0x000002206B479F70>\nacc_info = {'account': '301392107', 'password': 'joj6vwd'}\nvar_manager = <template_model.commons.variable_manager.VariableManager object at 0x000002206B4797F0>\nlogged_session = <template_model.commons.session.EnvironmentSession object at 0x000002206B54C1C0>\n\n    @allure.title(\"批量绑定跟随者账号\")\n    @pytest.mark.parametrize(\"acc_info\", FOLLOW_ACCOUNT_LIST)\n    @pytest.mark.dependency(depends=[\n        \"test_extract_global_broker_id\",\n        \"test_extract_global_user_server_id\",\n        \"test_extract_global_jeecg_row_key\"\n    ])\n    def test_batch_follow_account(self, acc_info, var_manager, logged_session):\n        current_acc = acc_info[\"account\"]  # 当前账号（唯一标识）\n        current_pwd = acc_info[\"password\"]\n    \n        # 动态标题+账号信息附加（Allure报告区分账号）\n        allure.dynamic.title(f\"绑定跟随者账号-{current_acc}\")\n        allure.attach(f\"账号：{current_acc}\\n密码：{current_pwd}\",\n                      name=f\"账号{current_acc}基础信息\",\n                      attachment_type=allure.attachment_type.TEXT)\n    \n        try:\n            # 步骤1：首次绑定账号（期望成功）\n            self._bind_account(logged_session, var_manager, current_acc, current_pwd, expect_success=True)\n    \n            # 步骤2：重复绑定校验（期望失败，提示已绑定）\n            self._bind_account(logged_session, var_manager, current_acc, current_pwd, expect_success=False)\n    \n            # 步骤3：提取当前账号的MT4审核ID（保存为账号专属变量）\n            follow_pass_id = self._extract_mt4_audit_id(logged_session, var_manager, current_acc)\n            follow_pass_id_key = FOLLOW_PASS_ID_TPL.format(acc=current_acc)  # 生成账号专属变量名\n            var_manager.set_runtime_variable(follow_pass_id_key, follow_pass_id)\n            allure.attach(str(follow_pass_id), name=f\"账号{current_acc}MT4审核ID\",\n                          attachment_type=allure.attachment_type.TEXT)\n            logging.info(f\"[账号{current_acc}专属变量] 保存 {follow_pass_id_key} = {follow_pass_id}\")\n    \n            # 步骤4：MT4审核通过（读取当前账号专属审核ID）\n            self._pass_mt4_audit(logged_session, var_manager, current_acc)\n    \n            # 步骤5：清理当前账号的历史订阅记录\n            self._clean_subscribe_record(logged_session, current_acc)\n    \n            # 步骤6：订阅跟单（保存账号专属订阅ID）\n            subscribe_id = self._subscribe_follow(logged_session, var_manager, current_acc)\n            follow_subscribe_id_key = FOLLOW_SUBSCRIBE_ID_TPL.format(acc=current_acc)\n            var_manager.set_runtime_variable(follow_subscribe_id_key, subscribe_id)\n            allure.attach(str(subscribe_id), name=f\"账号{current_acc}订阅ID\",\n                          attachment_type=allure.attachment_type.TEXT)\n            logging.info(f\"[账号{current_acc}专属变量] 保存 {follow_subscribe_id_key} = {subscribe_id}\")\n    \n            # 步骤7：校验订阅记录（期望存在）\n            self._verify_subscribe_record(logged_session, var_manager, current_acc, expect_exist=True)\n    \n            logging.info(f\"✅ 账号{current_acc}绑定流程全部完成\")\n    \n        except Exception as e:\n            error_msg = f\"❌ 账号{current_acc}绑定失败：{str(e)[:200]}\"\n            allure.attach(error_msg, name=f\"账号{current_acc}执行失败详情\", attachment_type=allure.attachment_type.TEXT)\n            logging.error(error_msg, exc_info=True)\n>           pytest.fail(error_msg)\nE           Failed: ❌ 账号301392107绑定失败：assert_json_value() missing 1 required positional argument: 'error_msg_prefix'\n\ntest_cloudTrader\\test_create2.py:142: Failed"}, "steps": [{"name": "首次绑定账号-301392107", "status": "broken", "statusDetails": {"message": "TypeError: assert_json_value() missing 1 required positional argument: 'error_msg_prefix'\n", "trace": "  File \"D:\\pycharm_test\\template_model\\test_cloudTrader\\test_create2.py\", line 244, in _bind_account\n    self.assert_json_value(response, \"$.success\", expect_success)\n"}, "steps": [{"name": "执行 POST 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "083141a9-3141-4d21-9ecd-056c2b0fb282-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "518b3eef-42e2-41ac-9747-473bf3ca154b-attachment.json", "type": "application/json"}, {"name": "请求体（JSON）", "source": "706a53a5-34e3-466a-a996-69f93963fdb5-attachment.json", "type": "application/json"}], "start": 1758786273846, "stop": 1758786273846}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "3d723927-a0cd-4d32-bd8e-08329316551d-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "352b867e-7aa8-4e27-be57-38b2a8f7b5c6-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "6c91d3c9-a90c-48bf-8d28-5184fdc81549-attachment.json", "type": "application/json"}], "start": 1758786278510, "stop": 1758786278511}], "start": 1758786273845, "stop": 1758786281522}], "attachments": [{"name": "账号301392107首次绑定请求数据", "source": "d8e11507-776e-4138-940e-d4df845dc9fb-attachment.json", "type": "application/json"}], "start": 1758786273845, "stop": 1758786281522}], "attachments": [{"name": "账号301392107基础信息", "source": "c77636ee-f68c-40a6-9987-adb455db819e-attachment.txt", "type": "text/plain"}, {"name": "账号301392107执行失败详情", "source": "40c5e4e8-a3ab-4aa6-a736-ce33ee6f30f8-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "5e5bc544-ac47-463e-aaa2-0f4d2a8024fc-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "acc_info", "value": "{'account': '301392107', 'password': 'joj6vwd'}"}], "start": 1758786273845, "stop": 1758786281523, "uuid": "3eb37644-d3ea-48c0-9350-70dcad2b81e4", "historyId": "ae514f4d7912b3834a86edcb91da660b", "testCaseId": "9fbf177e2c0cc785fb2d09636ec61f14", "fullName": "test_cloudTrader.test_create2.Test_follow_batch#test_batch_follow_account", "labels": [{"name": "story", "value": "绑定跟随者账号（多账号批量版）"}, {"name": "tag", "value": "dependency(depends=['test_extract_global_broker_id', 'test_extract_global_user_server_id', 'test_extract_global_jeecg_row_key'])"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_create2"}, {"name": "subSuite", "value": "Test_follow_batch"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "28576-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_create2"}]}