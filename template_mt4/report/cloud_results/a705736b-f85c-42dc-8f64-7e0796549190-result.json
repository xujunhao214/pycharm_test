{"name": "跟单管理-VPS管理-喊单者账号-开仓后", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'", "trace": "self = <template_mt4.test_cloudTrader.test_oac_proportion.Test_openandclouseall.Test_orderseng4 object at 0x0000025C42B614F0>\nvar_manager = <template_mt4.commons.variable_manager.VariableManager object at 0x0000025C42B47400>\nlogged_session = <template_mt4.commons.session.EnvironmentSession object at 0x0000025C42ABD940>\n\n    @pytest.mark.retry(n=3, delay=20)\n    @allure.title(\"跟单管理-VPS管理-喊单者账号-开仓后\")\n    def test_query_opentrader_getRecordList(self, var_manager, logged_session):\n        with allure.step(\"1. 发送请求\"):\n            trader_account = var_manager.get_variable(\"trader_account\")\n            vpsrunIpAddr = var_manager.get_variable(\"vpsrunIpAddr\")\n            params = {\n                \"_t\": current_timestamp_seconds,\n                \"pageNo\": \"1\",\n                \"pageSize\": \"50\",\n                \"accountLike\": trader_account,\n                \"serverNameLike\": \"\",\n                \"connectTraderLike\": \"\",\n                \"connected\": \"\",\n                \"runIpAddr\": vpsrunIpAddr\n            }\n            response = self.send_get_request(\n                logged_session,\n                '/blockchain/account/getRecordList',\n                params=params\n            )\n    \n        with allure.step(\"2. 返回校验\"):\n            self.assert_json_value(\n                response,\n                \"$.searchCount\",\n                True,\n                \"响应searchCount字段应为true\"\n            )\n    \n        with allure.step(f\"3. 数据校验\"):\n            with allure.step(\"喊单者手数校验-MT4开仓手数和持仓订单手数\"):\n                totalLots = self.json_utils.extract(response.json(), \"$.records[0].totalLots\")\n                logging.info(f\"手数是: {totalLots}\")\n    \n                lots_open = var_manager.get_variable(\"lots_open\")\n    \n                self.verify_data(\n>                   actual_value=float(totalLots),\n                    expected_value=float(lots_open),\n                    op=CompareOp.EQ,\n                    message=f\"手数符合预期\",\n                    attachment_name=\"手数详情\"\n                )\nE               TypeError: float() argument must be a string or a number, not 'NoneType'\n\ntest_cloudTrader\\test_oac_proportion.py:3930: TypeError"}, "description": "\n    ### 测试说明\n    - 前置条件：有喊单账号、跟单账号，跟单已经和喊单有订阅关系\n      1. MT4进行登录，然后进行开仓，总手数0.01\n      2. 账号管理-持仓订单-喊单和跟单数据校验\n      3. 跟单管理-开仓日志-喊单和跟单数据校验\n      4. 跟单管理-VPS管理-喊单和跟单数据校验\n      5. MT4进行平仓\n      6.账号管理-持仓订单-喊单和跟单数据校验\n      7.跟单管理-开仓日志-喊单和跟单数据校验\n      8.跟单管理-VPS管理-喊单和跟单数据校验\n    - 预期结果：喊单和跟单数据校验正确\n    ", "steps": [{"name": "1. 发送请求", "status": "passed", "steps": [{"name": "执行 GET 请求", "status": "passed", "steps": [{"name": "请求详情", "status": "passed", "attachments": [{"name": "请求URL", "source": "668f7db0-2e60-424b-bc36-e24a3dbd77da-attachment.txt", "type": "text/plain"}, {"name": "请求头", "source": "979bab17-062e-45b5-9213-eecaab949ff8-attachment.json", "type": "application/json"}, {"name": "请求体（表单/文件）", "source": "7ec8442c-58e1-4528-836b-0104fae52cd4-attachment.txt", "type": "text/plain"}], "start": 1758504644674, "stop": 1758504644677}, {"name": "响应详情", "status": "passed", "attachments": [{"name": "响应状态码", "source": "21c81d5a-d998-4198-a06a-cc99e89a39a4-attachment.txt", "type": "text/plain"}, {"name": "响应头", "source": "66e4806d-5109-457c-8752-bb4088623ad5-attachment.json", "type": "application/json"}, {"name": "响应体（JSON）", "source": "18212a42-b6fe-4b93-aa5d-6f3214e3b3ca-attachment.json", "type": "application/json"}], "start": 1758504645237, "stop": 1758504645239}], "start": 1758504644674, "stop": 1758504648251}], "start": 1758504644674, "stop": 1758504648251}, {"name": "2. 返回校验", "status": "passed", "steps": [{"name": "断言JSON路径: $.searchCount", "status": "passed", "attachments": [{"name": "请求URL", "source": "6d5be6cf-41f5-4f59-930c-c838de60a1d2-attachment.txt", "type": "text/plain"}, {"name": "预期值", "source": "0240cc0a-9619-4ae2-b8cb-dfef70e463da-attachment.txt", "type": "text/plain"}, {"name": "实际值", "source": "34df2436-e4ff-4d09-8685-ab463f947ccc-attachment.txt", "type": "text/plain"}], "start": 1758504648261, "stop": 1758504648263}], "start": 1758504648251, "stop": 1758504648263}, {"name": "3. 数据校验", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'\n", "trace": "  File \"D:\\pycharm_test\\template_mt4\\test_cloudTrader\\test_oac_proportion.py\", line 3930, in test_query_opentrader_getRecordList\n    actual_value=float(totalLots),\n"}, "steps": [{"name": "喊单者手数校验-MT4开仓手数和持仓订单手数", "status": "broken", "statusDetails": {"message": "TypeError: float() argument must be a string or a number, not 'NoneType'\n", "trace": "  File \"D:\\pycharm_test\\template_mt4\\test_cloudTrader\\test_oac_proportion.py\", line 3930, in test_query_opentrader_getRecordList\n    actual_value=float(totalLots),\n"}, "start": 1758504648263, "stop": 1758504648271}], "start": 1758504648263, "stop": 1758504648272}], "attachments": [{"name": "log", "source": "f0fd3799-2305-4cfd-983b-03fe3739ead0-attachment.txt", "type": "text/plain"}], "start": 1758504644674, "stop": 1758504648272, "uuid": "78d50709-78c7-4c5d-b9df-d3f7c0780c7c", "historyId": "2c4a740c29cbb42137efaab750ff2fc4", "testCaseId": "2c4a740c29cbb42137efaab750ff2fc4", "fullName": "test_cloudTrader.test_oac_proportion.Test_orderseng4#test_query_opentrader_getRecordList", "labels": [{"name": "story", "value": "场景4：跟随方式-按比例-固定比例100%-跟单方向反向"}, {"name": "feature", "value": "跟随方式-按比例"}, {"name": "tag", "value": "retry(n=3, delay=20)"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_oac_proportion"}, {"name": "subSuite", "value": "Test_openandclouseall"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "4044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_oac_proportion"}]}