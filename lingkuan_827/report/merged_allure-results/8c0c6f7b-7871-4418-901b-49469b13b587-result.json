{"name": "数据库校验-云跟单账号策略平仓-修改币种@", "status": "broken", "statusDetails": {"message": "pymysql.err.InterfaceError: (0, '')", "trace": "db = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\n\n    @pytest.fixture\n    def db_transaction(db):\n        \"\"\"数据库事务管理，自动提交以获取最新数据\"\"\"\n        try:\n>           db.begin()\n\nconftest.py:196: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:472: in begin\n    self._execute_command(COMMAND.COM_QUERY, \"BEGIN\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\ncommand = 3, sql = 'BEGIN'\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError\n\nDuring handling of the above exception, another exception occurred:\n\ndb = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\n\n    @pytest.fixture\n    def db_transaction(db):\n        \"\"\"数据库事务管理，自动提交以获取最新数据\"\"\"\n        try:\n            db.begin()\n            yield db\n        except Exception as e:\n>           db.rollback()\n\nconftest.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:492: in rollback\n    self._execute_command(COMMAND.COM_QUERY, \"ROLLBACK\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\ncommand = 3, sql = 'ROLLBACK'\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError\n\nDuring handling of the above exception, another exception occurred:\n\ndb = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\n\n    @pytest.fixture\n    def db_transaction(db):\n        \"\"\"数据库事务管理，自动提交以获取最新数据\"\"\"\n        try:\n            db.begin()\n            yield db\n        except Exception as e:\n            db.rollback()\n            raise\n        finally:\n            # 关键：每次查询后提交事务，刷新数据可见性\n>           db.commit()  # 替代 rollback()，确保看到其他会话的新数据\n\nconftest.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:482: in commit\n    self._execute_command(COMMAND.COM_QUERY, \"COMMIT\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pymysql.connections.Connection object at 0x000001FC6D364BB0>\ncommand = 3, sql = 'COMMIT'\n\n    def _execute_command(self, command, sql):\n        \"\"\"\n        :raise InterfaceError: If the connection is closed.\n        :raise ValueError: If no username was specified.\n        \"\"\"\n        if not self._sock:\n>           raise err.InterfaceError(0, \"\")\nE           pymysql.err.InterfaceError: (0, '')\n\n..\\venv\\lib\\site-packages\\pymysql\\connections.py:843: InterfaceError"}, "description": "\n### 用例说明\n- 前置条件：有云策略和云跟单\n- 操作步骤：\n  1. 有三个账号，分别修改三个账号的后缀.@ .p .min\n  2. 进行开仓\n  3. 判断三个账号的币种手数是否正确\n  4. 进行平仓\n  5. 判断三个账号的币种手数是否正确\n- 预期结果：三个账号的币种手数正确\n", "start": 1755564961374, "stop": 1755564961374, "uuid": "4b85b19c-12d5-4fbc-a106-27b23c40c71a", "historyId": "16742dad015c89ae59e6ede113e26726", "testCaseId": "16742dad015c89ae59e6ede113e26726", "fullName": "test_cloudTrader.test_cloudtrader_money.Testcloudtrader_money#test_dbclose_cfda", "labels": [{"name": "feature", "value": "云策略-云策略列表-云跟单账号修改币种"}, {"name": "parentSuite", "value": "test_cloudTrader"}, {"name": "suite", "value": "test_cloudtrader_money"}, {"name": "subSuite", "value": "Testcloudtrader_money"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "20452-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cloudTrader.test_cloudtrader_money"}]}