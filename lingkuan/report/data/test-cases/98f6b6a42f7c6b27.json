{
  "uid" : "98f6b6a42f7c6b27",
  "name" : "平台列表-获取列表数据-校验编辑功能是否正确",
  "fullName" : "testcase.test_platform#test_platfor_list2",
  "historyId" : "4692c95dc28f0ea8c0234ce80b5cbe78",
  "time" : {
    "start" : 1749810297147,
    "stop" : 1749810297303,
    "duration" : 156
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '测试' == '测试编辑'\n  - 测试编辑\n  + 测试",
  "statusTrace" : "session = <lingkuan.commons.session.JunhaoSession object at 0x0000021B3AE95940>\nlogged_session = <lingkuan.commons.session.JunhaoSession object at 0x0000021B3AE95940>\n\n    @allure.title(\"平台列表-获取列表数据-校验编辑功能是否正确\")\n    @pytest.mark.dependency(depends=[\"create_platform\"])\n    def test_platfor_list2(session, logged_session):\n        global list_id\n        parms = {\n            \"page\": 1,\n            \"limit\": 50,\n            \"asc\": \"false\",\n            \"order\": \"update_time\",\n        }\n        with allure.step(\"1. 获取订单列表数据\"):\n            session.get(\"/mascontrol/platform/page\", params=parms)\n        with allure.step(\"2. 校验编辑功能是否正确\"):\n            brokerName = session.extract_jsonpath(\"$.data.list[0].brokerName\")\n>           assert brokerName == \"测试编辑\"\nE           AssertionError: assert '测试' == '测试编辑'\nE             - 测试编辑\nE             + 测试\n\ntestcase\\test_platform.py:125: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "session",
    "time" : {
      "start" : 1749810295285,
      "stop" : 1749810295285,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1749810295285,
      "stop" : 1749810295462,
      "duration" : 177
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "1. 执行登录操作",
      "time" : {
        "start" : 1749810295285,
        "stop" : 1749810295462,
        "duration" : 177
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 1,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '测试' == '测试编辑'\n  - 测试编辑\n  + 测试",
    "statusTrace" : "session = <lingkuan.commons.session.JunhaoSession object at 0x0000021B3AE95940>\nlogged_session = <lingkuan.commons.session.JunhaoSession object at 0x0000021B3AE95940>\n\n    @allure.title(\"平台列表-获取列表数据-校验编辑功能是否正确\")\n    @pytest.mark.dependency(depends=[\"create_platform\"])\n    def test_platfor_list2(session, logged_session):\n        global list_id\n        parms = {\n            \"page\": 1,\n            \"limit\": 50,\n            \"asc\": \"false\",\n            \"order\": \"update_time\",\n        }\n        with allure.step(\"1. 获取订单列表数据\"):\n            session.get(\"/mascontrol/platform/page\", params=parms)\n        with allure.step(\"2. 校验编辑功能是否正确\"):\n            brokerName = session.extract_jsonpath(\"$.data.list[0].brokerName\")\n>           assert brokerName == \"测试编辑\"\nE           AssertionError: assert '测试' == '测试编辑'\nE             - 测试编辑\nE             + 测试\n\ntestcase\\test_platform.py:125: AssertionError",
    "steps" : [ {
      "name" : "1. 获取订单列表数据",
      "time" : {
        "start" : 1749810297148,
        "stop" : 1749810297298,
        "duration" : 150
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "2. 校验编辑功能是否正确",
      "time" : {
        "start" : 1749810297298,
        "stop" : 1749810297302,
        "duration" : 4
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert '测试' == '测试编辑'\n  - 测试编辑\n  + 测试\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan\\testcase\\test_platform.py\", line 125, in test_platfor_list2\n    assert brokerName == \"测试编辑\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "78e80af3700c7b11",
      "name" : "log",
      "source" : "78e80af3700c7b11.txt",
      "type" : "text/plain",
      "size" : 6593
    } ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "session::0",
    "time" : {
      "start" : 1749810297306,
      "stop" : 1749810297306,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1749810297305,
      "stop" : 1749810297305,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "dependency(depends=['create_platform'])"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_platform"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "29376-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_platform"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "dependency(depends=['create_platform'])" ]
  },
  "source" : "98f6b6a42f7c6b27.json",
  "parameterValues" : [ ]
}