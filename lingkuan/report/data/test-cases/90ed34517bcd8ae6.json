{
  "uid" : "90ed34517bcd8ae6",
  "name" : "新增vps",
  "fullName" : "testcase.test_vps#test_create_vps",
  "historyId" : "1e4cb45441265a7867bcfacb2292fec5",
  "time" : {
    "start" : 1749796350124,
    "stop" : 1749796350330,
    "duration" : 206
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 断言：预期：success 实际：重复名称或ip地址,请重新输入\nassert 'success' == '重复名称或ip地址,请重新输入'\n  - 重复名称或ip地址,请重新输入\n  + success",
  "statusTrace" : "session = <lingkuan.commons.session.JunhaoSession object at 0x000001DE18CC7D60>\n\n    @pytest.mark.dependency(name=\"create_vps\")\n    @allure.title(\"新增vps\")\n    def test_create_vps(session):\n        with allure.step(\"1. 新增vps\"):\n            data = {\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"测试\",\n                \"expiryDate\": \"2025-06-30 00:00:00\",\n                \"remark\": \"测试\",\n                \"isOpen\": 1,\n                \"isActive\": 1,\n                \"userList\": [\"sun\", \"admin\"],\n                \"isSelectAccount\": 1,\n                \"isMonitorRepair\": 1,\n                \"isSpecializedRepair\": 1,\n                \"isAutoRepair\": 1,\n                \"groupId\": \"62,44\",\n                \"sort\": 100\n            }\n            session.post('/mascontrol/vps', json=data)\n        with allure.step(\"2. 判断是否添加成功\"):\n            msg = session.extract_jsonpath(\"$.msg\")\n            logging.info(f\"断言：预期：success 实际：{msg}\")\n>           assert \"success\" == msg, f\"断言：预期：success 实际：{msg}\"\nE           AssertionError: 断言：预期：success 实际：重复名称或ip地址,请重新输入\nE           assert 'success' == '重复名称或ip地址,请重新输入'\nE             - 重复名称或ip地址,请重新输入\nE             + success\n\ntestcase\\test_vps.py:78: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "session",
    "time" : {
      "start" : 1749796349501,
      "stop" : 1749796349502,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 断言：预期：success 实际：重复名称或ip地址,请重新输入\nassert 'success' == '重复名称或ip地址,请重新输入'\n  - 重复名称或ip地址,请重新输入\n  + success",
    "statusTrace" : "session = <lingkuan.commons.session.JunhaoSession object at 0x000001DE18CC7D60>\n\n    @pytest.mark.dependency(name=\"create_vps\")\n    @allure.title(\"新增vps\")\n    def test_create_vps(session):\n        with allure.step(\"1. 新增vps\"):\n            data = {\n                \"ipAddress\": \"127.0.0.1\",\n                \"name\": \"测试\",\n                \"expiryDate\": \"2025-06-30 00:00:00\",\n                \"remark\": \"测试\",\n                \"isOpen\": 1,\n                \"isActive\": 1,\n                \"userList\": [\"sun\", \"admin\"],\n                \"isSelectAccount\": 1,\n                \"isMonitorRepair\": 1,\n                \"isSpecializedRepair\": 1,\n                \"isAutoRepair\": 1,\n                \"groupId\": \"62,44\",\n                \"sort\": 100\n            }\n            session.post('/mascontrol/vps', json=data)\n        with allure.step(\"2. 判断是否添加成功\"):\n            msg = session.extract_jsonpath(\"$.msg\")\n            logging.info(f\"断言：预期：success 实际：{msg}\")\n>           assert \"success\" == msg, f\"断言：预期：success 实际：{msg}\"\nE           AssertionError: 断言：预期：success 实际：重复名称或ip地址,请重新输入\nE           assert 'success' == '重复名称或ip地址,请重新输入'\nE             - 重复名称或ip地址,请重新输入\nE             + success\n\ntestcase\\test_vps.py:78: AssertionError",
    "steps" : [ {
      "name" : "1. 新增vps",
      "time" : {
        "start" : 1749796350124,
        "stop" : 1749796350325,
        "duration" : 201
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 判断是否添加成功",
      "time" : {
        "start" : 1749796350325,
        "stop" : 1749796350330,
        "duration" : 5
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 断言：预期：success 实际：重复名称或ip地址,请重新输入\nassert 'success' == '重复名称或ip地址,请重新输入'\n  - 重复名称或ip地址,请重新输入\n  + success\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan\\testcase\\test_vps.py\", line 78, in test_create_vps\n    assert \"success\" == msg, f\"断言：预期：success 实际：{msg}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "e2a63ddbf44e4cb5",
      "name" : "log",
      "source" : "e2a63ddbf44e4cb5.txt",
      "type" : "text/plain",
      "size" : 1876
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "session::0",
    "time" : {
      "start" : 1749796350428,
      "stop" : 1749796350428,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "dependency(name='create_vps')"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_vps"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "23036-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_vps"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "dependency(name='create_vps')" ]
  },
  "source" : "90ed34517bcd8ae6.json",
  "parameterValues" : [ ]
}