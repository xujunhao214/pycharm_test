{
  "uid" : "ea86e5ae45560263",
  "name" : "vps列表-获取vps列表-校验编辑",
  "fullName" : "testcase.test_vps#test_vps_page2",
  "historyId" : "aaa94cae3f7104ce93a132db520f5b5f",
  "time" : {
    "start" : 1749815749872,
    "stop" : 1749815749954,
    "duration" : 82
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert None == '测试编辑name'",
  "statusTrace" : "session = <lingkuan.commons.session.JunhaoSession object at 0x000001CB50D33640>\nlogged_session = <lingkuan.commons.session.JunhaoSession object at 0x000001CB50D33640>\n\n    @pytest.mark.dependency(depends=[\"create_vps\"])\n    @allure.title(\"vps列表-获取vps列表-校验编辑\")\n    def test_vps_page2(session, logged_session):\n        global vps_list_id\n        parser = {\n            \"page\": 1,\n            \"limit\": 50,\n            \"asc\": \"false\",\n            \"order\": \"sort\",\n        }\n        with allure.step(\"1. 获取vps列表-校验编辑\"):\n            session.get('/mascontrol/vps/page', params=parser)\n        with allure.step(\"2. 检查编辑后的信息是否正确\"):\n            name = session.extract_jsonpath(\"$.data.list[0].name\")\n            remark = session.extract_jsonpath(\"$.data.list[0].remark\")\n            sort = session.extract_jsonpath(\"$.data.list[0].sort\")\n>           assert name == \"测试编辑name\"\nE           AssertionError: assert None == '测试编辑name'\n\ntestcase\\test_vps.py:165: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "session",
    "time" : {
      "start" : 1749815749035,
      "stop" : 1749815749035,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1749815749035,
      "stop" : 1749815749164,
      "duration" : 129
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "1. 执行登录操作",
      "time" : {
        "start" : 1749815749035,
        "stop" : 1749815749164,
        "duration" : 129
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert None == '测试编辑name'",
    "statusTrace" : "session = <lingkuan.commons.session.JunhaoSession object at 0x000001CB50D33640>\nlogged_session = <lingkuan.commons.session.JunhaoSession object at 0x000001CB50D33640>\n\n    @pytest.mark.dependency(depends=[\"create_vps\"])\n    @allure.title(\"vps列表-获取vps列表-校验编辑\")\n    def test_vps_page2(session, logged_session):\n        global vps_list_id\n        parser = {\n            \"page\": 1,\n            \"limit\": 50,\n            \"asc\": \"false\",\n            \"order\": \"sort\",\n        }\n        with allure.step(\"1. 获取vps列表-校验编辑\"):\n            session.get('/mascontrol/vps/page', params=parser)\n        with allure.step(\"2. 检查编辑后的信息是否正确\"):\n            name = session.extract_jsonpath(\"$.data.list[0].name\")\n            remark = session.extract_jsonpath(\"$.data.list[0].remark\")\n            sort = session.extract_jsonpath(\"$.data.list[0].sort\")\n>           assert name == \"测试编辑name\"\nE           AssertionError: assert None == '测试编辑name'\n\ntestcase\\test_vps.py:165: AssertionError",
    "steps" : [ {
      "name" : "1. 获取vps列表-校验编辑",
      "time" : {
        "start" : 1749815749872,
        "stop" : 1749815749941,
        "duration" : 69
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 检查编辑后的信息是否正确",
      "time" : {
        "start" : 1749815749941,
        "stop" : 1749815749953,
        "duration" : 12
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert None == '测试编辑name'\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan\\testcase\\test_vps.py\", line 165, in test_vps_page2\n    assert name == \"测试编辑name\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "6bd785d241e001bc",
      "name" : "log",
      "source" : "6bd785d241e001bc.txt",
      "type" : "text/plain",
      "size" : 1494
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "session::0",
    "time" : {
      "start" : 1749815750046,
      "stop" : 1749815750046,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1749815750045,
      "stop" : 1749815750045,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "dependency(depends=['create_vps'])"
  }, {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_vps"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "21148-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_vps"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "dependency(depends=['create_vps'])" ]
  },
  "source" : "ea86e5ae45560263.json",
  "parameterValues" : [ ]
}