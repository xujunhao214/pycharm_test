{"name": "根据数据库判断，然后提取数据", "status": "failed", "statusDetails": {"message": "AssertionError: 查询失败：未找到符合条件的下单详情\nassert None is not None", "trace": "db = <pymysql.connections.Connection object at 0x00000218125B67F0>\n\n    @allure.title(\"根据数据库判断，然后提取数据\")\n    def test_orderSenddb(db):\n        with allure.step(\"1. 从follow_order_instruct数据库检查是否有新的下单指令\"):\n            # 查询数据库获取数据\n            with db.cursor() as cursor:\n                sql = 'select * FROM follow_order_detail where symbol LIKE \"XAUUSD%\" and type=\"0\" and trader_id=\"5363\" and create_time BETWEEN NOW() - INTERVAL 15 MINUTE AND NOW() + INTERVAL 15 MINUTE'\n                time.sleep(30)\n                # 执行查询\n                cursor.execute(sql)\n                # 获取查询结果\n                result = cursor.fetchone()\n                try:\n                    # 根据查询结果判断（添加明确的断言）\n>                   assert result is not None, \"查询失败：未找到符合条件的下单详情\"\nE                   AssertionError: 查询失败：未找到符合条件的下单详情\nE                   assert None is not None\n\ntestvps\\test_vps.py:167: AssertionError"}, "steps": [{"name": "1. 从follow_order_instruct数据库检查是否有新的下单指令", "status": "failed", "statusDetails": {"message": "AssertionError: 查询失败：未找到符合条件的下单详情\nassert None is not None\n", "trace": "  File \"D:\\pycharm_test\\lingkuan\\testvps\\test_vps.py\", line 167, in test_orderSenddb\n    assert result is not None, \"查询失败：未找到符合条件的下单详情\"\n"}, "start": 1750382529204, "stop": 1750382559269}], "attachments": [{"name": "log", "source": "21d7fdb7-f454-4b98-9560-9e34bb1e0b57-attachment.txt", "type": "text/plain"}], "start": 1750382529204, "stop": 1750382559269, "uuid": "87fee642-ea69-4e05-ab75-e65d264223e8", "historyId": "9118cc27aabe869ae11388f034c519cc", "testCaseId": "9118cc27aabe869ae11388f034c519cc", "fullName": "testvps.test_vps#test_orderSenddb", "labels": [{"name": "parentSuite", "value": "testvps"}, {"name": "suite", "value": "test_vps"}, {"name": "host", "value": "DESKTOP-4S9CU1E"}, {"name": "thread", "value": "22924-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testvps.test_vps"}]}