{
  "uid" : "d83e8c617391e931",
  "name" : "VPS管理-VPS列表列表-紧急停止VPS",
  "fullName" : "test_vps.test_lianxi.TestDeleteFollowSlave#test_delete_Vps",
  "historyId" : "732578404a61da58c9fc43f88f7f733e",
  "time" : {
    "start" : 1753435246418,
    "stop" : 1753435249481,
    "duration" : 3063
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/closeServer/shutdown\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success",
  "statusTrace" : "self = <lingkuan_725.test_vps.test_lianxi.TestDeleteFollowSlave object at 0x00000236785F7C10>\napi_session = <lingkuan_725.commons.session.EnvironmentSession object at 0x00000236785F73D0>\nvar_manager = <lingkuan_725.commons.variable_manager.VariableManager object at 0x00000236785F7B20>\nlogged_session = <lingkuan_725.commons.session.EnvironmentSession object at 0x00000236785F73D0>\n\n    @allure.title(\"VPS管理-VPS列表列表-紧急停止VPS\")\n    def test_delete_Vps(self, api_session, var_manager, logged_session):\n        vps_list_id = var_manager.get_variable(\"vps_list_id\")\n        # 定义白名单（不可删除数据的ID列表）\n        WHITE_LIST_IDS = WHITE_LIST\n        if vps_list_id in WHITE_LIST_IDS:\n            logging.warning(f\"VPS ID {vps_list_id} 在白名单中，跳过删除数据操作。\")\n            assert False, f\"VPS ID {vps_list_id} 在白名单中，不能删除数据。\"\n        params = {\n            \"vpsIdList\": vps_list_id\n        }\n        # 1. 发送删除VPS数据请求\n        response = self.send_delete_request(\n            api_session,\n            '/closeServer/shutdown',\n            json_data=params\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"紧急停止VPS数据失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_lianxi.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_725.test_vps.test_lianxi.TestDeleteFollowSlave object at 0x00000236785F7C10>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/closeServer/shutdown\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:245: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1753435246275,
      "stop" : 1753435246276,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1753435246276,
      "stop" : 1753435246276,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1753435246275,
      "stop" : 1753435246275,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1753435246276,
      "stop" : 1753435246417,
      "duration" : 141
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9000/closeServer/shutdown\nJSON路径: $.msg\n实际值: 服务器异常，请稍后再试\n期望值: success",
    "statusTrace" : "self = <lingkuan_725.test_vps.test_lianxi.TestDeleteFollowSlave object at 0x00000236785F7C10>\napi_session = <lingkuan_725.commons.session.EnvironmentSession object at 0x00000236785F73D0>\nvar_manager = <lingkuan_725.commons.variable_manager.VariableManager object at 0x00000236785F7B20>\nlogged_session = <lingkuan_725.commons.session.EnvironmentSession object at 0x00000236785F73D0>\n\n    @allure.title(\"VPS管理-VPS列表列表-紧急停止VPS\")\n    def test_delete_Vps(self, api_session, var_manager, logged_session):\n        vps_list_id = var_manager.get_variable(\"vps_list_id\")\n        # 定义白名单（不可删除数据的ID列表）\n        WHITE_LIST_IDS = WHITE_LIST\n        if vps_list_id in WHITE_LIST_IDS:\n            logging.warning(f\"VPS ID {vps_list_id} 在白名单中，跳过删除数据操作。\")\n            assert False, f\"VPS ID {vps_list_id} 在白名单中，不能删除数据。\"\n        params = {\n            \"vpsIdList\": vps_list_id\n        }\n        # 1. 发送删除VPS数据请求\n        response = self.send_delete_request(\n            api_session,\n            '/closeServer/shutdown',\n            json_data=params\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"紧急停止VPS数据失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_lianxi.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_725.test_vps.test_lianxi.TestDeleteFollowSlave object at 0x00000236785F7C10>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9000/closeServer/shutdown\nE           JSON路径: $.msg\nE           实际值: 服务器异常，请稍后再试\nE           期望值: success\n\ncommons\\api_base.py:245: AssertionError",
    "steps" : [ {
      "name" : "发送DELETE请求到 /closeServer/shutdown",
      "time" : {
        "start" : 1753435246418,
        "stop" : 1753435249475,
        "duration" : 3057
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ae15662394b5e3cc",
        "name" : "请求参数",
        "source" : "ae15662394b5e3cc.json",
        "type" : "application/json",
        "size" : 18
      }, {
        "uid" : "c458fa2d27d5ee85",
        "name" : "响应结果",
        "source" : "c458fa2d27d5ee85.txt",
        "type" : "text/plain",
        "size" : 89
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "3a278d83f361da11",
      "name" : "log",
      "source" : "3a278d83f361da11.txt",
      "type" : "text/plain",
      "size" : 5172
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1753435249590,
      "stop" : 1753435249591,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1753435249590,
      "stop" : 1753435249590,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1753435249589,
      "stop" : 1753435249589,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "跟单软件看板"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_lianxi"
  }, {
    "name" : "subSuite",
    "value" : "TestDeleteFollowSlave"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "37092-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_lianxi"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d83e8c617391e931.json",
  "parameterValues" : [ ]
}