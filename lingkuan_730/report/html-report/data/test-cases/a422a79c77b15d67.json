{
  "uid" : "a422a79c77b15d67",
  "name" : "跟单软件看板-VPS数据-新增策略账号",
  "fullName" : "test_vps.test_create.TestCreate#test_add_trader",
  "historyId" : "1fed20b0c1cc0ab03d6bdf90239e5107",
  "time" : {
    "start" : 1754027332959,
    "stop" : 1754027473128,
    "duration" : 140169
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9001/subcontrol/trader\nJSON路径: $.msg\n实际值: 账号无法连接\n期望值: success",
  "statusTrace" : "self = <lingkuan_730.test_vps.test_create.TestCreate object at 0x0000018914BD9A00>\nvar_manager = <lingkuan_730.commons.variable_manager.VariableManager object at 0x0000018914BFDFD0>\nlogged_session = <lingkuan_730.commons.session.EnvironmentSession object at 0x0000018914CC26D0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018914C452B0>\nencrypted_password = 'fa1af751c83d311f091c9393a364068c'\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-新增策略账号\")\n    def test_add_trader(self, var_manager, logged_session, db_transaction, encrypted_password):\n        # 1. 发送新增策略账号请求\n        new_user = var_manager.get_variable(\"new_user\")\n        data = {\n            \"account\": new_user[\"account\"],\n            \"password\": encrypted_password,\n            \"platform\": new_user[\"platform\"],\n            \"remark\": new_user[\"remark\"],\n            \"platformId\": new_user[\"platformId\"],\n            \"type\": 0,\n            \"templateId\": 1,\n            \"followStatus\": 1,\n            \"cfd\": \"\",\n            \"forex\": \"\",\n            \"followOrderRemark\": 1,\n            \"fixedComment\": new_user[\"fixedComment\"],\n            \"commentType\": new_user[\"commentType\"],\n            \"digits\": new_user[\"digits\"]\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/subcontrol/trader',\n            json_data=data\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"新增策略账号失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_create.py:476: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_730.test_vps.test_create.TestCreate object at 0x0000018914BD9A00>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9001/subcontrol/trader\nE           JSON路径: $.msg\nE           实际值: 账号无法连接\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1754027310884,
      "stop" : 1754027311122,
      "duration" : 238
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1754027308641,
      "stop" : 1754027308641,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session",
    "time" : {
      "start" : 1754027332769,
      "stop" : 1754027332769,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "encrypted_password",
    "time" : {
      "start" : 1754027332959,
      "stop" : 1754027332959,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1754027332912,
      "stop" : 1754027332958,
      "duration" : 46
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1754027310884,
      "stop" : 1754027310884,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session",
    "time" : {
      "start" : 1754027332769,
      "stop" : 1754027332912,
      "duration" : 143
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1754027308641,
      "stop" : 1754027308642,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 响应msg字段应为success\nURL: http://39.99.136.49:9001/subcontrol/trader\nJSON路径: $.msg\n实际值: 账号无法连接\n期望值: success",
    "statusTrace" : "self = <lingkuan_730.test_vps.test_create.TestCreate object at 0x0000018914BD9A00>\nvar_manager = <lingkuan_730.commons.variable_manager.VariableManager object at 0x0000018914BFDFD0>\nlogged_session = <lingkuan_730.commons.session.EnvironmentSession object at 0x0000018914CC26D0>\ndb_transaction = <pymysql.connections.Connection object at 0x0000018914C452B0>\nencrypted_password = 'fa1af751c83d311f091c9393a364068c'\n\n    @pytest.mark.url(\"vps\")\n    @allure.title(\"跟单软件看板-VPS数据-新增策略账号\")\n    def test_add_trader(self, var_manager, logged_session, db_transaction, encrypted_password):\n        # 1. 发送新增策略账号请求\n        new_user = var_manager.get_variable(\"new_user\")\n        data = {\n            \"account\": new_user[\"account\"],\n            \"password\": encrypted_password,\n            \"platform\": new_user[\"platform\"],\n            \"remark\": new_user[\"remark\"],\n            \"platformId\": new_user[\"platformId\"],\n            \"type\": 0,\n            \"templateId\": 1,\n            \"followStatus\": 1,\n            \"cfd\": \"\",\n            \"forex\": \"\",\n            \"followOrderRemark\": 1,\n            \"fixedComment\": new_user[\"fixedComment\"],\n            \"commentType\": new_user[\"commentType\"],\n            \"digits\": new_user[\"digits\"]\n        }\n        response = self.send_post_request(\n            logged_session,\n            '/subcontrol/trader',\n            json_data=data\n        )\n    \n        # 2. 验证响应状态码\n        self.assert_response_status(\n            response,\n            200,\n            \"新增策略账号失败\"\n        )\n    \n        # 3. 验证JSON返回内容\n>       self.assert_json_value(\n            response,\n            \"$.msg\",\n            \"success\",\n            \"响应msg字段应为success\"\n        )\n\ntest_vps\\test_create.py:476: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <lingkuan_730.test_vps.test_create.TestCreate object at 0x0000018914BD9A00>\nresponse = <Response [200]>, json_path = '$.msg', expected_value = 'success'\nerror_msg = '响应msg字段应为success'\n\n    def assert_json_value(self, response, json_path, expected_value, error_msg):\n        \"\"\"断言JSON路径对应的值（增强错误处理）\"\"\"\n        try:\n            actual_value = response.extract_jsonpath(json_path)\n>           assert actual_value == expected_value, (\n                f\"{error_msg}\\n\"\n                f\"URL: {response.url}\\n\"\n                f\"JSON路径: {json_path}\\n\"\n                f\"实际值: {actual_value}\\n\"\n                f\"期望值: {expected_value}\"\n            )\nE           AssertionError: 响应msg字段应为success\nE           URL: http://39.99.136.49:9001/subcontrol/trader\nE           JSON路径: $.msg\nE           实际值: 账号无法连接\nE           期望值: success\n\ncommons\\api_base.py:261: AssertionError",
    "steps" : [ {
      "name" : "发送POST请求到 /subcontrol/trader",
      "time" : {
        "start" : 1754027332959,
        "stop" : 1754027473124,
        "duration" : 140165
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a01776d8759b0fa1",
        "name" : "请求JSON数据",
        "source" : "a01776d8759b0fa1.json",
        "type" : "application/json",
        "size" : 301
      }, {
        "uid" : "b4dd1278b6088ce6",
        "name" : "请求URL",
        "source" : "b4dd1278b6088ce6.txt",
        "type" : "text/plain",
        "size" : 18
      }, {
        "uid" : "51f8cbbd17fc26ea",
        "name" : "响应结果",
        "source" : "51f8cbbd17fc26ea.txt",
        "type" : "text/plain",
        "size" : 74
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 3,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ {
      "uid" : "3ecfdfa8e51dd99d",
      "name" : "log",
      "source" : "3ecfdfa8e51dd99d.txt",
      "type" : "text/plain",
      "size" : 1963
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1754027683620,
      "stop" : 1754027683620,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "api_session::0",
    "time" : {
      "start" : 1754027473295,
      "stop" : 1754027473295,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1754027473245,
      "stop" : 1754027473294,
      "duration" : 49
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "logged_session::0",
    "time" : {
      "start" : 1754027473295,
      "stop" : 1754027473295,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1754027683621,
      "stop" : 1754027683621,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "账号管理-创建基本信息"
  }, {
    "name" : "tag",
    "value" : "url('vps')"
  }, {
    "name" : "parentSuite",
    "value" : "test_vps"
  }, {
    "name" : "suite",
    "value" : "test_create"
  }, {
    "name" : "subSuite",
    "value" : "TestCreate"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "2248-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_vps.test_create"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "url('vps')" ]
  },
  "source" : "a422a79c77b15d67.json",
  "parameterValues" : [ ]
}