{
  "uid" : "8eb783939bf45f3a",
  "name" : "头部统计",
  "fullName" : "tests.test_api#test_getstatdata",
  "historyId" : "131af02cd86bc00c70573cec7625bf92",
  "time" : {
    "start" : 1749547228958,
    "stop" : 1749547229136,
    "duration" : 178
  },
  "status" : "failed",
  "statusMessage" : "Failed: 数据库查询结果为空，无法进行对比",
  "statusTrace" : "api_with_db = {'api': <commons.session.JunhaoSession object at 0x000001D358829A00>, 'db': <pymysql.connections.Connection object at 0x000001D3588B2DC0>}\ndb = <pymysql.connections.Connection object at 0x000001D3588B2DC0>\n\n    @allure.title(\"头部统计\")\n    def test_getstatdata(api_with_db, db):\n        # 获取组合夹具中的接口会话和数据库连接\n        api = api_with_db[\"api\"]\n        db = api_with_db[\"db\"]\n    \n        with allure.step(\"1. 请求头部统计\"):\n            api.get('/dashboard/getStatData')\n    \n        with allure.step(\"2. 校验接口请求是否成功\"):\n            msg = api.extract_jsonpath(\"$.msg\")\n            logging.info(f\"断言：预期：success 实际：{msg}\")\n            assert \"success\" == msg, f\"是否一致：预期：success 实际：{msg} \"\n    \n        with allure.step(\"3. 获取返回数据vpsActiveNum\"):\n            vpsActiveNum = api.extract_jsonpath(\"$.data.vpsActiveNum\")\n            logging.info(f\"获取返回数据vpsActiveNum： {vpsActiveNum}\")\n    \n        with allure.step(\"4. 校验接口返回数据是否和数据库的数据一致\"):\n            # 查询数据库获取数据\n            with db.cursor() as cursor:\n                # sql = \"SELECT * FROM COLLATIONS WHERE CHARACTER_SET_NAME = 'ascii'\"\n                sql = \"SELECT * FROM COLLATIONS WHERE CHARACTER_SET_NAME = 'ascdddii'\"\n                cursor.execute(sql)\n                # 获取数据库查询结果\n                db_data = cursor.fetchall()\n    \n            # 获取数据库查询结果中第一条数据的 ID 值\n            if db_data:\n                db_first_id = db_data[0][\"ID\"]\n            else:\n>               pytest.fail(\"数据库查询结果为空，无法进行对比\")\nE               Failed: 数据库查询结果为空，无法进行对比\n\ntests\\test_api.py:73: Failed",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1749547228672,
      "stop" : 1749547228958,
      "duration" : 286
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "session",
    "time" : {
      "start" : 1749547228402,
      "stop" : 1749547228402,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "api_with_db",
    "time" : {
      "start" : 1749547228958,
      "stop" : 1749547228958,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "Failed: 数据库查询结果为空，无法进行对比",
    "statusTrace" : "api_with_db = {'api': <commons.session.JunhaoSession object at 0x000001D358829A00>, 'db': <pymysql.connections.Connection object at 0x000001D3588B2DC0>}\ndb = <pymysql.connections.Connection object at 0x000001D3588B2DC0>\n\n    @allure.title(\"头部统计\")\n    def test_getstatdata(api_with_db, db):\n        # 获取组合夹具中的接口会话和数据库连接\n        api = api_with_db[\"api\"]\n        db = api_with_db[\"db\"]\n    \n        with allure.step(\"1. 请求头部统计\"):\n            api.get('/dashboard/getStatData')\n    \n        with allure.step(\"2. 校验接口请求是否成功\"):\n            msg = api.extract_jsonpath(\"$.msg\")\n            logging.info(f\"断言：预期：success 实际：{msg}\")\n            assert \"success\" == msg, f\"是否一致：预期：success 实际：{msg} \"\n    \n        with allure.step(\"3. 获取返回数据vpsActiveNum\"):\n            vpsActiveNum = api.extract_jsonpath(\"$.data.vpsActiveNum\")\n            logging.info(f\"获取返回数据vpsActiveNum： {vpsActiveNum}\")\n    \n        with allure.step(\"4. 校验接口返回数据是否和数据库的数据一致\"):\n            # 查询数据库获取数据\n            with db.cursor() as cursor:\n                # sql = \"SELECT * FROM COLLATIONS WHERE CHARACTER_SET_NAME = 'ascii'\"\n                sql = \"SELECT * FROM COLLATIONS WHERE CHARACTER_SET_NAME = 'ascdddii'\"\n                cursor.execute(sql)\n                # 获取数据库查询结果\n                db_data = cursor.fetchall()\n    \n            # 获取数据库查询结果中第一条数据的 ID 值\n            if db_data:\n                db_first_id = db_data[0][\"ID\"]\n            else:\n>               pytest.fail(\"数据库查询结果为空，无法进行对比\")\nE               Failed: 数据库查询结果为空，无法进行对比\n\ntests\\test_api.py:73: Failed",
    "steps" : [ {
      "name" : "1. 请求头部统计",
      "time" : {
        "start" : 1749547228958,
        "stop" : 1749547229079,
        "duration" : 121
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "2. 校验接口请求是否成功",
      "time" : {
        "start" : 1749547229079,
        "stop" : 1749547229083,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "3. 获取返回数据vpsActiveNum",
      "time" : {
        "start" : 1749547229083,
        "stop" : 1749547229087,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "4. 校验接口返回数据是否和数据库的数据一致",
      "time" : {
        "start" : 1749547229087,
        "stop" : 1749547229135,
        "duration" : 48
      },
      "status" : "failed",
      "statusMessage" : "Failed: 数据库查询结果为空，无法进行对比\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\kuangjia7\\tests\\test_api.py\", line 73, in test_getstatdata\n    pytest.fail(\"数据库查询结果为空，无法进行对比\")\n  File \"D:\\pycharm_test\\.venv\\lib\\site-packages\\_pytest\\outcomes.py\", line 198, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "7342aec8a35b8c1d",
      "name" : "log",
      "source" : "7342aec8a35b8c1d.txt",
      "type" : "text/plain",
      "size" : 1558
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 4,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1749547229232,
      "stop" : 1749547229232,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "session::0",
    "time" : {
      "start" : 1749547229231,
      "stop" : 1749547229232,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "15084-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "8eb783939bf45f3a.json",
  "parameterValues" : [ ]
}