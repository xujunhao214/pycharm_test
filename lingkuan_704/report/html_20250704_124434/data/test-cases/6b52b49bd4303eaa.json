{
  "uid" : "6b52b49bd4303eaa",
  "name" : "数据库校验-策略开仓-跟单账号修改品种",
  "fullName" : "test_foundation.test_vps_scene.TestVPSOrderSend_Scence#test_dbdetail_templateId3",
  "historyId" : "890782e57962e0193050c2842ec91d15",
  "time" : {
    "start" : 1751605404392,
    "stop" : 1751605405755,
    "duration" : 1363
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 修改下单品种之后下单手数之和应该是3，实际是：1.0\nassert 1.0 == 3\n +  where 1.0 = float(1.0)",
  "statusTrace" : "self = <lingkuan_704.test_foundation.test_vps_scene.TestVPSOrderSend_Scence object at 0x00000243B6501FA0>\nvar_manager = <lingkuan_704.commons.variable_manager.VariableManager object at 0x00000243B70DE820>\ndb_transaction = <pymysql.connections.Connection object at 0x00000243B65335B0>\n\n    @allure.title(\"数据库校验-策略开仓-跟单账号修改品种\")\n    def test_dbdetail_templateId3(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            vps_trader = var_manager.get_variable(\"vps_trader\")\n            table_name = trader_ordersend[\"table_detail\"]\n            user_accounts_3 = var_manager.get_variable(\"user_accounts_3\")\n            symbol = trader_ordersend[\"symbol\"]\n    \n            sql = f\"\"\"\n                SELECT *\n                FROM {table_name}\n                WHERE symbol LIKE %s\n                  AND source_user = %s\n                  AND account = %s\n                \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                vps_trader[\"account\"],\n                user_accounts_3,\n            )\n    \n            # 使用智能等待查询\n            db_data = self.wait_for_database_record(\n                db_transaction,\n                sql,\n                params,\n                time_field=\"create_time\",\n                time_range=MYSQL_TIME,\n                timeout=WAIT_TIMEOUT,\n                poll_interval=POLL_INTERVAL,\n                order_by=\"create_time DESC\"\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            addsalve_size_templateId3 = [record[\"size\"] for record in db_data]\n            var_manager.set_runtime_variable(\"addsalve_size_templateId3\", addsalve_size_templateId3)\n            total = sum(addsalve_size_templateId3)\n>           assert float(total) == 3, f\"修改下单品种之后下单手数之和应该是3，实际是：{total}\"\nE           AssertionError: 修改下单品种之后下单手数之和应该是3，实际是：1.0\nE           assert 1.0 == 3\nE            +  where 1.0 = float(1.0)\n\ntest_foundation\\test_vps_scene.py:151: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "db",
    "time" : {
      "start" : 1751604454494,
      "stop" : 1751604454740,
      "duration" : 246
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1751604454494,
      "stop" : 1751604454494,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1751605404318,
      "stop" : 1751605404392,
      "duration" : 74
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1751604454493,
      "stop" : 1751604454494,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager",
    "time" : {
      "start" : 1751605399548,
      "stop" : 1751605399548,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 修改下单品种之后下单手数之和应该是3，实际是：1.0\nassert 1.0 == 3\n +  where 1.0 = float(1.0)",
    "statusTrace" : "self = <lingkuan_704.test_foundation.test_vps_scene.TestVPSOrderSend_Scence object at 0x00000243B6501FA0>\nvar_manager = <lingkuan_704.commons.variable_manager.VariableManager object at 0x00000243B70DE820>\ndb_transaction = <pymysql.connections.Connection object at 0x00000243B65335B0>\n\n    @allure.title(\"数据库校验-策略开仓-跟单账号修改品种\")\n    def test_dbdetail_templateId3(self, var_manager, db_transaction):\n        with allure.step(\"1. 获取订单详情界面跟单账号数据\"):\n            trader_ordersend = var_manager.get_variable(\"trader_ordersend\")\n            vps_trader = var_manager.get_variable(\"vps_trader\")\n            table_name = trader_ordersend[\"table_detail\"]\n            user_accounts_3 = var_manager.get_variable(\"user_accounts_3\")\n            symbol = trader_ordersend[\"symbol\"]\n    \n            sql = f\"\"\"\n                SELECT *\n                FROM {table_name}\n                WHERE symbol LIKE %s\n                  AND source_user = %s\n                  AND account = %s\n                \"\"\"\n            params = (\n                f\"%{symbol}%\",\n                vps_trader[\"account\"],\n                user_accounts_3,\n            )\n    \n            # 使用智能等待查询\n            db_data = self.wait_for_database_record(\n                db_transaction,\n                sql,\n                params,\n                time_field=\"create_time\",\n                time_range=MYSQL_TIME,\n                timeout=WAIT_TIMEOUT,\n                poll_interval=POLL_INTERVAL,\n                order_by=\"create_time DESC\"\n            )\n    \n        with allure.step(\"2. 校验数据\"):\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n    \n            addsalve_size_templateId3 = [record[\"size\"] for record in db_data]\n            var_manager.set_runtime_variable(\"addsalve_size_templateId3\", addsalve_size_templateId3)\n            total = sum(addsalve_size_templateId3)\n>           assert float(total) == 3, f\"修改下单品种之后下单手数之和应该是3，实际是：{total}\"\nE           AssertionError: 修改下单品种之后下单手数之和应该是3，实际是：1.0\nE           assert 1.0 == 3\nE            +  where 1.0 = float(1.0)\n\ntest_foundation\\test_vps_scene.py:151: AssertionError",
    "steps" : [ {
      "name" : "1. 获取订单详情界面跟单账号数据",
      "time" : {
        "start" : 1751605404392,
        "stop" : 1751605405753,
        "duration" : 1361
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "等待数据库记录出现",
        "time" : {
          "start" : 1751605404392,
          "stop" : 1751605405753,
          "duration" : 1361
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ {
          "uid" : "422c034e950150f0",
          "name" : "条件检查日志",
          "source" : "422c034e950150f0.txt",
          "type" : "text/plain",
          "size" : 4484
        }, {
          "uid" : "2a0cbc1e503b1325",
          "name" : "最终结果",
          "source" : "2a0cbc1e503b1325.txt",
          "type" : "text/plain",
          "size" : 29
        } ],
        "parameters" : [ ],
        "stepsCount" : 0,
        "hasContent" : true,
        "attachmentsCount" : 2,
        "shouldDisplayMessage" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 1,
      "hasContent" : true,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    }, {
      "name" : "2. 校验数据",
      "time" : {
        "start" : 1751605405753,
        "stop" : 1751605405754,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 修改下单品种之后下单手数之和应该是3，实际是：1.0\nassert 1.0 == 3\n +  where 1.0 = float(1.0)\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_704\\test_foundation\\test_vps_scene.py\", line 151, in test_dbdetail_templateId3\n    assert float(total) == 3, f\"修改下单品种之后下单手数之和应该是3，实际是：{total}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "1a3fc717a47067d2",
      "name" : "log",
      "source" : "1a3fc717a47067d2.txt",
      "type" : "text/plain",
      "size" : 4997
    } ],
    "parameters" : [ ],
    "stepsCount" : 3,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "db::0",
    "time" : {
      "start" : 1751605521046,
      "stop" : 1751605521047,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1751605405759,
      "stop" : 1751605405808,
      "duration" : 49
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1751605521050,
      "stop" : 1751605521050,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略下单-跟单修改模式、品种"
  }, {
    "name" : "parentSuite",
    "value" : "test_foundation"
  }, {
    "name" : "suite",
    "value" : "test_vps_scene"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend_Scence"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "36488-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_foundation.test_vps_scene"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6b52b49bd4303eaa.json",
  "parameterValues" : [ ]
}