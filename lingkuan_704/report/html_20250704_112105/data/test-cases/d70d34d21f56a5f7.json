{
  "uid" : "d70d34d21f56a5f7",
  "name" : "数据库校验-账号列表-修改用户是否成功",
  "fullName" : "test_foundation.test_vps_money.TestVPSOrderSend_money#test_dbupdate_user",
  "historyId" : "f60d7293b5b8d270f6a707c75ddbf926",
  "time" : {
    "start" : 1751600495885,
    "stop" : 1751600495933,
    "duration" : 48
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: 修改个人信息失败（cfd字段应为空，实际值：@）\nassert ('@' is None or '@' == ''\n  + @)",
  "statusTrace" : "self = <lingkuan_704.test_foundation.test_vps_money.TestVPSOrderSend_money object at 0x0000028DAED4DCA0>\nvar_manager = <lingkuan_704.commons.variable_manager.VariableManager object at 0x0000028DAF7BC730>\ndb_transaction = <pymysql.connections.Connection object at 0x0000028DAED1E700>\n\n    @allure.title(\"数据库校验-账号列表-修改用户是否成功\")\n    def test_dbupdate_user(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否编辑成功\"):\n            db_query = var_manager.get_variable(\"db_query\")\n    \n            # 优化后的数据库查询\n            db_data = self.query_database(\n                db_transaction,\n                f\"SELECT cfd FROM {db_query['table_trader']} WHERE account = %s\",\n                (db_query[\"account\"],),\n            )\n    \n            # 提取数据库中的值\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n            cfd_value = db_data[0][\"cfd\"]\n            # 允许为 None 或空字符串（去除空格后）\n>           assert cfd_value is None or cfd_value.strip() == \"\", f\"修改个人信息失败（cfd字段应为空，实际值：{cfd_value}）\"\nE           AssertionError: 修改个人信息失败（cfd字段应为空，实际值：@）\nE           assert ('@' is None or '@' == ''\nE             + @)\n\ntest_foundation\\test_vps_money.py:105: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "var_manager",
    "time" : {
      "start" : 1751600495839,
      "stop" : 1751600495839,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "environment",
    "time" : {
      "start" : 1751599445702,
      "stop" : 1751599445703,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_transaction",
    "time" : {
      "start" : 1751600495839,
      "stop" : 1751600495885,
      "duration" : 46
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db",
    "time" : {
      "start" : 1751599445703,
      "stop" : 1751599445934,
      "duration" : 231
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_config",
    "time" : {
      "start" : 1751599445703,
      "stop" : 1751599445703,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: 修改个人信息失败（cfd字段应为空，实际值：@）\nassert ('@' is None or '@' == ''\n  + @)",
    "statusTrace" : "self = <lingkuan_704.test_foundation.test_vps_money.TestVPSOrderSend_money object at 0x0000028DAED4DCA0>\nvar_manager = <lingkuan_704.commons.variable_manager.VariableManager object at 0x0000028DAF7BC730>\ndb_transaction = <pymysql.connections.Connection object at 0x0000028DAED1E700>\n\n    @allure.title(\"数据库校验-账号列表-修改用户是否成功\")\n    def test_dbupdate_user(self, var_manager, db_transaction):\n        with allure.step(\"1. 查询数据库验证是否编辑成功\"):\n            db_query = var_manager.get_variable(\"db_query\")\n    \n            # 优化后的数据库查询\n            db_data = self.query_database(\n                db_transaction,\n                f\"SELECT cfd FROM {db_query['table_trader']} WHERE account = %s\",\n                (db_query[\"account\"],),\n            )\n    \n            # 提取数据库中的值\n            if not db_data:\n                pytest.fail(\"数据库查询结果为空，无法提取数据\")\n            cfd_value = db_data[0][\"cfd\"]\n            # 允许为 None 或空字符串（去除空格后）\n>           assert cfd_value is None or cfd_value.strip() == \"\", f\"修改个人信息失败（cfd字段应为空，实际值：{cfd_value}）\"\nE           AssertionError: 修改个人信息失败（cfd字段应为空，实际值：@）\nE           assert ('@' is None or '@' == ''\nE             + @)\n\ntest_foundation\\test_vps_money.py:105: AssertionError",
    "steps" : [ {
      "name" : "1. 查询数据库验证是否编辑成功",
      "time" : {
        "start" : 1751600495885,
        "stop" : 1751600495932,
        "duration" : 47
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: 修改个人信息失败（cfd字段应为空，实际值：@）\nassert ('@' is None or '@' == ''\n  + @)\n",
      "statusTrace" : "  File \"D:\\pycharm_test\\lingkuan_704\\test_foundation\\test_vps_money.py\", line 105, in test_dbupdate_user\n    assert cfd_value is None or cfd_value.strip() == \"\", f\"修改个人信息失败（cfd字段应为空，实际值：{cfd_value}）\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d6e3afa4890edf91",
      "name" : "log",
      "source" : "d6e3afa4890edf91.txt",
      "type" : "text/plain",
      "size" : 475
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "var_manager::0",
    "time" : {
      "start" : 1751600691207,
      "stop" : 1751600691208,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db_transaction::0",
    "time" : {
      "start" : 1751600495937,
      "stop" : 1751600495991,
      "duration" : 54
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "db::0",
    "time" : {
      "start" : 1751600691197,
      "stop" : 1751600691197,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "VPS策略下单-跟单修改币种"
  }, {
    "name" : "parentSuite",
    "value" : "test_foundation"
  }, {
    "name" : "suite",
    "value" : "test_vps_money"
  }, {
    "name" : "subSuite",
    "value" : "TestVPSOrderSend_money"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4S9CU1E"
  }, {
    "name" : "thread",
    "value" : "30528-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_foundation.test_vps_money"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d70d34d21f56a5f7.json",
  "parameterValues" : [ ]
}