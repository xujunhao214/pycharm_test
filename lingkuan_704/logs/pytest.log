INFO     2025-07-04 17:28:57 [lingkuan_704.conftest;167]  : 测试会话开始: 2025-07-04 17:28:57
INFO     2025-07-04 17:28:57 [lingkuan_704.commons.variable_manager;38]  : 成功加载静态变量: VAR\prod_data.json
INFO     2025-07-04 17:28:57 [lingkuan_704.commons.variable_manager;54]  : 成功加载运行时变量: VAR\runtime_vars.json
INFO     2025-07-04 17:28:57 [requests.session;55]  : 初始化环境会话: prod
INFO     2025-07-04 17:28:57 [lingkuan_704.conftest;85]  : 用例 test_foundation/test_masOrderSend_copy.py::TestMasordersendcopy::test_bargain_masOrderSend 使用默认URL进行登录: http://39.99.136.49:9000
INFO     2025-07-04 17:28:57 [requests.session;110]  : [REQ-2025-07-04 17:28:57-2641553102256] 请求开始: POST http://39.99.136.49:9000/sys/auth/login
INFO     2025-07-04 17:28:57 [requests.session;111]  : [REQ-2025-07-04 17:28:57-2641553102256] 请求参数: args=(), kwargs_keys=['data', 'json']
INFO     2025-07-04 17:28:57 [requests.session;119]  : [REQ-2025-07-04 17:28:57-2641553102256] JSON请求体: {'username': 'admin', 'password': '04739db02172e04f63f5278211184deec745bad9d797882b343e7201898d8da1d9fced282f6b271d3815a5057482e62c6f6b88dacb642ba05632bd2ee348101c76cb1f86b70f91695fd1cff11fce76246f044ace477cdbfa1e3e1521b19b023b14c7165e82c5'}
INFO     2025-07-04 17:28:57 [requests.session;128]  : [REQ-2025-07-04 17:28:57-2641553102256] 请求完成: POST http://39.99.136.49:9000/sys/auth/login
INFO     2025-07-04 17:28:57 [requests.session;129]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应状态: 200
INFO     2025-07-04 17:28:57 [requests.session;130]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应耗时: 345.20ms
INFO     2025-07-04 17:28:57 [requests.session;131]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应头: {'Connection': 'close', 'Transfer-Encoding': 'chunked', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Content-Type': 'application/json', 'Date': 'Fri, 04 Jul 2025 09:28:56 GMT', 'Expires': '0', 'Pragma': 'no-cache', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Content-Type-Options': 'nosniff', 'X-Xss-Protection': '0'}
INFO     2025-07-04 17:28:57 [requests.session;137]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应JSON: {'code': 0, 'msg': 'success', 'data': {'accessTokenExpire': '2025-07-05 17:28:56', 'refreshTokenExpire': '2025-07-18 17:28:56', 'access_token': '2c0ae36151b747569b17437365792e7e', 'refresh_token': '0323874f642a460fba049f50b8f84eb6'}}
INFO     2025-07-04 17:28:57 [lingkuan_704.commons.variable_manager;100]  : 运行时变量已保存
INFO     2025-07-04 17:28:57 [requests.session;110]  : [REQ-2025-07-04 17:28:57-2641553102256] 请求开始: POST http://39.99.136.49:9000/bargain/masOrderSend
INFO     2025-07-04 17:28:57 [requests.session;111]  : [REQ-2025-07-04 17:28:57-2641553102256] 请求参数: args=(), kwargs_keys=['data', 'json']
INFO     2025-07-04 17:28:57 [requests.session;119]  : [REQ-2025-07-04 17:28:57-2641553102256] JSON请求体: {'traderList': [3977], 'type': 0, 'tradeType': 1, 'intervalTime': 100, 'symbol': 'XAUUSD', 'placedType': 0, 'startSize': '0.10', 'endSize': '1.00', 'totalNum': '3', 'totalSzie': '1.00', 'remark': '测试数据'}
INFO     2025-07-04 17:28:58 [requests.session;128]  : [REQ-2025-07-04 17:28:57-2641553102256] 请求完成: POST http://39.99.136.49:9000/bargain/masOrderSend
INFO     2025-07-04 17:28:58 [requests.session;129]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应状态: 200
INFO     2025-07-04 17:28:58 [requests.session;130]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应耗时: 324.50ms
INFO     2025-07-04 17:28:58 [requests.session;131]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应头: {'Connection': 'close', 'Transfer-Encoding': 'chunked', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Content-Type': 'application/json', 'Date': 'Fri, 04 Jul 2025 09:28:56 GMT', 'Expires': '0', 'Pragma': 'no-cache', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Content-Type-Options': 'nosniff', 'X-Xss-Protection': '0'}
INFO     2025-07-04 17:28:58 [requests.session;137]  : [REQ-2025-07-04 17:28:57-2641553102256] 响应JSON: {'code': 0, 'msg': 'success', 'data': None}
INFO     2025-07-04 17:28:58 [lingkuan_704.commons.api_base;95]  : 响应状态码: 200
INFO     2025-07-04 17:28:58 [lingkuan_704.commons.api_base;96]  : 响应内容: {"code":0,"msg":"success","data":null}
INFO     2025-07-04 17:28:58 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_instruct 
            WHERE symbol LIKE %s 
              AND master_order_status = %s 
              AND type = %s 
              AND min_lot_size = %s 
              AND max_lot_size = %s 
              AND remark = %s 
              AND total_lots = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:28:58 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: [{'id': 48305, 'instruction_type': 1, 'cloud_type': 0, 'cloud_id': None, 'cloud_name': None, 'cloud_account': None, 'symbol': 'XAUUSD', 'type': 0, 'min_lot_size': 1.0, 'max_lot_size': 0.1, 'remark': '测试数据', 'total_lots': 1.0, 'total_orders': 3, 'interval_time': 100, 'true_total_lots': 0.0, 'true_total_orders': 0, 'traded_lots': 0.0, 'traded_orders': 0, 'status': 0, 'version': 0, 'deleted': 0, 'creator': 10000, 'create_time': datetime.datetime(2025, 7, 4, 17, 28, 57), 'updater': None, 'update_time': datetime.datetime(2025, 7, 4, 17, 28, 57), 'end_time': None, 'order_no': '8068547340187', 'fail_orders': 0, 'trader_id': 5824, 'operation_type': 0, 'source_type': 1, 'if_follow': 0, 'close_type': 0, 'master_order': None, 'master_order_status': 0}]
INFO     2025-07-04 17:28:58 [root;101]  : 获取交易账号下单的订单号: 8068547340187
INFO     2025-07-04 17:28:58 [lingkuan_704.commons.variable_manager;100]  : 运行时变量已保存
INFO     2025-07-04 17:28:58 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:28:58 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:00 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:00 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:02 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:03 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:05 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:05 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:07 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:08 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:10 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:10 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:12 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:13 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:15 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:15 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:17 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:17 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:19 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:19 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:21 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:22 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:24 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:24 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:26 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:26 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:28 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_detail 
            WHERE symbol LIKE %s 
              AND send_no = %s 
              AND type = %s 
              AND trader_id = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:28 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:31 [requests.session;55]  : 初始化环境会话: prod
INFO     2025-07-04 17:29:31 [lingkuan_704.conftest;85]  : 用例 test_foundation/test_masOrderSend_copy.py::TestMasordersendcopy::test_bargain_masOrderClose 使用默认URL进行登录: http://39.99.136.49:9000
INFO     2025-07-04 17:29:31 [requests.session;110]  : [REQ-2025-07-04 17:29:31-2641553932736] 请求开始: POST http://39.99.136.49:9000/sys/auth/login
INFO     2025-07-04 17:29:31 [requests.session;111]  : [REQ-2025-07-04 17:29:31-2641553932736] 请求参数: args=(), kwargs_keys=['data', 'json']
INFO     2025-07-04 17:29:31 [requests.session;119]  : [REQ-2025-07-04 17:29:31-2641553932736] JSON请求体: {'username': 'admin', 'password': '04739db02172e04f63f5278211184deec745bad9d797882b343e7201898d8da1d9fced282f6b271d3815a5057482e62c6f6b88dacb642ba05632bd2ee348101c76cb1f86b70f91695fd1cff11fce76246f044ace477cdbfa1e3e1521b19b023b14c7165e82c5'}
INFO     2025-07-04 17:29:31 [requests.session;128]  : [REQ-2025-07-04 17:29:31-2641553932736] 请求完成: POST http://39.99.136.49:9000/sys/auth/login
INFO     2025-07-04 17:29:31 [requests.session;129]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应状态: 200
INFO     2025-07-04 17:29:31 [requests.session;130]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应耗时: 202.15ms
INFO     2025-07-04 17:29:31 [requests.session;131]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应头: {'Connection': 'close', 'Transfer-Encoding': 'chunked', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Content-Type': 'application/json', 'Date': 'Fri, 04 Jul 2025 09:29:29 GMT', 'Expires': '0', 'Pragma': 'no-cache', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Content-Type-Options': 'nosniff', 'X-Xss-Protection': '0'}
INFO     2025-07-04 17:29:31 [requests.session;137]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应JSON: {'code': 0, 'msg': 'success', 'data': {'accessTokenExpire': '2025-07-05 17:29:29', 'refreshTokenExpire': '2025-07-18 17:29:29', 'access_token': '4873a3f1e7ba4cadb250afe479902b06', 'refresh_token': 'b50ff3bc119a4eb7ac79605f424ed889'}}
INFO     2025-07-04 17:29:31 [lingkuan_704.commons.variable_manager;100]  : 运行时变量已保存
INFO     2025-07-04 17:29:31 [requests.session;110]  : [REQ-2025-07-04 17:29:31-2641553932736] 请求开始: POST http://39.99.136.49:9000/bargain/masOrderClose
INFO     2025-07-04 17:29:31 [requests.session;111]  : [REQ-2025-07-04 17:29:31-2641553932736] 请求参数: args=(), kwargs_keys=['data', 'json']
INFO     2025-07-04 17:29:31 [requests.session;119]  : [REQ-2025-07-04 17:29:31-2641553932736] JSON请求体: {'isCloseAll': 1, 'intervalTime': 100, 'traderList': [3977]}
INFO     2025-07-04 17:29:31 [requests.session;128]  : [REQ-2025-07-04 17:29:31-2641553932736] 请求完成: POST http://39.99.136.49:9000/bargain/masOrderClose
INFO     2025-07-04 17:29:31 [requests.session;129]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应状态: 200
INFO     2025-07-04 17:29:31 [requests.session;130]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应耗时: 149.44ms
INFO     2025-07-04 17:29:31 [requests.session;131]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应头: {'Connection': 'close', 'Transfer-Encoding': 'chunked', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate', 'Content-Type': 'application/json', 'Date': 'Fri, 04 Jul 2025 09:29:29 GMT', 'Expires': '0', 'Pragma': 'no-cache', 'Vary': 'Origin, Access-Control-Request-Method, Access-Control-Request-Headers', 'X-Content-Type-Options': 'nosniff', 'X-Xss-Protection': '0'}
INFO     2025-07-04 17:29:31 [requests.session;137]  : [REQ-2025-07-04 17:29:31-2641553932736] 响应JSON: {'code': 0, 'msg': 'success', 'data': None}
INFO     2025-07-04 17:29:31 [lingkuan_704.commons.api_base;95]  : 响应状态码: 200
INFO     2025-07-04 17:29:31 [lingkuan_704.commons.api_base;96]  : 响应内容: {"code":0,"msg":"success","data":null}
INFO     2025-07-04 17:29:36 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
            SELECT * 
            FROM follow_order_instruct 
            WHERE cloud_type = %s
              AND trader_id = %s
              AND operation_type = %s
             AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:36 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: [{'id': 48306, 'instruction_type': 0, 'cloud_type': 0, 'cloud_id': None, 'cloud_name': None, 'cloud_account': None, 'symbol': None, 'type': 2, 'min_lot_size': 0.0, 'max_lot_size': 0.0, 'remark': None, 'total_lots': 0.0, 'total_orders': 0, 'interval_time': 0, 'true_total_lots': 0.0, 'true_total_orders': 0, 'traded_lots': 0.0, 'traded_orders': 0, 'status': 0, 'version': 0, 'deleted': 0, 'creator': 10000, 'create_time': datetime.datetime(2025, 7, 4, 17, 29, 30), 'updater': 10000, 'update_time': datetime.datetime(2025, 7, 4, 17, 29, 30), 'end_time': None, 'order_no': '6795690430720', 'fail_orders': 0, 'trader_id': 5824, 'operation_type': 1, 'source_type': 1, 'if_follow': 0, 'close_type': 0, 'master_order': None, 'master_order_status': 0}]
INFO     2025-07-04 17:29:36 [root;217]  : 平仓之后的跟单账号持仓订单号: 6795690430720
INFO     2025-07-04 17:29:36 [lingkuan_704.commons.variable_manager;100]  : 运行时变量已保存
INFO     2025-07-04 17:29:36 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:36 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:38 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:39 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:41 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:41 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:43 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:45 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:47 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:47 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:49 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:49 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:51 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:52 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:54 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:54 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:56 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:57 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:29:59 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:29:59 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:30:01 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:30:01 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:30:03 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:30:03 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:30:05 [lingkuan_704.commons.api_base;142]  : 执行SQL查询: 
                SELECT * 
                FROM follow_order_detail 
                WHERE source_user = %s
                  AND account = %s
                  AND close_status = %s
                  AND close_no = %s
                 AND create_time BETWEEN NOW() - INTERVAL %s MINUTE AND NOW() + INTERVAL %s MINUTE ORDER BY create_time DESC
INFO     2025-07-04 17:30:05 [lingkuan_704.commons.api_base;149]  : 数据库查询结果: ()
INFO     2025-07-04 17:30:07 [lingkuan_704.commons.variable_manager;100]  : 运行时变量已保存
INFO     2025-07-04 17:30:07 [lingkuan_704.conftest;194]  : 测试会话结束，总耗时: 70.00秒
INFO     2025-07-04 17:30:07 [lingkuan_704.commons.feishu_notification;128]  : 发送飞书消息，URL: https://open.feishu.cn/open-apis/bot/v2/hook/8d3475ac-8adc-45ed-97c7-0f0ec8647a4f
ERROR    2025-07-04 17:30:07 [lingkuan_704.commons.feishu_notification;148]  : [FEISHU] 发送通知异常: HTTPSConnectionPool(host='open.feishu.cn', port=443): Max retries exceeded with url: /open-apis/bot/v2/hook/8d3475ac-8adc-45ed-97c7-0f0ec8647a4f (Caused by ProxyError('Unable to connect to proxy', OSError(0, 'Error')))
INFO     2025-07-04 17:30:07 [lingkuan_704.conftest;205]  : 飞书通知发送成功
